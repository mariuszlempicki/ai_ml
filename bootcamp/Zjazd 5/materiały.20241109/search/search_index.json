{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":[" "]},"docs":[{"location":"index.html","title":"In\u017cynier AI - Python, Liunx, Git","text":""},{"location":"linux_git/architecture.html","title":"Architektura systemu opartego na j\u0105drze Linux","text":"<p>Systemy zbudowane na j\u0105drze systemu Linux takie jak np. Debian, Fedora, Ubuntu, RHEL (Red Hat Enterprise Linux) itp. maj\u0105 zbli\u017con\u0105 architektur\u0119. Zawsze wyst\u0119puje tam podzia\u0142 na przestrze\u0144 j\u0105dra (ang. kernelspace) i przestrze\u0144 u\u017cytkownika (ang. userspace).</p>"},{"location":"linux_git/architecture.html#jadro-linux-ang-kernel","title":"J\u0105dro Linux (ang. Kernel)","text":"<p>Najwa\u017cniejsze cechy i zadania j\u0105dra Linux.</p> <ul> <li>Monolityczne j\u0105dro<ul> <li>Jedno sp\u00f3jne j\u0105dro, kt\u00f3re obs\u0142uguje zar\u00f3wno sterowniki urz\u0105dze\u0144, jak i zarz\u0105dzanie procesami</li> </ul> </li> <li>Modu\u0142y<ul> <li>Rozszerzenia j\u0105dra \u0142adowane dynamicznie, pozwalaj\u0105ce na dodawanie funkcji bez potrzeby kompilacji ca\u0142ego j\u0105dra</li> </ul> </li> <li>System plik\u00f3w (ang. filesystem)<ul> <li>Obs\u0142uga r\u00f3\u017cnorodnych system\u00f3w plik\u00f3w (np. ext4, Btrfs, XFS).</li> </ul> </li> <li>Obs\u0142uga sieci<ul> <li>Obs\u0142uga kart sieciowych</li> <li>Implementacja protoko\u0142\u00f3w sieciowych</li> </ul> </li> <li>Zarz\u0105dzanie procesami<ul> <li>Planowanie wykonania (ang. scheduling) </li> <li>Wielozadaniowo\u015b\u0107 (ang. multitasking) </li> <li>Zarz\u0105dzanie pami\u0119ci\u0105</li> </ul> </li> <li>Bezpo\u015brednia interakcja ze sprz\u0119tem<ul> <li>sterowniki</li> </ul> </li> </ul>"},{"location":"linux_git/architecture.html#przestrzen-uzytkownika","title":"Przestrze\u0144 u\u017cytkownika","text":"<p>Najwa\u017cniejsze elementy przestrzeni u\u017cytkownika</p> <ul> <li>Biblioteki<ul> <li>biblioteka standardowa C</li> <li>pozosta\u0142e biblioteki</li> </ul> </li> <li>Narz\u0119dzia systemowe<ul> <li>Zarz\u0105dzanie procesami</li> <li>Operacje na plikach</li> <li>Mened\u017cer pakiet\u00f3w (np. apt, yum, pacman)</li> <li>Konfiguracja sieci</li> <li>...</li> </ul> </li> <li>Pow\u0142oka systemowa<ul> <li>interfejs tekstowy do interakcji z systemem operacyjnym (np. bash, sh, zsh, ksh, csh)</li> </ul> </li> <li>Us\u0142ugi i demony<ul> <li>Programy dzia\u0142aj\u0105ce w tle, obs\u0142uguj\u0105ce r\u00f3\u017cne zadania systemowe</li> <li>Serwery WWW, pocztowe, plik\u00f3w, itd.</li> </ul> </li> <li>Pow\u0142oki graficzne</li> </ul>"},{"location":"linux_git/architecture.html#proces-startu-systemu-linux","title":"Proces startu systemu Linux","text":"<ul> <li>Uruchomienie BIOS/UEFI<ul> <li>Inicjacja podstawowych podzespo\u0142\u00f3w komputera</li> <li>Start ze wskazanego urz\u0105dzenia rozruchowego</li> </ul> </li> <li>\u0141adowanie bootloadera<ul> <li>Na urz\u0105dzeniu rozruchowym znajduje si\u0119 bootloader (np. GRUB), kt\u00f3ry jest uruchamiany</li> </ul> </li> <li>Uruchomienie j\u0105dra systemu<ul> <li>J\u0105dro zostaje za\u0142adowane do pami\u0119ci</li> <li>Je\u015bli zosta\u0142 za\u0142adowany obraz dysku RAM to jest z niego uruchamiany podstawowy system<ul> <li>Pozwala np. zainstalowa\u0107 sterowniki niezb\u0119dnych do obs\u0142ugi dysku z kt\u00f3rego nast\u0119puje start systemu</li> </ul> </li> </ul> </li> <li>Proces inicjuj\u0105cy<ul> <li>Po inicjacji j\u0105dra, kontrol\u0119 nad systemem przejmuje pierwszy proces u\u017cytkownika o PID=1 (PID - Process ID)</li> <li>W tradycyjnych systemach Linux, tym procesem jest init z pakietu sysvinit.</li> <li>Cz\u0119sto w nowoczesnych systemach u\u017cywany jest systemd<ul> <li>Np. Debian, Ubuntu, Fedora</li> </ul> </li> <li>Proces o PID=1 jest odpowiedzialny za uruchomienie wszystkich innych proces\u00f3w w systemie oraz za zarz\u0105dzanie nimi i zamkni\u0119cie systemu<ul> <li>Wynikiem tego jest organizacja proces\u00f3w w formie drzewa</li> </ul> </li> <li>Proces inicuj\u0105cy odpowiada za uruchomienie wszystkich podsystem\u00f3w i us\u0142ug zdefiniowanych dla danego systemu operacyjnego</li> </ul> </li> <li>Logowanie<ul> <li>Po inicjacji systemu, u\u017cytkownik mo\u017ce si\u0119 zalogowa\u0107, albo przy u\u017cyciu konsoli tekstowwej, albo w trybie graficznym przy pomocy kt\u00f3rego\u015b z mened\u017cer\u00f3w logowania (np. GDM, LightDM)</li> </ul> </li> </ul>"},{"location":"linux_git/architecture.html#system-v-init-vs-systemd","title":"System V init vs. Systemd","text":"System V init systemd Inicjacja Bazuje na skryptach inicjacyjnych. U\u017cywa \"jednostek\" (ang. units), kt\u00f3re s\u0105 zapisywane w formie plik\u00f3w konfiguracyjnych. Konfiguracja Skrypty inicjacyjne w <code>/etc/rc.d</code> lub <code>/etc/init.d</code>. Pliki jednostek w <code>/etc/systemd/system</code> lub <code>/lib/systemd/system</code>. Zale\u017cno\u015bci Kolejno\u015b\u0107 uruchamiania jest ustalana manualnie; brak jasno okre\u015blonych zale\u017cno\u015bci mi\u0119dzy us\u0142ugami. Zale\u017cno\u015bci s\u0105 jasno okre\u015blone w plikach jednostek, co pozwala na r\u00f3wnoleg\u0142e uruchamianie us\u0142ug. Obs\u0142uga U\u017cywa polece\u0144 takich jak <code>service</code> lub bezpo\u015brednie wywo\u0142ywanie skrypt\u00f3w inicjacyjnych. U\u017cywa polecenia <code>systemctl</code>. Zintegrowane narz\u0119dzia Ograniczone narz\u0119dzia. Wiele zintegrowanych narz\u0119dzi, takich jak <code>journalctl</code> do logowania czy <code>networkd</code> do konfiguracji sieci. Zgodno\u015b\u0107 Starszy i szeroko rozpowszechniony w wielu dystrybucjach przed pojawieniem si\u0119 systemd. Nowoczesny i obecnie domy\u015blny w wielu nowszych dystrybucjach. Zarz\u0105dzanie us\u0142ugami Skrypty musz\u0105 by\u0107 r\u0119cznie tworzone i konfigurowane. Prostsze i bardziej jednolite zarz\u0105dzanie dzi\u0119ki plikom jednostek. Logowanie Tradycyjne logi w plikach tekstowych. Zintegrowany system journaling z <code>journald</code>."},{"location":"linux_git/filesystem.html","title":"System plik\u00f3w","text":""},{"location":"linux_git/filesystem.html#czym-jest-system-plikow","title":"Czym jest system plik\u00f3w","text":"<p>System plik\u00f3w w systemie Linux to hierarchiczna struktura organizacji danych na no\u015bnikach pami\u0119ci masowej, kt\u00f3ra umo\u017cliwia przechowywanie, dost\u0119p i zarz\u0105dzanie plikami i katalogami.</p> <ul> <li>System plik\u00f3w w systemie Linux sk\u0142ada si\u0119 z jednego drzewa</li> <li>Katalog g\u0142\u00f3wny (ang. root directory) (/)<ul> <li>najwy\u017cszy poziom w hierarchii systemu plik\u00f3w</li> <li>Wszystkie pliki katalogi po\u0142o\u017cone s\u0105 poni\u017cej katalogu g\u0142\u00f3wnego</li> </ul> </li> <li>Katalog domowy (ang. home directory) (~)<ul> <li>Ka\u017cdy u\u017cytkownik ma sw\u00f3j katalog domowy</li> <li>Standardowo katalog domowy u\u017cytkownika nazywa si\u0119 tak samo jak u\u017cytkownik i znajduje si\u0119 w drzewie <code>/home</code><ul> <li><code>/home/johndoe</code> - katalog domowy u\u017cytkownika <code>johndoe</code></li> </ul> </li> </ul> </li> <li>Punkt montowania<ul> <li>Jest to miejsce w systemie plik\u00f3w (katalog) w kt\u00f3rym \"montowany\"/do\u0142\u0105czany jest system plik\u00f3w</li> <li>Tym sposobem systemy plik\u00f3w zawarte na urz\u0105dzeniach zewn\u0119trznych s\u0105 widoczne g\u0142\u00f3wnym drzewie katalog\u00f3w</li> <li>Podobnie jest z pod\u0142\u0105czaniem partycji dysk\u00f3w</li> <li>do obs\u0142ugi montowania i podgl\u0105du punkt\u00f3w montowania s\u0142u\u017cy komenda <code>mount</code></li> </ul> </li> <li>Atrybuty plik\u00f3w<ul> <li>Ka\u017cdy plik lub katalog maj\u0105 ustalone atrybuty takie jak:<ul> <li>w\u0142a\u015bciciel i grupa pliku</li> <li>prawa dost\u0119pu</li> <li>rozmiar</li> <li>data modyfikacji</li> </ul> </li> <li>Komendy<ul> <li><code>chmod</code> - zarz\u0105dzanie uprawnieniami pliku</li> <li><code>chown</code> - zarz\u0105dzanie w\u0142asno\u015bci\u0105 pliku</li> </ul> </li> </ul> </li> </ul>"},{"location":"linux_git/filesystem.html#wyswietlanie-zawartosci-katalogu","title":"Wy\u015bwietlanie zawarto\u015bci katalogu","text":"<pre><code>$ ls\n</code></pre> <pre><code>plik1.txt\nfolder1/\nplik2.jpg\n</code></pre> <pre><code>$ ls -l\n</code></pre> <pre><code>total 8\n-rw-r--r-- 1 u\u017cytkownik u\u017cytkownik  100 Oct 14 10:00 plik1.txt\ndrwxr-xr-x 2 u\u017cytkownik u\u017cytkownik 4096 Oct 14 10:01 folder1/\n-rw-r--r-- 1 u\u017cytkownik u\u017cytkownik 2000 Oct 14 10:02 plik2.jpg\n</code></pre> <pre><code>$ ls /\u015bcie\u017cka/do/katalogu\n</code></pre> <pre><code>plik3.doc\nfolder2/\n</code></pre> <pre><code>$ ls -a\n</code></pre> <pre><code>.\n..\n.plikukryty\nplik1.txt\nfolder1/\nplik2.jpg\n</code></pre>"},{"location":"linux_git/filesystem.html#wasnosc-pliku-i-uprawnienia-dostepu","title":"W\u0142asno\u015b\u0107 pliku i uprawnienia dost\u0119pu","text":"<pre><code>-rw-r--r--  1 root  root      10593 Mar 31  2022 sensors3.conf\ndrwxr-xr-x  2 root  root       4096 Sep 24 06:45 sensors.d\n-rw-r--r--  1 root  root      12813 Mar 27  2021 services\ndrwxr-xr-x  3 root  root       4096 Sep 24 06:48 sgml\n-rw-r-----  1 root  shadow     1693 Sep 24 06:55 shadow\n-rw-r-----  1 root  shadow     1693 Sep 24 06:55 shadow-\n</code></pre> <p>Warto\u015bci w kolejnych kolumnach oznaczaj\u0105:</p> <ol> <li>Typ i prawa dost\u0119pu<ul> <li>Pierwszy znak - typ pliku <code>-</code> - plik, <code>d</code> - katalog</li> <li>kolejne 9 znak\u00f3w okre\u015bla prawa dost\u0119pu:<ul> <li><code>r</code> - odczyt, <code>w</code> - zapis, <code>x</code> - wykonanie</li> <li>powt\u00f3rzone trzykrotnie odpowiednio dla w\u0142a\u015bciciela, grupy, innych u\u017cytkownik\u00f3w</li> </ul> </li> </ul> </li> <li>Liczba dowi\u0105za\u0144 (link\u00f3w)</li> <li>W\u0142a\u015bciciel (ang. owner)</li> <li>Grupa (ang. group)</li> <li>Rozmiar (domy\u015blnie w bajtach)</li> <li>Data i czas modyfikacji</li> <li>Nazwa pliku lub katalogu</li> </ol>"},{"location":"linux_git/filesystem.html#dowiazania-linki-twarde-i-symboliczne","title":"Dowi\u0105zania (linki) twarde i symboliczne","text":"<p>Dowi\u0105zania twarde i symboliczne s\u0105 r\u00f3\u017cnymi sposobami na tworzenie odno\u015bnik\u00f3w do plik\u00f3w i katalog\u00f3w w systemach Unix/Linux.</p>"},{"location":"linux_git/filesystem.html#dowiazania-twarde","title":"Dowi\u0105zania twarde","text":"<ul> <li>Dowi\u0105zania twarde pozwalaj\u0105 na tworzenie wielu referencji (dowi\u0105za\u0144) do tego samego pliku</li> <li>Ka\u017cde dowi\u0105zanie twarde jest traktowane jako r\u00f3wnowa\u017cny z oryginalnym plikiem</li> <li>Nie tworz\u0105 kopii oryginalnego pliku<ul> <li>Wszystkie dowi\u0105zania wskazuj\u0105 na t\u0119 sam\u0105 zawarto\u015b\u0107 na dysku.</li> </ul> </li> <li>Usuni\u0119cie dowi\u0105zania twardego nie wp\u0142ywa na zawarto\u015b\u0107 oryginalnego pliku ani na inne dowi\u0105zania<ul> <li>Plik zostaje usuni\u0119ty tylko wtedy, gdy zostan\u0105 usuni\u0119te wszystkie dowi\u0105zania do niego</li> </ul> </li> <li>Wskazuj\u0105 na t\u0119 sam\u0105 \u015bcie\u017ck\u0119 fizyczn\u0105 do pliku lub katalogu</li> <li>Nie dzia\u0142aj\u0105 na katalogach z poziomu innych system\u00f3w plik\u00f3w<ul> <li>Nie mo\u017cna tworzy\u0107 dowi\u0105za\u0144 mi\u0119dzy r\u00f3\u017cnymi partycjami</li> </ul> </li> <li>Nie mo\u017cna tworzy\u0107 link\u00f3w twardych do katalog\u00f3w</li> </ul>"},{"location":"linux_git/filesystem.html#dowiazania-symboliczne-symlink","title":"Dowi\u0105zania symboliczne (symlink)","text":"<ul> <li>Dowi\u0105zania symboliczne s\u0105 jak skr\u00f3ty lub wska\u017aniki do oryginalnego pliku lub katalogu<ul> <li>Zawieraj\u0105 \u015bcie\u017ck\u0119 do oryginalnego pliku jako tekst</li> </ul> </li> <li>Mog\u0105 wskazywa\u0107 na pliki lub katalogi, kt\u00f3re nie istniej\u0105<ul> <li>Je\u015bli oryginalny plik zostanie usuni\u0119ty lub przeniesiony to mamy do czynienia z uszkodzonym dowi\u0105zaniem</li> </ul> </li> <li>Mog\u0105 wskazywa\u0107 na pliki lub katalogi w innych systemach plik\u00f3w</li> </ul>"},{"location":"linux_git/filesystem.html#tworzenie-dowiazan","title":"Tworzenie dowi\u0105za\u0144","text":"<pre><code>ln plik_oryginalny dowiazanie_twarde\n</code></pre> <pre><code>touch plik1.txt  # Tworzenie oryginalnego pliku\nln plik1.txt link_twardy  # Tworzenie dowi\u0105zania twardego do pliku1.txt\n</code></pre> <pre><code>ln -s cel dowiazanie_symboliczne\n</code></pre> <pre><code>touch plik2.txt  # Tworzenie oryginalnego pliku\nln -s plik2.txt link_symboliczny  # Tworzenie dowi\u0105zania symbolicznego do plik2.txt\n</code></pre>"},{"location":"linux_git/filesystem.html#struktura-katalogow-w-systemie-linux","title":"Struktura katalog\u00f3w w systemie Linux","text":"<pre><code>/\n\u251c\u2500\u2500 bin -&gt; usr/bin\n\u251c\u2500\u2500 boot\n\u251c\u2500\u2500 dev\n\u251c\u2500\u2500 etc\n\u251c\u2500\u2500 home\n\u251c\u2500\u2500 lib -&gt; usr/lib\n\u251c\u2500\u2500 lost+found\n\u251c\u2500\u2500 media\n\u251c\u2500\u2500 mnt\n\u251c\u2500\u2500 opt\n\u251c\u2500\u2500 proc\n\u251c\u2500\u2500 root\n\u251c\u2500\u2500 run\n\u251c\u2500\u2500 sbin -&gt; usr/sbin\n\u251c\u2500\u2500 snap\n\u251c\u2500\u2500 srv\n\u251c\u2500\u2500 swap.img\n\u251c\u2500\u2500 sys\n\u251c\u2500\u2500 tmp\n\u251c\u2500\u2500 usr\n\u2514\u2500\u2500 var\n</code></pre>"},{"location":"linux_git/filesystem.html#wybrane-katalogi-w-systemie-linux","title":"Wybrane katalogi w systemie Linux","text":"<p>Note</p> <p>W Linuksie cz\u0119sto u\u017cywa si\u0119 plik\u00f3w do reprezentowania r\u00f3\u017cnych zasob\u00f3w</p> <ul> <li><code>/etc</code> - konfiguracja systemowa</li> <li><code>/dev</code> - katalog zawieraj\u0105cy pliki urz\u0105dze\u0144</li> <li><code>/proc</code> - wirtualny system plik\u00f3w prezentuj\u0105cy informacje o procesach i zasobach</li> <li><code>/home</code> - katalogi domowe u\u017cytkownik\u00f3w</li> <li><code>/usr</code> - katalog zawieraj\u0105cy oprogramowanie u\u017cytkownik\u00f3w</li> <li><code>/opt</code> - opcjonalne oprogramowanie</li> <li><code>/var</code> - pliki zmienne np. logi, kolejki mailowe</li> <li><code>/tmp</code> - pliki tymczasowe tworzone przez r\u00f3\u017cne programy</li> </ul>"},{"location":"linux_git/filesystem.html#poruszanie-sie-po-drzewie-katalogow","title":"Poruszanie si\u0119 po drzewie katalog\u00f3w","text":"<ul> <li>Przej\u015bcie do katalogu</li> </ul> <pre><code>cd /sciezka/do/zasobu\n</code></pre> <pre><code>cd sciezka/wzgledna/do/zasobu\n</code></pre> <ul> <li>Przej\u015bcie do katalogu nadrz\u0119dnego</li> </ul> <pre><code>cd ..\n</code></pre> <ul> <li>Przej\u015bcie do katalogu domowego</li> </ul> <pre><code>cd\n</code></pre> <ul> <li>Powr\u00f3t do poprzedniej lokalizacji</li> </ul> <pre><code>cd -\n</code></pre> <ul> <li>Wy\u015bwietlenie bie\u017c\u0105cej \u015bcie\u017cki</li> </ul> <pre><code>pwd\n</code></pre>"},{"location":"linux_git/processes.html","title":"Procesy w systemie Linux","text":"<p>W systemie Linux proces to dzia\u0142aj\u0105cy program. Proces sk\u0142ada si\u0119 z kodu programu oraz aktualnych warto\u015bci danych, kt\u00f3re s\u0105 u\u017cywane przez program. Ka\u017cdy proces ma unikalne ID, kt\u00f3re jest nazywane PID (Process ID).</p>"},{"location":"linux_git/processes.html#narzedzie-ps","title":"Narz\u0119dzie <code>ps</code>","text":"<p>Komenda <code>ps</code> s\u0142u\u017cy do wy\u015bwietlania aktualnie dzia\u0142aj\u0105cych proces\u00f3w w systemie. </p> <pre><code>ps aux\n</code></pre> <p>Znaczenie kolumn w wyniku dzia\u0142ania</p> <ul> <li>USER: U\u017cytkownik, kt\u00f3ry jest w\u0142a\u015bcicielem procesu.</li> <li>PID: Numer identyfikacyjny procesu.</li> <li>%CPU: Procent czasu procesora u\u017cywanego przez proces.</li> <li>%MEM: Procent pami\u0119ci RAM u\u017cywanej przez proces.</li> <li>VSZ: Wielko\u015b\u0107 wirtualnej pami\u0119ci u\u017cywanej przez proces (w kilobajtach).</li> <li>RSS: Wielko\u015b\u0107 pami\u0119ci fizycznej u\u017cywanej przez proces (w kilobajtach).</li> <li>TTY: Terminal, z kt\u00f3rego proces zosta\u0142 uruchomiony (lub \"?\" je\u015bli nie jest zwi\u0105zany z terminalem).</li> <li>STAT: Status procesu (np. \"R\" oznacza, \u017ce proces jest w trakcie dzia\u0142ania).</li> <li>START: Czas rozpocz\u0119cia procesu.</li> <li>TIME: \u0141\u0105czny czas CPU u\u017cywany przez proces.</li> <li>COMMAND: Polecenie, kt\u00f3re uruchomi\u0142o proces.</li> </ul>"},{"location":"linux_git/processes.html#narzedzie-top","title":"Narz\u0119dzie <code>top</code>","text":"<p>Komenda `top`` wy\u015bwietla dynamiczny, aktualizowany na bie\u017c\u0105co widok proces\u00f3w dzia\u0142aj\u0105cych w systemie.</p> <p>G\u0142\u00f3wne kolumny w top:</p> <ul> <li>PID: Numer identyfikacyjny procesu.</li> <li>USER: U\u017cytkownik, kt\u00f3ry jest w\u0142a\u015bcicielem procesu.</li> <li>PR: Priorytet procesu.</li> <li>NI: Warto\u015b\u0107 \"nice\" procesu, kt\u00f3ra okre\u015bla przywileje procesu wzgl\u0119dem innych proces\u00f3w.</li> <li>VIRT: Wielko\u015b\u0107 wirtualnej pami\u0119ci u\u017cywanej przez proces.</li> <li>RES: Wielko\u015b\u0107 pami\u0119ci fizycznej u\u017cywanej przez proces.</li> <li>SHR: Ilo\u015b\u0107 pami\u0119ci dzielonej u\u017cywanej przez proces.</li> <li>%CPU: Procent czasu procesora u\u017cywanego przez proces.</li> <li>%MEM: Procent pami\u0119ci RAM u\u017cywanej przez proces.</li> <li>TIME+: \u0141\u0105czny czas CPU u\u017cywany przez proces.</li> <li>COMMAND: Polecenie, kt\u00f3re uruchomi\u0142o proces.</li> </ul>"},{"location":"linux_git/processes.html#sygnay","title":"Sygna\u0142y","text":"<p>Sygna\u0142y to mechanizm komunikacji mi\u0119dzyprocesowej w systemie Linux. Pozwalaj\u0105 jednemu procesowi wys\u0142a\u0107 informacj\u0119 (sygna\u0142) do innego procesu.</p> <p>Przyk\u0142ady sygna\u0142\u00f3w:</p> <ul> <li>SIGTERM (15): Prosi proces o zako\u0144czenie dzia\u0142ania.</li> <li>SIGKILL (9): Natychmiastowo ko\u0144czy dzia\u0142anie procesu.</li> <li>SIGINT (2): Przerwanie procesu (cz\u0119sto generowane przez Ctrl+C).</li> </ul>"},{"location":"linux_git/processes.html#polecenie-kill","title":"Polecenie <code>kill</code>","text":"<p>Aby wys\u0142a\u0107 sygna\u0142 do procesu, u\u017cywa si\u0119 polecenia kill. Na przyk\u0142ad, aby zako\u0144czy\u0107 proces o PID 1234, mo\u017cna u\u017cy\u0107</p> <pre><code>kill -SIGTERM 1234\nkill -15 1234\nkill 1234\n</code></pre>"},{"location":"linux_git/terminal.html","title":"Terminal i praca w pow\u0142oce systemowej","text":""},{"location":"linux_git/terminal.html#terminal","title":"Terminal","text":"<p>Terminal, nazywany tak\u017ce emulatorem terminala.  - Interfejs umo\u017cliwiaj\u0105cy u\u017cytkownikowi interakcj\u0119 z komputerem poprzez wpisywanie tekstowych polece\u0144 i odbieranie tekstowych odpowiedzi - W \u015brodowiskach graficznych, terminal cz\u0119sto jest reprezentowany przez aplikacj\u0119 okienkow\u0105 np. GNOME Terminal, Konsole, XTerm</p>"},{"location":"linux_git/terminal.html#powoka-ang-shell","title":"Pow\u0142oka (ang. shell)","text":"<ul> <li>Pow\u0142oka systemowa to program, kt\u00f3ry interpretuje polecenia wprowadzone przez u\u017cytkownika i odpowiada za ich wykonanie.</li> <li>W systemie operacyjnym Linux istnieje wiele pow\u0142ok np. sh (Bourne Shell), bash (Bourne Again SHell), zsh</li> <li>Pow\u0142oka pozwala m.in. na wykonywanie polece\u0144, skrypt\u00f3w, zarz\u0105dzanie strumieniami danych itd.</li> <li>Pow\u0142oki systemowe w sysemie Linux bazuj\u0105 najcz\u0119\u015bciej na bibliotece <code>readline</code> co pozwala na u\u017cycie poni\u017cszych skr\u00f3t\u00f3w klawiszowych</li> </ul>"},{"location":"linux_git/terminal.html#skroty-klawiszowe","title":"Skr\u00f3ty klawiszowe","text":"<ul> <li>Kursor w lewo: Left lub Ctrl+B</li> <li>Kursor w prawo: Right lub Ctrl+F</li> <li>Pocz\u0105tek linii: Ctrl+A</li> <li>Koniec linii: Ctrl+E</li> <li>Nast\u0119pne s\u0142owo: Alt+F lub Esc a nast\u0119pnie F</li> <li>Poprzednie s\u0142owo: Alt+B lub Esc a nast\u0119pnie B</li> <li>Usu\u0144 znak pod kursorem: Ctrl+D</li> <li>Usu\u0144 znak przed kursorem: Backspace</li> <li>Usu\u0144 od kursora do ko\u0144ca linii: Ctrl+K</li> <li>Usu\u0144 od kursora do pocz\u0105tku linii: Ctrl+U</li> <li>Usu\u0144 s\u0142owo przed kursorem: Ctrl+W</li> <li>Wycofaj ostatni\u0105 operacj\u0119: Ctrl+_ lub Ctrl+X nast\u0119pnie Ctrl+U</li> <li>Wklej: Ctrl+Y</li> <li>Szukaj w historii: Ctrl+R</li> </ul>"},{"location":"linux_git/cli/basics.html","title":"Podstawowe komendy","text":""},{"location":"linux_git/cli/basics.html#obsuga-plikow","title":"Obs\u0142uga plik\u00f3w","text":""},{"location":"linux_git/cli/basics.html#podstawowe-komendy-w-linii-polecen-linuksa-do-obsugi-operacji-na-plikach","title":"Podstawowe komendy w linii polece\u0144 Linuksa do obs\u0142ugi operacji na plikach","text":"<ul> <li> <p><code>ls</code> - Wy\u015bwietla zawarto\u015b\u0107 katalogu     <code>ls -l</code> - wy\u015bwietla zawarto\u015b\u0107 katalogu w formie listy z dodatkowymi informacjami</p> </li> <li> <p><code>pwd</code> - Wy\u015bwietla aktualny katalog roboczy</p> </li> <li> <p><code>cd</code> - Zmienia aktualny katalog roboczy</p> <ul> <li><code>cd /home/uzytkownik</code> - przechodzi do katalogu <code>/home/uzytkownik</code></li> </ul> </li> <li> <p><code>touch</code> - Tworzy nowy, pusty plik lub aktualizuje dat\u0119 dost\u0119pu do istniej\u0105cego pliku</p> <ul> <li><code>touch nowy_plik.txt</code></li> </ul> </li> <li> <p><code>cp</code> - Kopiuje pliki i katalogi.  </p> <ul> <li><code>cp zrodlo.txt cel.txt</code> - kopiuje plik <code>zrodlo.txt</code> do <code>cel.txt</code>.</li> </ul> </li> <li> <p><code>mv</code> - Przenosi lub zmienia nazw\u0119 plik\u00f3w i katalog\u00f3w</p> <ul> <li><code>mv stary.txt nowy.txt</code> - zmienia nazw\u0119 pliku z <code>stary.txt</code> na <code>nowy.txt</code>.</li> </ul> </li> <li> <p><code>rm</code> - Usuwa pliki i katalogi</p> <ul> <li><code>rm plik.txt</code> - usuwa <code>plik.txt</code>.</li> </ul> </li> <li> <p><code>mkdir</code> - Tworzy nowy katalog</p> <ul> <li><code>mkdir nowy_katalog</code></li> </ul> </li> <li> <p><code>rmdir</code> - Usuwa pusty katalog</p> <ul> <li><code>rmdir stary_katalog</code></li> </ul> </li> <li> <p><code>cat</code> - Wy\u015bwietla zawarto\u015b\u0107 pliku</p> <ul> <li><code>cat plik.txt</code></li> </ul> </li> <li> <p><code>head</code> - Wy\u015bwietla pocz\u0105tkowe linie pliku</p> <ul> <li><code>head -n 5 plik.txt</code> - wy\u015bwietla pierwsze 5 linii pliku.</li> </ul> </li> <li> <p><code>tail</code> - Wy\u015bwietla ko\u0144cowe linie pliku</p> <ul> <li><code>tail -n 5 plik.txt</code> - wy\u015bwietla ostatnie 5 linii pliku.</li> </ul> </li> <li> <p><code>ln</code> - Tworzy linki do plik\u00f3w (twarde lub symboliczne)</p> <ul> <li><code>ln -s zrodlo.txt link.txt</code> - tworzy link symboliczny <code>link.txt</code> do pliku <code>zrodlo.txt</code>.</li> </ul> </li> <li> <p><code>find</code> - Wyszukuje pliki na podstawie r\u00f3\u017cnych kryteri\u00f3w.  </p> <ul> <li><code>find /home -name '*.txt'</code> - szuka wszystkich plik\u00f3w z rozszerzeniem <code>.txt</code> w katalogu <code>/home</code>.</li> </ul> </li> <li> <p><code>chmod</code> - Zmienia prawa dost\u0119pu do pliku.  </p> </li> <li> <p><code>chmod 755 plik.txt</code> - nadaje plikowi prawa odczytu, zapisu i wykonania dla w\u0142a\u015bciciela oraz prawa odczytu i wykonania dla grupy i innych u\u017cytkownik\u00f3w.</p> </li> <li> <p><code>chown</code> - Zmienia w\u0142a\u015bciciela i/lub grup\u0119 pliku.  </p> <ul> <li><code>chown uzytkownik:grupa plik.txt</code> - zmienia w\u0142a\u015bciciela pliku na \"uzytkownik\" oraz grup\u0119 na \"grupa\".</li> </ul> </li> </ul>"},{"location":"linux_git/cli/env.html","title":"Zmienne \u015brodowiskowe","text":"<p>Specjalne zmienne przechowuj\u0105ce informacje o \u015brodowisku pracy, dost\u0119pne dla proces\u00f3w w systemie</p> <ul> <li>Wy\u015bwietlenie warto\u015bci zmiennej \u015brodowiskowej <code>PATH</code></li> </ul> <pre><code>echo $PATH\n</code></pre> <ul> <li>Ustawienie nowej warto\u015bci dla zmiennej <code>MY_VARIABLE</code></li> </ul> <pre><code>MY_VARIABLE=\"Nowa warto\u015b\u0107\"\n</code></pre> <ul> <li> <p>export - Ustawia zmienn\u0105 \u015brodowiskow\u0105, tak aby by\u0142a dost\u0119pna dla innych proces\u00f3w.</p> <ul> <li>Eksportowanie zmiennej <code>MY_VARIABLE</code> do \u015brodowiska</li> </ul> <pre><code>export MY_VARIABLE\n</code></pre> <ul> <li>Ustawienie i eksportowanie zmiennej</li> </ul> <pre><code>export ANOTHER_VARIABLE=\"Warto\u015b\u0107\"\n</code></pre> </li> <li> <p>env - Komenda s\u0142u\u017c\u0105ca do wy\u015bwietlania i modyfikowania zmiennych \u015brodowiskowych.</p> <ul> <li>Wy\u015bwietlenie wszystkich zmiennych \u015brodowiskowych</li> </ul> <pre><code>env\n</code></pre> <ul> <li>Uruchomienie programu z okre\u015blonym \u015brodowiskiem</li> </ul> <pre><code>env VAR1=\"value1\" VAR2=\"value2\" some_program\n</code></pre> <ul> <li>Czyszczenie \u015brodowiska i uruchomienie programu</li> </ul> <pre><code>env -i some_program\n</code></pre> </li> </ul>"},{"location":"linux_git/cli/exercises.html","title":"Zadania","text":""},{"location":"linux_git/cli/exercises.html#zadania","title":"Zadania","text":""},{"location":"linux_git/cli/exercises.html#zestaw-1","title":"Zestaw 1","text":"<ol> <li>U\u017cywaj\u0105c echo, zapisz tekst \"Hello, Linux!\" do pliku o nazwie <code>output.txt</code></li> <li>U\u017cywaj\u0105c cat, pr\u00f3buj wy\u015bwietli\u0107 zawarto\u015b\u0107 nieistniej\u0105cego pliku<ul> <li>Przekieruj komunikat b\u0142\u0119du do pliku <code>error.txt</code></li> <li>Wy\u015bwietl zawarto\u015b\u0107 pliku <code>error.txt</code> na ekranie</li> </ul> </li> <li>Utw\u00f3rz komend\u0119, kt\u00f3ra spr\u00f3buje wy\u015bwietli\u0107 naraz plik istniej\u0105cy i nieistniej\u0105cy<ul> <li>Przekieruj standardowe wyj\u015bcie i wyj\u015bcie b\u0142\u0119d\u00f3w do jednego pliku</li> <li>Przekieruj tylko standardowe wyj\u015bcie do pliku, wyj\u015bcie b\u0142\u0119d\u00f3w powinno zosta\u0107 na konsoli</li> <li>Przekieruj standardowe wyj\u015bcie do pliku, a wyj\u015bcie b\u0142\u0119d\u00f3w do /dev/null</li> </ul> </li> <li>U\u017cyj komendy cat bez argument\u00f3w<ul> <li>Wpisz dowolny wielolinijkowy tekst i naci\u015bnij Ctrl+D</li> <li>Czy potrafisz wyja\u015bni\u0107 dzia\u0142anie tej komendy?</li> </ul> </li> </ol>"},{"location":"linux_git/cli/exercises.html#zestaw-2","title":"Zestaw 2","text":"<ol> <li>Znajd\u017a unikalne s\u0142owa w pliku words.txt</li> <li>Policz ile razy ka\u017cde s\u0142owo wyst\u0119puje w pliku words.txt</li> <li>Wy\u015bwietl pierwsze 5 linii z pliku numbers.txt</li> <li>Wy\u015bwietl najcz\u0119\u015bciej wyst\u0119puj\u0105ce s\u0142owo w pliku words.txt</li> </ol>"},{"location":"linux_git/cli/exercises.html#zestaw-3","title":"Zestaw 3","text":"<ol> <li>Wyszukaj s\u0142owa wyst\u0119puj\u0105ce tylko w pliku words1.txt lub words2.txt, ale nie w obu</li> <li>Wyszukaj s\u0142owa wsp\u00f3lne dla plik\u00f3w words1.txt i words2.txt</li> </ol>"},{"location":"linux_git/cli/exercises.html#zestaw-4","title":"Zestaw 4","text":"<ol> <li>Wy\u015bwietl plik shakespeare.txt w spos\u00f3b wygodny do czytania i wyszukiwania</li> <li>Wy\u015bwietl pierwsze 20 linii z pliku sherlock.txt.</li> <li>Ile s\u0142\u00f3w jest u\u017cywanych w pliku sherlock.txt? Ile linii ma ten plik?</li> <li>Wydrukuj wszystkie linie, kt\u00f3re zawieraj\u0105 s\u0142owo \"castle\" w plikach shakespeare.txt lub sherlock.txt.<ul> <li>Policz linie w wyniku</li> </ul> </li> <li>Wydrukuj wszystkie linie, kt\u00f3re zawieraj\u0105 s\u0142owo \"castle\" w pliku shakespeare.txt, ale nie zawieraj\u0105 s\u0142owa \"the\".<ul> <li>Zmie\u0144 wyszukiwanie tak, aby nie uwzgl\u0119dnia\u0142o wielko\u015bci liter i zapisz znalezione linie w pliku castle-lines.txt.</li> </ul> </li> <li>Wydrukuj ostatnie 30 linii z pliku sherlock.txt posortowanych w odwrotnej kolejno\u015bci alfabetycznej (od z do a).</li> <li> <p>Plik random.txt zawiera 100 losowych liczb od 1 do 1000. Wy\u015bwietl numery z pliku w kolejno\u015bci rosn\u0105cej.</p> </li> <li> <p>Plik marvel.txt zawiera pewne informacje o postaciach z serii marvel.</p> <ul> <li>Wy\u015bwietl tylko nazwy postaci.</li> <li>Wy\u015bwietl wszystkie informacje o postaciach opr\u00f3cz informacji o w\u0142osach.</li> <li>Wy\u015bwietl informacje z poprzedniego punktu, ale wyj\u015bciowe informacje powinny by\u0107 oddzielone znakiem \"|\" zamiast \",\".</li> </ul> </li> <li> <p>Znajd\u017a lokalizacj\u0119 pliku passwd.</p> </li> <li>Na podstawie pliku passwd znalezionego w poprzednim \u0107wiczeniu:<ul> <li>Wy\u015bwietl lini\u0119, kt\u00f3ra zawiera tw\u00f3j login.</li> <li>Jaki jest numer linii, kt\u00f3ra zawiera tw\u00f3j login?</li> <li>Wy\u015bwietl linie od 5 do 10 z pliku passwd</li> </ul> </li> </ol>"},{"location":"linux_git/cli/streams.html","title":"Strumienie i przekierowania","text":""},{"location":"linux_git/cli/streams.html#stdin-stdout-stderr","title":"stdin, stdout, stderr","text":"<ul> <li>stdin (Standard Input): Jest to standardowy strumie\u0144 wej\u015bciowy, zazwyczaj pochodz\u0105cy z klawiatury. </li> <li> <p>Program oczekuj\u0105cy na dane wej\u015bciowe od u\u017cytkownika, czyta je z stdin</p> </li> <li> <p>stdout (Standard Output): Jest to standardowy strumie\u0144 wyj\u015bciowy. </p> </li> <li>Wszystko, co program wydrukuje za pomoc\u0105 standardowych metod drukowania (np. printf w C lub print w Python), zostanie wys\u0142ane do stdout.</li> <li> <p>Domy\u015blnie wy\u015bwietla si\u0119 to na ekranie</p> </li> <li> <p>stderr (Standard Error): Jest to standardowy strumie\u0144 b\u0142\u0119d\u00f3w. </p> </li> <li>Gdy program napotyka na b\u0142\u0105d i chce powiadomi\u0107 u\u017cytkownika, zwykle korzysta z stderr</li> <li>Podobnie jak stdout, domy\u015blnie wy\u015bwietla si\u0119 to na ekranie, ale jest traktowane jako oddzielny kana\u0142</li> </ul>"},{"location":"linux_git/cli/streams.html#przekierowanie-wejsc-i-wyjsc-do-plikow","title":"Przekierowanie wej\u015b\u0107 i wyj\u015b\u0107 do plik\u00f3w","text":""},{"location":"linux_git/cli/streams.html#przekierowanie-stdout","title":"Przekierowanie stdout","text":"<p><code>komenda &gt; plik</code> \u2014 przekierowuje wyj\u015bcie (stdout) z \"komenda\" do \"plik\", nadpisuj\u0105c jego zawarto\u015b\u0107. <code>komenda &gt;&gt; plik</code> \u2014 przekierowuje wyj\u015bcie (stdout) z \"komenda\" do \"plik\", dodaj\u0105c na ko\u0144cu (nie nadpisuje).</p>"},{"location":"linux_git/cli/streams.html#przekierowanie-stderr","title":"Przekierowanie stderr","text":"<p><code>komenda 2&gt; plik</code> \u2014 przekierowuje b\u0142\u0119dy (stderr) z \"komenda\" do \"plik\", nadpisuj\u0105c jego zawarto\u015b\u0107. <code>komenda 2&gt;&gt; plik</code> \u2014 przekierowuje b\u0142\u0119dy (stderr) z \"komenda\" do \"plik\", dodaj\u0105c na ko\u0144cu.</p>"},{"location":"linux_git/cli/streams.html#przekierowanie-stdin","title":"Przekierowanie stdin","text":"<p><code>komenda &lt; plik</code> \u2014 u\u017cywa zawarto\u015bci \"plik\" jako wej\u015bcia (stdin) dla \"komenda\".</p>"},{"location":"linux_git/cli/streams.html#przykady","title":"Przyk\u0142ady","text":"<ul> <li>Jednoczesne przekierowanie stdin i stdout</li> </ul> <pre><code>m\u00f3j_program &lt; wejscie.txt &gt; wyjscie.txt\n</code></pre> <ul> <li>Przekierowanie stdout to /dev/null</li> </ul> <pre><code>komenda &gt; /dev/null\n</code></pre> <pre><code>echo \"To zostanie ukryte\" &gt; /dev/null\n</code></pre> <ul> <li>Przekierowanie stderr do /dev/null</li> </ul> <pre><code>komenda 2&gt; /dev/null\n</code></pre> <pre><code>ls nieistniejacy_katalog 2&gt; /dev/null\n</code></pre> <ul> <li>Jednoczesne przekierowanie stdout i stderr do /dev/null</li> </ul> <pre><code>komenda &gt; /dev/null 2&gt;&amp;1\n</code></pre> <p>W sk\u0142adni specyficznej dla bash</p> <pre><code>komenda &amp;&gt; /dev/null\n</code></pre>"},{"location":"linux_git/cli/streams.html#mechanizm-potokow-pipe","title":"Mechanizm potok\u00f3w (pipe)","text":"<ul> <li>Potok (|) pozwala na przekazanie wyj\u015bcia (stdout) z jednej komendy bezpo\u015brednio jako wej\u015bcie (stdin) do kolejnej komendy </li> <li>Pozwala na \u0142\u0105czenie wielu polece\u0144 w \"\u0142a\u0144cuchy\", aby osi\u0105gn\u0105\u0107 po\u017c\u0105dany rezultat</li> </ul> <pre><code>cat plik.txt | grep \"szukana fraza\" | sort\n</code></pre> <ol> <li>cat plik.txt \u2014 czyta zawarto\u015b\u0107 plik.txt.</li> <li>grep \"szukana fraza\" \u2014 filtruje linie, kt\u00f3re zawieraj\u0105 \"szukana fraza\".</li> <li>sort \u2014 sortuje wynikowe linie.</li> </ol>"},{"location":"linux_git/cli/textfiles.html","title":"Obs\u0142uga plik\u00f3w tekstowych z linii polece\u0144","text":""},{"location":"linux_git/cli/textfiles.html#wyswietlanie-plikow","title":"Wy\u015bwietlanie plik\u00f3w","text":"<ul> <li>cat - Wy\u015bwietla zawarto\u015b\u0107 plik\u00f3w i \u0142\u0105czy pliki</li> </ul> <pre><code>cat plik.txt\n</code></pre> <ul> <li>tac - Dzia\u0142a podobnie jak <code>cat</code>, ale wy\u015bwietla linie w odwrotnej kolejno\u015bci</li> </ul> <pre><code>tac plik.txt\n</code></pre> <ul> <li>zcat - U\u017cywany do wy\u015bwietlania zawarto\u015bci skompresowanych plik\u00f3w (np. w formacie .gz) bez ich dekompresji</li> </ul> <pre><code>zcat plik.txt.gz\n</code></pre> <ul> <li>less - Przegl\u0105darka tekstu, kt\u00f3ra pozwala na przewijanie i wyszukiwanie w du\u017cych plikach tekstowych</li> </ul> <pre><code>less plik.txt\n</code></pre> <ul> <li> <p>sort - Sortuje linie tekstu.</p> <pre><code>sort plik.txt\n</code></pre> <ul> <li>Sortowanie numeryczne</li> </ul> <p><pre><code>sort -n plik.txt\n</code></pre> - Sortowanie numeryczne w odwrotnej kolejno\u015bci</p> <p><pre><code>sort -nr plik.txt\n</code></pre> - Sortowanie alfabetyczne w odwrotnej kolejno\u015bci</p> <pre><code>sort -r plik.txt\n</code></pre> </li> <li> <p>uniq - U\u017cywany do usuwania powtarzaj\u0105cych si\u0119 linii z posortowanego pliku</p> </li> </ul> <pre><code>    sort plik.txt | uniq\n</code></pre> <ul> <li>comm  - Por\u00f3wnuje dwa posortowane pliki linia po linii</li> </ul> <pre><code>comm plik1.txt plik2.txt\n</code></pre> <ul> <li> <p>head - Wy\u015bwietla pierwsze linie pliku.</p> <ul> <li>Wy\u015bwietlenie pierwszych 10 linii pliku <code>plik.txt</code></li> </ul> <pre><code>head plik.txt\n</code></pre> <ul> <li>Wy\u015bwietlenie pierwszych 5 linii</li> </ul> <pre><code>head -n 5 plik.txt\n</code></pre> <ul> <li>Wy\u015bwietlenie wszystkich linii pliku opr\u00f3cz ostatnich 5</li> </ul> <pre><code>head -n -5 plik.txt\n</code></pre> <ul> <li>\u015aledzenie zmian w pliku w czasie rzeczywistym (przydatne np. dla log\u00f3w)</li> </ul> <pre><code>head -f /var/log/syslog\n</code></pre> </li> <li> <p>tail</p> </li> <li> <p>Wy\u015bwietla ostatnie linie pliku.</p> <ul> <li>Wy\u015bwietlenie ostatnich 10 linii pliku <code>plik.txt</code></li> </ul> <pre><code>tail plik.txt\n</code></pre> <ul> <li>Wy\u015bwietlenie ostatnich 5 linii</li> </ul> <pre><code>tail -n 5 plik.txt\n</code></pre> <ul> <li>\u015aledzenie zmian w pliku w czasie rzeczywistym</li> </ul> <pre><code>tail -f /var/log/syslog\n</code></pre> <ul> <li>Wy\u015bwietlanie od konkretnej linii do ko\u0144ca pliku (np. od linii 50)</li> </ul> <pre><code>tail -n +50 plik.txt\n</code></pre> </li> </ul>"},{"location":"linux_git/cli/textfiles.html#wyszukiwanie-i-filtrowanie","title":"Wyszukiwanie i filtrowanie","text":"<ul> <li> <p>grep - Narz\u0119dzie do wyszukiwania tekstu, kt\u00f3re szuka okre\u015blonego wzorca w pliku lub strumieniu tekstu</p> <pre><code>grep \"przyk\u0142ad\" plik.txt\n</code></pre> <ul> <li>Wyszukiwanie ignoruj\u0105ce wielko\u015b\u0107 liter</li> </ul> <pre><code>grep -i \"PrZyK\u0142Ad\" plik.txt\n</code></pre> <ul> <li>Wyszukiwanie linii, kt\u00f3re nie zawieraj\u0105 wzorca</li> </ul> <pre><code>grep -v \"przyk\u0142ad\" plik.txt\n</code></pre> </li> <li> <p>cut - Wyodr\u0119bnia i wy\u015bwietla wybrane pola (kolumny) z ka\u017cdej linii pliku</p> <ul> <li>Wyodr\u0119bnienie pierwszej kolumny z pliku <code>dane.txt</code> z kolumnami oddzielonymi przecinkiem)</li> </ul> <pre><code>cut -d ',' -f 1 dane.txt\n</code></pre> <ul> <li>Wyodr\u0119bnienie kolumn 1 i 3</li> </ul> <pre><code>cut -d ',' -f 1,3 dane.txt\n</code></pre> <ul> <li>Wyodr\u0119bnienie znak\u00f3w od 3 do 5 <pre><code>cut -c 3-5 dane.txt\n</code></pre></li> </ul> </li> <li> <p>sed - Strumieniowy edytor (Stream EDitor)</p> <ul> <li>Podstawowe zamienianie tekstu</li> </ul> <pre><code>sed 's/stary/nowy/' plik.txt\n</code></pre> <ul> <li>Zamienianie tylko pierwszego wyst\u0105pienia w ka\u017cdej linii</li> </ul> <pre><code>sed 's/stary/nowy/1' plik.txt\n</code></pre> <ul> <li>Zamienianie wszystkich wyst\u0105pie\u0144 w ka\u017cdej linii</li> </ul> <p><pre><code>sed 's/stary/nowy/g' plik.txt\n</code></pre> - Usuwanie linii spe\u0142niaj\u0105cych okre\u015blony wzorzec <pre><code>sed '/wzorzec/d' plik.txt\n</code></pre></p> <ul> <li> <p>Wydrukowanie tylko linii spe\u0142niaj\u0105cych okre\u015blony wzorzec <pre><code>sed -n '/wzorzec/p' plik.txt\n</code></pre></p> </li> <li> <p>Dodawanie tekstu przed lub po okre\u015blonej linii</p> </li> </ul> <pre><code>sed '5i\\To jest nowa linia przed pi\u0105t\u0105.' plik.txt\nsed '5a\\To jest nowa linia po pi\u0105tej.' plik.txt\n</code></pre> <ul> <li>Zamiana oparta na zakresie linii</li> </ul> <pre><code>sed '1,5s/stary/nowy/' plik.txt\n</code></pre> <ul> <li>GNU Wstawianie linii przed ka\u017cdym wyst\u0105pieniem wzorca</li> </ul> <pre><code>sed '/wzorzec/i\\Nowa linia przed wzorcem.' plik.txt\n</code></pre> </li> <li> <p>sed z wyra\u017ceniami regularnymi</p> <ul> <li>Usuwanie wszystkich cyfr z tekstu</li> </ul> <pre><code>sed 's/[0-9]//g' plik.txt\n</code></pre> <ul> <li>Zamiana s\u0142\u00f3w rozpoczynaj\u0105cych si\u0119 od wielkiej litery na \"SLOWO\"</li> </ul> <pre><code>sed 's/\\b[A-Z][a-zA-Z]*\\b/SLOWO/g' plik.txt\n</code></pre> <ul> <li>Usuwanie linii rozpoczynaj\u0105cych si\u0119 od znaku '#'</li> </ul> <pre><code>sed '/^#/d' plik.txt\n</code></pre> <ul> <li>Wydrukowanie linii zawieraj\u0105cych adresy email</li> </ul> <pre><code>sed -n '/[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/p' plik.txt\n</code></pre> <ul> <li>Zamiana wszystkich adres\u00f3w URL (uproszczone) na tekst \"[LINK]\"</li> </ul> <pre><code>sed 's|http[s]\\?//[a-zA-Z0-9./_-]*|[LINK]|g' plik.txt\n</code></pre> <ul> <li>Zamiana wielokrotnych spacji na jedn\u0105</li> </ul> <pre><code>sed 's/  */ /g' plik.txt\n</code></pre> </li> </ul>"},{"location":"linux_git/git/branches.html","title":"Ga\u0142\u0119zie w systemie Git","text":""},{"location":"linux_git/git/branches.html#operacje-na-gaeziach","title":"Operacje na ga\u0142\u0119ziach","text":"<p>W Git, ga\u0142\u0119zie pozwalaj\u0105 na rozwijanie r\u00f3\u017cnych funkcji lub cech projektu niezale\u017cnie od g\u0142\u00f3wnej linii rozwoju, co jest szczeg\u00f3lnie u\u017cyteczne w wi\u0119kszych projektach i podczas pracy zespo\u0142owej.</p>"},{"location":"linux_git/git/branches.html#tworzenie-gaezi","title":"Tworzenie ga\u0142\u0119zi","text":"<pre><code>git branch NAZWA_GA\u0141\u0118ZI\n</code></pre>"},{"location":"linux_git/git/branches.html#przeaczanie-na-inna-gaaz","title":"Prze\u0142\u0105czanie na inn\u0105 ga\u0142\u0105\u017c","text":"<pre><code>git checkout NAZWA_GA\u0141\u0118ZI\n</code></pre> <ul> <li>Tworzenie wraz z prze\u0142\u0105czeniem</li> </ul> <pre><code>git checkout -b NAZWA_GA\u0141\u0118ZI\n</code></pre>"},{"location":"linux_git/git/branches.html#usuwanie-gaezi","title":"Usuwanie ga\u0142\u0119zi","text":"<pre><code>git branch -d NAZWA_GA\u0141\u0118ZI\n</code></pre> <p>Usuni\u0119cie nawet je\u015bli znajduj\u0105 si\u0119 tam niescalone zmiany</p> <pre><code>git branch -D NAZWA_GA\u0141\u0118ZI\n</code></pre>"},{"location":"linux_git/git/branches.html#przekazanie-zmian-do-zdalnego-repozytorium","title":"Przekazanie zmian do zdalnego repozytorium","text":"<pre><code>git push origin NAZWA_GA\u0141\u0118ZI\n</code></pre>"},{"location":"linux_git/git/branches.html#pobranie-zmian-ze-zdalnego-repozytorium","title":"Pobranie zmian ze zdalnego repozytorium","text":"<pre><code>git pull origin NAZWA_GA\u0141\u0118ZI\n</code></pre>"},{"location":"linux_git/git/branches.html#scalanie-zmian","title":"Scalanie zmian","text":""},{"location":"linux_git/git/branches.html#git-merge-vs-git-rebase","title":"Git Merge vs Git Rebase","text":"<p>Zar\u00f3wno <code>git merge</code> jak i <code>git rebase</code> s\u0142u\u017c\u0105 do \u0142\u0105czenia zmian z r\u00f3\u017cnych ga\u0142\u0119zi, ale dzia\u0142aj\u0105 w nieco inny spos\u00f3b i maj\u0105 r\u00f3\u017cne zastosowania.</p>"},{"location":"linux_git/git/branches.html#git-merge","title":"Git Merge","text":"<p><code>git merge</code> do\u0142\u0105cza bie\u017c\u0105ce zmiany do danej ga\u0142\u0119zi.</p> <ul> <li>Mo\u017ce tworzy\u0107 w tym celu nowy \"commit scalaj\u0105cy\" w historii.<ul> <li>Je\u015bli ga\u0142\u0105\u017a, z kt\u00f3rej korzystasz (np. <code>main</code>), nie mia\u0142a \u017cadnych nowych commit\u00f3w od czasu utworzenia ga\u0142\u0119zi roboczej (np. <code>feature-branch</code>), Git mo\u017ce przeprowadzi\u0107 tzw. \"fast-forward merge\".</li> <li>Mo\u017cna wymusi\u0107 stworzenie commitu scalaj\u0105cego poprzez u\u017cycie opcji <code>--no-ff</code></li> </ul> </li> <li>Historia projektu jest reprezentowana jako graf, kt\u00f3ry pokazuje wszystkie ga\u0142\u0119zie i punkty, w kt\u00f3rych zosta\u0142y po\u0142\u0105czone.</li> <li>Mo\u017ce by\u0107 prostszy dla pocz\u0105tkuj\u0105cych</li> </ul>"},{"location":"linux_git/git/branches.html#git-rebase","title":"Git Rebase","text":"<p><code>git rebase</code> przenosi ca\u0142\u0105 seri\u0119 commit\u00f3w na now\u0105 baz\u0119, co sprawia, \u017ce historia wygl\u0105da tak, jakby prace rozpocz\u0119to na nowszej wersji projektu.</p> <ul> <li>Przenosi ca\u0142\u0105 seri\u0119 commit\u00f3w na now\u0105 baz\u0119.</li> <li>Tworzy liniow\u0105 histori\u0119 bez commit\u00f3w scalaj\u0105cych.</li> <li>Mo\u017ce by\u0107 bardziej z\u0142o\u017cony dla pocz\u0105tkuj\u0105cych, ale pozwala na czystsz\u0105 histori\u0119 projektu.</li> </ul>"},{"location":"linux_git/git/exercises.html","title":"Zadania","text":""},{"location":"linux_git/git/exercises.html#zadanie-todo-list","title":"Zadanie: ToDo List","text":"<p>Celem projektu jest stworzenie aplikacji dzia\u0142aj\u0105cej w konsoli. Aplikacja jest list\u0105 zada\u0144 do wykonania.</p> <ul> <li>Dla uproszczenia projektu nie skupiamy si\u0119 na przechowywaniu danych - s\u0105 po prostu list\u0105.</li> <li>Pocz\u0105tkowy kod znajduje si\u0119 w pliku <code>todo.py</code></li> <li>Projekt powinien by\u0107 wykonywany grupowo w zespo\u0142ach 2-3 osobowych. Ka\u017cda osoba powinna zajmowa\u0107 si\u0119 implementacj\u0105 innej cz\u0119\u015bci projektu.</li> <li>Przy wykonaniu zadania powinien zosta\u0107 zachowany GitHub Flow (ga\u0142\u0119zie robocze, rewizja kodu, poprawki, akceptacja, scalanie)</li> </ul> <p>Zadania do wykonania:</p> <ul> <li>dopisanie funkcji dodaj\u0105cej zadanie do listy. Tre\u015b\u0107 zadania nale\u017cy pobra\u0107 z linii polece\u0144 oraz doda\u0107 odpowiednie zmiany w obs\u0142udze menu.</li> <li>dopisanie funkcji usuwaj\u0105cej zadania.</li> <li>modyfikacja programu tak, aby m\u00f3g\u0142 oznacza\u0107 zadania jako wykonane:<ul> <li>dodanie odpowiednich zmian w strukturze przechowuj\u0105cej zadania</li> <li>Dodanie opcji w menu pozwalaj\u0105cej oznaczy\u0107 zadanie jako wykonane</li> <li>Modyfikacja wy\u015bwietlania listy zada\u0144:<ul> <li>przed ka\u017cdym niewykonanym zadaniem powinien pojawi\u0107 si\u0119 prefix <code>[]</code></li> <li>przed ka\u017cdym wykonanym zadaniem powinien pojawi\u0107 si\u0119 prefix <code>[x]</code></li> <li>Zadania niewykonany powinny zosta\u0107 wy\u015bwietlane przed niewykonanymi (opcjonalnie) <sup>*</sup></li> </ul> </li> </ul> </li> </ul> <p><sup>*</sup> Mo\u017ce wymaga\u0107 sporych zmian w obs\u0142udze listy zada\u0144</p>"},{"location":"linux_git/git/flow.html","title":"GitHub Flow","text":""},{"location":"linux_git/git/flow.html#github-flow","title":"GitHub Flow","text":"<p>GitHub Flow to lekki proces przep\u0142ywu pracy (workflow), kt\u00f3ry pozwala zespo\u0142om na wsp\u00f3\u0142prac\u0119 przy tworzeniu oprogramowania w serwisie GitHub.</p> <ol> <li>Dla ka\u017cdej nowej funkcji tworzona jest nowa ga\u0142\u0105\u017a kodu na kt\u00f3rej odbywaj\u0105 si\u0119 prace rozwojowe</li> <li>Zmiany na ga\u0142\u0119zi roboczej wprowadzane s\u0105 cz\u0119sto i regularnie, aby zapewni\u0107 widoczno\u015b\u0107 zmian w kodzie.</li> <li>Po uko\u0144czeniu zmian tworzony jest PR (Pull Request), gdzie b\u0119dzie odbywa\u0142a si\u0119 dyskusja nad zmianami i ich recenzja</li> <li>Nad kodem odbywa si\u0119 dyskusja i rewizja rozwi\u0105za\u0144, mog\u0105 nast\u0119powa\u0107 zmiany je\u015bli kod tego wymaga. Dyskusja ko\u0144czy si\u0119 gdy kod jest kodowy do scalenia.</li> <li>Po zaakceptowaniu zmian mo\u017cna je scali\u0107, najcz\u0119\u015bciej te\u017c nast\u0119puje usuni\u0119cie ga\u0142\u0119zi roboczej.</li> <li>Po scaleniu zmiany s\u0105 gotowe na g\u0142\u00f3wnej ga\u0142\u0119zi projektu</li> </ol>"},{"location":"linux_git/git/intro.html","title":"System kontroli wersji Git","text":""},{"location":"linux_git/git/intro.html#elementy-systemu-kontroli-wersji-git","title":"Elementy systemu kontroli wersji Git","text":"<p>Git to rozproszony system kontroli wersji, kt\u00f3ry pozwala na \u015bledzenie zmian w plikach i wsp\u00f3\u0142prac\u0119 z innymi osobami nad wsp\u00f3lnymi projektami.</p>"},{"location":"linux_git/git/intro.html#workspace","title":"Workspace","text":"<p>Workspace (przestrze\u0144 robocza) to lokalny katalog, w kt\u00f3rym pracujesz nad swoim projektem. Zawiera bie\u017c\u0105ce wersje wszystkich plik\u00f3w projektu.</p>"},{"location":"linux_git/git/intro.html#index","title":"Index","text":"<p>Index (czasami nazywany r\u00f3wnie\u017c \"staging area\") to tymczasowa przestrze\u0144, gdzie przechowywane s\u0105 zmiany, kt\u00f3re maj\u0105 zosta\u0107 zatwierdzone. Po dodaniu zmian do indeksu, mo\u017cna je zatwierdzi\u0107 za pomoc\u0105 polecenia <code>git commit</code>.</p>"},{"location":"linux_git/git/intro.html#stash","title":"Stash","text":"<p>Stash pozwala tymczasowo schowa\u0107 niezatwierdzone zmiany, aby mo\u017cna by\u0142o prze\u0142\u0105czy\u0107 si\u0119 na inn\u0105 ga\u0142\u0105\u017a lub wykona\u0107 inne zadania, nie trac\u0105c przy tym wprowadzonych modyfikacji. Aby przechowa\u0107 zmiany, u\u017cywa si\u0119 polecenia <code>git stash</code>. Aby przywr\u00f3ci\u0107 schowane zmiany, u\u017cywa si\u0119 polecenia <code>git stash apply</code> lub <code>git stash pop</code>.</p>"},{"location":"linux_git/git/intro.html#remote","title":"Remote","text":"<p>Remote to zdalne repozytorium, zwykle przechowywane na serwerze, takim jak GitHub lub GitLab. Pozwala ono wielu osobom wsp\u00f3\u0142pracowa\u0107 nad jednym projektem. Aby przes\u0142a\u0107 swoje zmiany do zdalnego repozytorium, u\u017cywa si\u0119 polecenia <code>git push</code>, natomiast aby pobra\u0107 najnowsze zmiany z remote, u\u017cywa si\u0119 polecenia <code>git pull</code> lub <code>git fetch</code>.</p>"},{"location":"linux_git/python_cli/argparse.html","title":"Obs\u0142uga argument\u00f3w z linii polece\u0144 w Pythonie","text":"<ul> <li>W bibliotece standardowej Pythona do obs\u0142ugi linii polece\u0144 istnieje modu\u0142 <code>argparse</code></li> <li>Po zdefiniowaniu obs\u0142ugiwanych opcji parser automatycznie zajmuje si\u0119 ich obs\u0142ug\u0105</li> </ul> <pre><code>import argparse\n\ndef add(x, y):\n    return x + y\n\ndef subtract(x, y):\n    return x - y\n\ndef multiply(x, y):\n    return x * y\n\ndef divide(x, y):\n    if y == 0:\n        raise ValueError(\"Nie mo\u017cna dzieli\u0107 przez zero!\")\n    return x / y\n\ndef main():\n    parser = argparse.ArgumentParser(description='Prosty kalkulator.')\n\n    parser.add_argument('x', type=float, help='Pierwsza liczba.')\n    parser.add_argument('y', type=float, help='Druga liczba.')\n\n    parser.add_argument('-o', '--operation', type=str, choices=['add', 'subtract', 'multiply', 'divide'], required=True, help='Wybierz operacj\u0119 matematyczn\u0105.')\n    parser.add_argument('-v', '--verbose', action='store_true', help='Wy\u015bwietl pe\u0142ne wyra\u017cenie matematyczne.')\n\n    args = parser.parse_args()\n\n    if args.operation == 'add':\n        result = add(args.x, args.y)\n        operation_symbol = '+'\n    elif args.operation == 'subtract':\n        result = subtract(args.x, args.y)\n        operation_symbol = '-'\n    elif args.operation == 'multiply':\n        result = multiply(args.x, args.y)\n        operation_symbol = '*'\n    elif args.operation == 'divide':\n        result = divide(args.x, args.y)\n        operation_symbol = '/'\n\n    if args.verbose:\n        print(f\"{args.x} {operation_symbol} {args.y} = {result}\")\n    else:\n        print(result)\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"linux_git/python_cli/exercises.html","title":"Zadania","text":""},{"location":"linux_git/python_cli/exercises.html#zadanie-1-konwerter-termperatur","title":"Zadanie 1: Konwerter termperatur","text":"<p>Stw\u00f3rz program konwertuj\u0105cy temperatur\u0119 ze stopni Fahrenheita na stopnie Celsjusza oraz ze stopni Celsjusza na stopnie Fahrenheita.</p> <ul> <li>Program powinien dzia\u0142a\u0107 jako narz\u0119dzie linii polece\u0144</li> <li>Powinien obs\u0142ugiwa\u0107 nast\u0119puj\u0105ce argumenty podawane z linii polece\u0144<ul> <li><code>-c</code>, <code>--to-celcius</code> po kt\u00f3rym nast\u0119puje liczba b\u0119d\u0105ca temperatur\u0105 w stopniach Fahrenheita</li> <li><code>-f</code>, <code>--to-fahrenheit</code> po kt\u00f3rym nast\u0119puje liczba b\u0119d\u0105ca temperatur\u0105 w stopniach Celsjusza</li> <li><code>--verbose</code> - uruchomienie trybu z wi\u0119ksz\u0105 ilo\u015bci\u0105 informacji</li> </ul> </li> <li>Argumenty <code>-c</code> i <code>-f</code> wzajemnie si\u0119 wykluczaj\u0105</li> <li>Standardowo aplikacja powinna dokona\u0107 konwersji temperatury i wy\u015bwietli\u0107 wynik w postaci przeliczonej wielko\u015bci</li> <li>Je\u015bli w\u0142\u0105czono opcj\u0119 <code>--verbose</code> to powinna poda\u0107 d\u0142u\u017cszy komunikat np. \"32 Stopnie Fahrenheita to 0 stopni Celsjusza\"</li> </ul>"},{"location":"linux_git/python_cli/exercises.html#zadanie-2-nieskonczony-fibonacci","title":"Zadanie 2: Niesko\u0144czony Fibonacci","text":"<p>Napisz program generuj\u0105cy kolejne liczby Fibonacciego i bez ko\u0144ca wypisuj\u0105cy je na ekranie (mo\u017cna posi\u0142kowa\u0107 si\u0119 programem z poprzedniego zjadu)</p> <ul> <li>Program powinien nie da\u0107 si\u0119 wy\u0142\u0105czy\u0107 przy pomocy sygna\u0142u SIGINT (Ctrl + c)</li> <li>Program powinien przesta\u0107 dzia\u0142a\u0107 przy odebraniu sygna\u0142u SIGTERM<ul> <li>Powinien wtedy wy\u015bwietli\u0107 komunikat w kt\u00f3rym wypisze ile liczb zosta\u0142o wygenerowanych i wyj\u015b\u0107</li> </ul> </li> </ul>"},{"location":"linux_git/python_cli/signals.html","title":"Obs\u0142uga sygna\u0142\u00f3w w j\u0119zyku Python","text":"<ul> <li>Do obs\u0142ugi sygna\u0142\u00f3w s\u0142u\u017cy modu\u0142 <code>signal</code></li> <li>funkcj\u0119 do obs\u0142ugi sygna\u0142u rejestrujemy przy pomocy metody <code>signal.signal</code></li> </ul> <pre><code>import argparse\nimport signal\nimport time\n\nrunning = True\nstart_time = None\n\ndef handle_signal(signum, frame):\n    global running\n    elapsed_time = time.time() - start_time\n    print(f\"\\nOtrzymano sygna\u0142 {signum}. Czas dzia\u0142ania: {elapsed_time:.2f} sekund.\")\n    running = False\n\ndef main():\n    global start_time\n\n    parser = argparse.ArgumentParser(description='Drukuje liczb\u0119 sekund, kt\u00f3re up\u0142yn\u0119\u0142y od uruchomienia.')\n    parser.add_argument('-d', '--duration', type=int, default=10, help='Liczba sekund, po kt\u00f3rej program ma si\u0119 zatrzyma\u0107.')\n    args = parser.parse_args()\n\n    # Set up signal handler\n    signal.signal(signal.SIGINT, handle_signal)\n\n    start_time = time.time()\n\n    while running and (time.time() - start_time) &lt; args.duration:\n        elapsed_time = time.time() - start_time\n        print(f\"Up\u0142yn\u0119\u0142o {elapsed_time:.2f} sekund.\")\n        time.sleep(1)\n\n    print(\"Zako\u0144czono dzia\u0142anie programu.\")\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"linux_git/scripting/args.html","title":"Argumenty w skryptach Bash","text":""},{"location":"linux_git/scripting/args.html#argumenty-pozycyjne","title":"Argumenty pozycyjne","text":"<ul> <li>Przekazywane do skryptu bezpo\u015brednio po jego nazwie</li> <li>Mo\u017cemy si\u0119 odwo\u0142ywa\u0107 do nich za pomoc\u0105 specjalnych zmiennych $1, $2, itd.</li> </ul>"},{"location":"linux_git/scripting/args.html#dodatkowe-zmienne","title":"Dodatkowe zmienne","text":"<ul> <li><code>$#</code> - Liczba argument\u00f3w</li> <li><code>$*</code> - Wszystkie argumenty jako jeden ci\u0105g</li> <li><code>$@</code> - Wszystkie argumenty jako oddzielne ci\u0105gi</li> </ul>"},{"location":"linux_git/scripting/args.html#argumenty-nazwane-opcje","title":"Argumenty nazwane (opcje)","text":"<ul> <li>Argumenty nazwane, znane r\u00f3wnie\u017c jako opcje </li> <li>Zaczynaj\u0105 si\u0119 od my\u015blnika <code>-</code> lub dw\u00f3ch my\u015blnik\u00f3w <code>--</code></li> </ul> <pre><code>while [[ \"$#\" -gt 0 ]]; do\n  case $1 in\n    --argA)\n      argA=\"$2\"\n      shift\n      ;;\n    --argB)\n      argB=\"$2\"\n      shift\n      ;;\n  esac\n  shift\ndone\n\necho \"Opcja --argA ma warto\u015b\u0107: $argA\"\necho \"Opcja --argB ma warto\u015b\u0107: $argB\"\n</code></pre> <ul> <li>Do obs\u0142ugi kr\u00f3tkich opcji (jednoliterowych) mo\u017cna u\u017cy\u0107 <code>getopts</code></li> </ul> <pre><code>while getopts \":ab:\" opt; do\n  case $opt in\n    a)\n      argA=\"$OPTARG\" # Opcja -a bez warto\u015bci\n      ;;\n    b)\n      argB=\"$OPTARG\" # Opcja -b z warto\u015bci\u0105\n      ;;\n    \\?)\n      echo \"Nieznana opcja: -$OPTARG\" &gt;&amp;2\n      exit 1\n      ;;\n    :)\n      echo \"Opcja -$OPTARG wymaga argumentu.\" &gt;&amp;2\n      exit 1\n      ;;\n  esac\ndone\n\nshift $((OPTIND-1))\n\necho \"Opcja -a: $argA\"\necho \"Opcja -b: $argB\"\necho \"Pozosta\u0142e argumenty: $@\"\n</code></pre> <ul> <li>Opcja a nie przyjmuje warto\u015bci</li> <li>Opcja b przyjmuje warto\u015b\u0107</li> <li>Po przetworzeniu opcji pozosta\u0142a cz\u0119\u015b\u0107 argument\u00f3w z linii polece\u0144 pozostaje w <code>$@</code></li> </ul>"},{"location":"linux_git/scripting/data_flow.html","title":"Instrukcje steruj\u0105ce w skryptach Bash","text":""},{"location":"linux_git/scripting/data_flow.html#instrukcje-warunkowe","title":"Instrukcje warunkowe","text":""},{"location":"linux_git/scripting/data_flow.html#if","title":"if","text":"<pre><code>if [ warunek ]; then\n   # kod je\u015bli warunek jest spe\u0142niony\nelif [ inny_warunek ]; then\n   # kod je\u015bli inny_warunek jest spe\u0142niony\nelse\n   # kod je\u015bli \u017caden z warunk\u00f3w nie jest spe\u0142niony\nfi\n</code></pre> <pre><code>number=5\n\nif [ $number -eq 5 ]; then\n   echo \"The number is 5\"\nelse\n   echo \"The number is not 5\"\nfi\n</code></pre>"},{"location":"linux_git/scripting/data_flow.html#operatory-dla-ciagow-znakow","title":"Operatory dla ci\u0105g\u00f3w znak\u00f3w:","text":"Operator Opis <code>str1 = str2</code> Prawda, je\u015bli ci\u0105gi s\u0105 identyczne. <code>str1 != str2</code> Prawda, je\u015bli ci\u0105gi nie s\u0105 identyczne. <code>-z str</code> Prawda, je\u015bli ci\u0105g jest pusty. <code>-n str</code> Prawda, je\u015bli ci\u0105g nie jest pusty."},{"location":"linux_git/scripting/data_flow.html#operatory-dla-wartosci-liczbowych","title":"Operatory dla warto\u015bci liczbowych:","text":"Operator Opis <code>int1 -eq int2</code> Prawda, je\u015bli liczby s\u0105 r\u00f3wne. <code>int1 -ne int2</code> Prawda, je\u015bli liczby nie s\u0105 r\u00f3wne. <code>int1 -lt int2</code> Prawda, je\u015bli <code>int1</code> jest mniejsze ni\u017c <code>int2</code>. <code>int1 -le int2</code> Prawda, je\u015bli <code>int1</code> jest mniejsze lub r\u00f3wne <code>int2</code>. <code>int1 -gt int2</code> Prawda, je\u015bli <code>int1</code> jest wi\u0119ksze ni\u017c <code>int2</code>. <code>int1 -ge int2</code> Prawda, je\u015bli <code>int1</code> jest wi\u0119ksze lub r\u00f3wne <code>int2</code>."},{"location":"linux_git/scripting/data_flow.html#operatory-dla-plikow","title":"Operatory dla plik\u00f3w:","text":"Operator Opis <code>-e file</code> Prawda, je\u015bli plik istnieje. <code>-f file</code> Prawda, je\u015bli plik istnieje i jest zwyk\u0142ym plikiem. <code>-d file</code> Prawda, je\u015bli plik istnieje i jest katalogiem. <code>-s file</code> Prawda, je\u015bli plik istnieje i ma rozmiar wi\u0119kszy ni\u017c zero. <code>-r file</code> Prawda, je\u015bli plik istnieje i jest czytelny. <code>-w file</code> Prawda, je\u015bli plik istnieje i jest zapisywalny. <code>-x file</code> Prawda, je\u015bli plik istnieje i jest wykonywalny. <code>file1 -nt file2</code> Prawda, je\u015bli <code>file1</code> jest nowszy ni\u017c <code>file2</code>. <code>file1 -ot file2</code> Prawda, je\u015bli <code>file1</code> jest starszy ni\u017c <code>file2</code>."},{"location":"linux_git/scripting/data_flow.html#case","title":"case","text":"<pre><code>case warto\u015b\u0107 in\nwzorzec1)\n   # kod dla wzorca1\n   ;;\nwzorzec2)\n   # kod dla wzorca2\n   ;;\n*)\n   # kod dla pozosta\u0142ych przypadk\u00f3w (opcjonalnie)\n   ;;\nesac\n</code></pre> <pre><code>color=\"green\"\n\ncase $color in\nred)\n   echo \"The color is red\"\n   ;;\ngreen)\n   echo \"The color is green\"\n   ;;\nblue)\n   echo \"The color is blue\"\n   ;;\n*)\n   echo \"Unknown color\"\n   ;;\nesac\n</code></pre> <pre><code>case $color in\nred|green)\n   echo \"The color is red or green\"\n   ;;\nblue)\n   echo \"The color is blue\"\n   ;;\n*)\n   echo \"Unknown color\"\n   ;;\nesac\n</code></pre> <ul> <li>Wzorce:<ul> <li>`*`` \u2013 dopasowuje dowolny ci\u0105g znak\u00f3w</li> <li>`?`` \u2013 dopasowuje dowolny pojedynczy znak</li> <li><code>[lista]</code> \u2013 dopasowuje dowolny pojedynczy znak z listy</li> <li><code>[!lista]</code> lub <code>[^lista]</code> \u2013 dopasowuje dowolny pojedynczy znak, kt\u00f3ry nie znajduje si\u0119 na li\u015bcie</li> </ul> </li> <li>Przyk\u0142ady wzorc\u00f3w<ul> <li><code>a*</code> dopasowuje si\u0119 do dowolnego ci\u0105gu znak\u00f3w zaczynaj\u0105cego si\u0119 na \"a\"</li> <li><code>??</code> dopasowuje si\u0119 do dowolnego ci\u0105gu sk\u0142adaj\u0105cego si\u0119 z dw\u00f3ch znak\u00f3w</li> <li><code>[aeiou]</code> dopasowuje si\u0119 do dowolnej pojedynczej samog\u0142oski</li> <li><code>[^aeiou]</code> dopasowuje si\u0119 do dowolnego znaku, kt\u00f3ry nie jest samog\u0142osk\u0105</li> </ul> </li> </ul> <pre><code>word=\"apple\"\n\ncase $word in\n  a*)\n    echo \"Starts with the letter 'a'.\"\n    ;;\n  [aeiou]*)\n    echo \"Starts with a vowel.\"\n    ;;\n  ??)\n    echo \"It's a two-letter word.\"\n    ;;\n  *)\n    echo \"Doesn't match any pattern.\"\n    ;;\nesac\n</code></pre>"},{"location":"linux_git/scripting/data_flow.html#petle","title":"P\u0119tle","text":""},{"location":"linux_git/scripting/data_flow.html#petla-for","title":"P\u0119tla for","text":"<pre><code>for zmienna in warto\u015b\u01071 warto\u015b\u01072 ... warto\u015b\u0107N\ndo\n   # kod dla ka\u017cdej warto\u015bci\ndone\n</code></pre> <pre><code>for i in 1 2 3 4 5\ndo\n   echo \"Number: $i\"\ndone\n</code></pre> <ul> <li>wypisanie wszystkich plik\u00f3w .txt w bie\u017c\u0105cym katalogu</li> </ul> <pre><code>for file in *.txt; do\n    echo \"Plik tekstowy: $file\"\ndone\n</code></pre> <ul> <li>wypisaanie wszystkich plik\u00f3w o nazwie zaczynaj\u0105cej si\u0119 od \"file\", a ko\u0144cz\u0105cej na cyfrze od 1 do 5</li> </ul> <pre><code>for file in file*[1-5]; do\n    echo \"Plik danych: $file\"\ndone\n</code></pre>"},{"location":"linux_git/scripting/data_flow.html#petla-while","title":"P\u0119tla while","text":"<pre><code>while [ warunek ]\ndo\n   # kod je\u015bli warunek jest spe\u0142niony\ndone\n</code></pre> <pre><code>number=0\n\nwhile [ $number -lt 5 ]\ndo\n   echo \"Number: $number\"\n   number=$((number + 1))\ndone\n</code></pre>"},{"location":"linux_git/scripting/exercises.html","title":"Zadania","text":""},{"location":"linux_git/scripting/exercises.html#zadanie-1-instalator","title":"Zadanie 1: instalator","text":"<ol> <li>Stw\u00f3rz skrypt <code>display.sh</code> wypisuj\u0105cy zawarto\u015b\u0107 wszystkich plik\u00f3w z podkatalogu <code>data</code> znajduj\u0105cym si\u0119 katalogu bie\u017c\u0105cym</li> <li>Napisz skrypt instalacyjny <code>setup.sh</code><ul> <li>skrypt powinien obs\u0142ugiwa\u0107 dwie opcje <code>-i</code> oraz <code>-u</code></li> </ul> </li> <li>Opcja <code>-i</code> powinna pobiera\u0107 argument b\u0119d\u0105cy \u015bcie\u017ck\u0105 do zainstalowania skryptu <code>display.sh</code><ul> <li>Skrypt powinien skopiowa\u0107 plik <code>display.sh</code> oraz utworzy\u0107 katalog <code>data</code> w lokalizacji wskazanej jako argument</li> <li>W katalogu data powinien stworzy\u0107 dwa pliki:<ul> <li>pierwszy powinien zawiera\u0107 nazwy wszystkich plik\u00f3w zaczynaj\u0105cych si\u0119 liter\u0105 \"b\" z katalogu /usr/bin</li> <li>drugi powinien zawiera\u0107 nazwy wszyskich plik\u00f3w rozpoczynaj\u0105cych si\u0119 liter\u0105 \"p\" z katalogu /etc</li> </ul> </li> </ul> </li> <li>Opcja <code>-u</code> powinna pobiera\u0107 argmument b\u0119d\u0105cy \u015bcie\u017ck\u0105 do zainstalowanej aplikacji<ul> <li>Skrypt powinien usuwa\u0107 skrypt <code>display.sh</code> oraz katalog <code>data</code></li> <li>Je\u015bli po usuni\u0119ciu powy\u017cszych plik\u00f3w \u015bcie\u017cka jest pusta powinien r\u00f3wnie\u017c usun\u0105\u0107 katalog nadrz\u0119dny</li> </ul> </li> </ol>"},{"location":"linux_git/scripting/exercises.html#zadanie-2-budzik","title":"Zadanie 2: Budzik","text":"<p>Stw\u00f3rz skrypt pobieraj\u0105cy jeden argument b\u0119d\u0105cy ilo\u015bci\u0105 sekund do uruchomienia budzika. Budzik powinien dzia\u0142a\u0107 w nast\u0119puj\u0105cy spos\u00f3b:</p> <ul> <li>Po up\u0142ywie zadeklarowanego czasu powinien wy\u015bwietli\u0107 alert przy pomocy <code>notify-send</code> oraz odtworzy\u0107 d\u017awi\u0119k przy pomocy <code>aplay</code> <sup>1)</sup></li> <li>Je\u015bli przed up\u0142ywem czasu otrzyma\u0142 sygna\u0142 SIGINT lub SIGTERM, powinien wy\u015bwietli\u0107 komunikat przy pomocy <code>notify-send</code></li> </ul> <p><sup>1)</sup> Mo\u017cna u\u017cy\u0107 kt\u00f3rego\u015b pliku <code>.wav</code> z d\u017awi\u0119kami systemowymi.</p>"},{"location":"linux_git/scripting/exercises.html#opcjonalne-modyfikacje","title":"Opcjonalne modyfikacje","text":"<ul> <li>Zmie\u0144 skrypt tak, aby zamiast ilo\u015bci sekund do uruchomienia budzika przyjmowa\u0142 godzin\u0119 o kt\u00f3rej nale\u017cy go uruchomi\u0107</li> </ul>"},{"location":"linux_git/scripting/functions.html","title":"Funkcje w bash","text":"<p>Funkcje w Bashu pozwalaj\u0105 na grupowanie polece\u0144 w bloki, kt\u00f3re mo\u017cna wielokrotnie wywo\u0142a\u0107 z r\u00f3\u017cnych miejsc skryptu.</p> <pre><code>example_func() {\n   echo \"Pierwszy argument: $1\"\n   echo \"Drugi argument: $2\"\n}\n\nexample_func argument1 argument2\n</code></pre> <ul> <li>W Bashu mo\u017cna u\u017cy\u0107 s\u0142owa <code>function</code> do zdefiniowania funkcji</li> </ul> <pre><code>function example_func() {\n   echo \"Pierwszy argument: $1\"\n   echo \"Drugi argument: $2\"\n}\n\nexample_func argument1 argument2\n</code></pre> <ul> <li>U\u017cycie s\u0142owa <code>function</code> nie wymaga u\u017cycia nawias\u00f3w</li> </ul> <pre><code>function example_func {\n   echo \"Pierwszy argument: $1\"\n   echo \"Drugi argument: $2\"\n}\n\nexample_func argument1 argument2\n</code></pre>"},{"location":"linux_git/scripting/shebang.html","title":"Shebang","text":"<p>Shebang to sekwencja dw\u00f3ch znak\u00f3w (`#!``) na pocz\u0105tku skryptu, po kt\u00f3rej nast\u0119puje \u015bcie\u017cka do interpretera, kt\u00f3ry ma by\u0107 u\u017cywany do wykonania skryptu.</p> <p>System operacyjny rozpoczynaj\u0105c przetwarzanie skryptu u\u017cywa interpretera okre\u015blonego przy pomocy shebang.</p> <pre><code>#!/bin/bash\necho \"Witaj w Bashu!\"\n</code></pre> <pre><code>#!/usr/bin/env python3\nprint(\"Witaj w Pythonie!\")\n</code></pre> <pre><code>#!/usr/bin/perl\nprint \"Witaj w Perlu!\\n\";\n</code></pre> <p>Je\u015bli skrypt jest oznaczony jako wykonywalny i ma shebang mo\u017cna go uruchomi\u0107 bezpo\u015brednio z linii polece\u0144 nie podaj\u0105c jawnie interpretera.</p>"},{"location":"linux_git/scripting/signals.html","title":"Obs\u0142uga sygna\u0142\u00f3w","text":"<pre><code>handle_sigterm() {\n    echo \"Otrzymano sygna\u0142 SIGTERM. Ko\u0144czenie skryptu.\"\n    exit 0\n}\n\ntrap 'handle_sigterm' SIGTERM\n\nwhile true; do\n    sleep 1\ndone\n</code></pre> <p>Danger</p> <p>W takim wypadku kiedy wywo\u0142ujemy zewn\u0119trzny program (<code>sleep</code>), kt\u00f3ry nie jest przekazany do dzia\u0142ania w tle sygna\u0142y nie b\u0119d\u0105 obs\u0142ugiwane dop\u00f3ki si\u0119 nie sko\u0144czy. Dlatego lepiej jest u\u017cy\u0107 kr\u00f3tkiego czasu dla sleep i wywo\u0142ywa\u0107 go cyklicznie w p\u0119tli ni\u017c ustawi\u0107 d\u0142ugi czas sleep.</p> <p>Inny spos\u00f3b na obej\u015bcie problemu</p> <pre><code>handle_sigterm() {\n    echo \"Otrzymano sygna\u0142 SIGTERM. Ko\u0144czenie skryptu.\"\n    exit 0\n}\n\ntrap 'handle_sigterm' SIGTERM\n\nsleep 30 &amp; wait $!\n</code></pre> <ul> <li>sleep zostaje przekazany do dzia\u0142ania w tle</li> <li>wait nie jest zewn\u0119trznym programem, wi\u0119c sygna\u0142y s\u0105 przetwarzane</li> </ul>"},{"location":"python1/args.html","title":"Przekazywanie argument\u00f3w do funkcji","text":"<p>Do funkcji w Pythonie mo\u017cemy przekazywa\u0107 argumenty nazwane (ang. keyword arguments) lub argumenty nienazwane.</p> <pre><code>def print_n(text, n):\n    for i in range(n):\n        print(text)\n\nprint_n(\"my text\", 3) #  (1)!\nprint_n(\"my text\", n=3) #  (2)!\nprint_n(text=\"my text\", n=3) #  (3)!\n</code></pre> <ol> <li>Argumenty pozycyjne</li> <li>Argument pozycyjny i argument nazwany</li> <li>Argumenty nazwane</li> </ol> <p>Danger</p> <p>Argumenty pozycyjne nie mog\u0105 wyst\u0119powa\u0107 po nazwanych</p> <pre><code>print_n(text=\"my text\", 3)\n</code></pre> <pre><code>  File \"/path/to/code/python1/fun_args.py\", line 6\n    print_n(text=\"my text\", 3)\n                         ^\n    SyntaxError: positional argument follows keyword argument\n</code></pre>"},{"location":"python1/args.html#wartosci-domyslne","title":"Warto\u015bci domy\u015blne","text":"<p>W definicji funkcji argumentom mo\u017cna nada\u0107 warto\u015bci domy\u015blne.</p> <pre><code>def print_n(text, n=3):\n    for i in range(n):\n        print(text)\n\nprint_n(\"my text\") #  (1)!\nprint_n(\"my text\", 5) #  (2)!\nprint_n(\"my text\", n=5) \nprint_n(text=\"my text\", n=5)\n</code></pre> <ol> <li>n=3</li> <li>n=5</li> </ol> <p>Danger</p> <p>Nie nale\u017cy u\u017cywa\u0107 obiekt\u00f3w zmiennych (ang. mutable) jako warto\u015bci domy\u015blnych dla argument\u00f3w funkcji.</p> <pre><code>def append_list(item, lst=[]):\n    lst.append(item)\n    return lst\n\nl = [1]\nappend_list(2, l)\nprint(l)\nappend_list(3, l)\nprint(l)\n\nprint('-' * 10)\nm = append_list('a')\nprint(m)\nn = append_list('b')\nprint(n)\n</code></pre> <pre><code>[1, 2]\n[1, 2, 3]\n----------\n['a']\n['a', 'b']\n</code></pre> <pre><code>def append_list(item, lst=None):\n    if lst is None:\n        lst = []\n    lst.append(item)\n    return lst\n\nl = [1]\nappend_list(2, l)\nprint(l)\nappend_list(3, l)\nprint(l)\n\nprint('-' * 10)\nm = append_list('a')\nprint(m)\nn = append_list('b')\nprint(n)\n</code></pre> <pre><code>[1, 2]\n[1, 2, 3]\n----------\n['a']\n['b']\n</code></pre>"},{"location":"python1/args.html#zmienna-ilosc-argumentow","title":"Zmienna ilo\u015b\u0107 argument\u00f3w","text":"<p>Python pozwala na definiowanie funkcji ze zmienn\u0105 liczb\u0105 argument\u00f3w. W tym celu zosta\u0142y wprowadzone dwa operatory <code>*</code> dla argument\u00f3w nienazwanych i <code>**</code> dla argument\u00f3w nazwanych.</p>"},{"location":"python1/args.html#operator-args","title":"Operator <code>*</code> (*args)","text":"<pre><code>def my_func(*args):\n    print(f'{args=}')\n    print(f'{type(args)=}')\n\nmy_func(1, 2, 3)\n</code></pre> <pre><code>def my_func(*args):\n    for arg in args:\n        print(arg)\n\nmy_func(1, 2, 3)\n</code></pre> <pre><code>def my_func(arg1, *args):\n    print(f'{arg1=}')\n    print(f'{args=}')\n\nmy_func(1, 2, 3)\n</code></pre>"},{"location":"python1/args.html#operator-kwargs","title":"Operator <code>**</code> (**kwargs)","text":"<pre><code>def my_func(**kwargs):\n    print(f'{kwargs=}')\n    print(f'{type(kwargs)=}')\n\nmy_func(a=1, b=2, c=3)\n</code></pre> <pre><code>def my_func(**kwargs):\n    for name, value in kwargs.items():\n        print(f'{name=}, {value=}')\n\nmy_func(a=1, b=2, c=3)\n</code></pre> <pre><code>def my_func(arg1, **kwargs):\n    print(f'{arg1=}')\n    print(f'{kwargs=}')\n\nmy_func(1, b=2, c=3)\nmy_func(arg1=1, b=2, c=3)\n</code></pre>"},{"location":"python1/args.html#konwersja-krotek-i-sownikow-na-argumenty-funkcji","title":"Konwersja krotek i s\u0142ownik\u00f3w na argumenty funkcji","text":"<pre><code>values = (1, 2, 3)\nkvalues = {'a': 10, 'b': 11, 'c':12}\n\n\ndef my_func(*args, **kwargs):\n    for arg in args:\n        print(arg)\n    for name, value in kwargs.items():\n        print(f'{name=}, {value=}')\n\nmy_func(*values, **kvalues) #  (1)!\n</code></pre> <ol> <li><code>my_func(1, 2, 3, a=10, b=11, c=12)</code></li> </ol>"},{"location":"python1/args.html#informacje-dodatkowe","title":"Informacje dodatkowe","text":""},{"location":"python1/args.html#argumenty-wyacznie-pozycyjne-i-wyacznie-nazwane","title":"Argumenty wy\u0142\u0105cznie pozycyjne i wy\u0142\u0105cznie nazwane","text":""},{"location":"python1/args.html#zadania","title":"Zadania","text":""},{"location":"python1/args.html#zadanie-1","title":"Zadanie 1","text":"<p>Napisz funkcj\u0119 zwracaj\u0105c\u0105 wynik mno\u017cenia przez siebie wszystkich podanych argument\u00f3w</p>"},{"location":"python1/args.html#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zwracaj\u0105cy ci\u0105g znak\u00f3w rozdzielony separatorem. Funkcja powinna przyjmowa\u0107 dowoln\u0105 ilo\u015b\u0107 argument\u00f3w do z\u0142\u0105czenia i jeden argument okre\u015blony jako separator</p>"},{"location":"python1/args.html#zadanie-3","title":"Zadanie 3","text":"<p>Napisz funkcj\u0119 przyjmuj\u0105c\u0105 dane osobowe i wy\u015bwietlaj\u0105c\u0105 je na ekranie:</p> <ul> <li>imi\u0119</li> <li>nazwisko</li> <li>data urodzenia</li> <li>narodowo\u015b\u0107</li> </ul> <p>Funkcja powinna wypisywa\u0107 na ekran tylko te dane, kt\u00f3re zosta\u0142y przekazane.</p>"},{"location":"python1/debug.html","title":"Debugowanie kodu","text":"<ul> <li>Debugger jest narz\u0119dziem umo\u017cliwiaj\u0105cym \u015bledzenie wykonania kodu umo\u017cliwia m.in.: <ul> <li>ustawianie punkt\u00f3w przerwania (breakpoints)</li> <li>prac\u0119 krokow\u0105</li> <li>podgl\u0105d stanu zmiennych i stosu wywo\u0142a\u0144</li> </ul> </li> <li>Python zawiera wbudowany debugger (pdb (Python Debugger))</li> </ul>"},{"location":"python1/debug.html#uruchomienie-pdb","title":"Uruchomienie pdb","text":"<p>Poprzez wywo\u0142anie metody <code>set_trace()</code> z modu\u0142u <code>pdb</code>:</p> <pre><code>def faulty_function():\n    x = 5\n    import pdb; pdb.set_trace()\n    y = 10\n    z = y / (x - 5)\n\nif __name__ == \"__main__\":\n    faulty_function()\n</code></pre> <p>Poprzez wywo\u0142anie modu\u0142u przy starcie interpretera:</p> <pre><code>python -m pdb my_script.py\n</code></pre>"},{"location":"python1/debug.html#obsuga-pdb","title":"Obs\u0142uga pdb","text":"<ul> <li>Po uruchomieniu pdb wchodzi w tryb pracy interaktywnej</li> <li>Podstawowe komendy:<ul> <li>n (next): wykonuje nast\u0119pn\u0105 linijk\u0119 kodu.</li> <li>c (continue): kontynuuje wykonanie kodu do nast\u0119pnego punktu przerwania.</li> <li>q (quit): ko\u0144czy debugowanie i zamyka debugger.</li> <li>l (list): wy\u015bwietla fragment kodu, kt\u00f3ry jest obecnie debugowany.</li> <li>b (break): ustawia punkt przerwania w danej linii kodu.</li> </ul> </li> </ul>"},{"location":"python1/debug.html#zadania","title":"Zadania","text":""},{"location":"python1/debug.html#zadanie-1","title":"Zadanie 1","text":"<p>Znajd\u017a b\u0142\u0105d w kodzie sumuj\u0105cym warto\u015bci element\u00f3w listy</p> <pre><code>def sum_list(items):\n    total = 0\n    for i in range(len(items)-1):\n        total += items[i]\n        return total\n\n\ntest_list = [1, 2, '3', 4, 5]\n\nresult = sum_list(test_list)\nprint(\"Suma element\u00f3w w li\u015bcie wynosi:\", result)\n</code></pre>"},{"location":"python1/debug.html#zadanie-2","title":"Zadanie 2","text":"<p>Znajd\u017a b\u0142\u0105d w algorytmie sortowania b\u0105belkowego</p> <pre><code>def bubble_sort(arr):\n    n = len(arr)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if arr[j] &gt; arr[i+1]:\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n    return arr\n\n\ntest_array = [64, 34, 25, 12, 22, 11, 90]\nsorted_array = bubble_sort(test_array)\nprint(\"Posortowana lista: \", sorted_array)\n</code></pre>"},{"location":"python1/docstrings.html","title":"Docstrings","text":"<ul> <li>Docstrings s\u0105 stosowane w Pythonie do udokumentowania modu\u0142\u00f3w, klas, funkcji i metod </li> <li>Stanowi\u0105 spos\u00f3b przekazywania informacji </li> <li>S\u0105 elementem kodu w przeciwie\u0144stwie do komentarzy</li> <li>Powsta\u0142o kilka konwencji pisania dokumentacji w formacie docstring<ul> <li>Wiele z nich oferuje mo\u017cliwo\u015b\u0107 automatycznego generowania dokumentacji na podstawie docstrings</li> </ul> </li> </ul>"},{"location":"python1/docstrings.html#google-style","title":"Google Style","text":"<pre><code>def example(arg1, arg2):\n    \"\"\"Podsumowanie funkcji.\n\n    D\u0142u\u017cszy opis funkcji.\n\n    Args:\n        arg1 (int): Opis argumentu arg1.\n        arg2 (str): Opis argumentu arg2.\n\n    Returns:\n        bool: Opis warto\u015bci zwracanej.\n    \"\"\"\n\n    return True\n</code></pre>"},{"location":"python1/docstrings.html#restructuredtext-rest","title":"reStructuredText (reST)","text":"<pre><code>def example(arg1, arg2):\n    \"\"\"\n    Podsumowanie funkcji.\n\n    :param arg1: Opis argumentu arg1.\n    :type arg1: int\n    :param arg2: Opis argumentu arg2.\n    :type arg2: str\n    :return: Opis warto\u015bci zwracanej.\n    :rtype: bool\n    \"\"\"\n\n    return True\n</code></pre>"},{"location":"python1/docstrings.html#numpy-style","title":"NumPy Style","text":"<pre><code>def example(arg1, arg2):\n    \"\"\"Podsumowanie funkcji.\n\n    D\u0142u\u017cszy opis funkcji.\n\n    Parameters\n    ----------\n    arg1 : int\n        Opis argumentu arg1.\n    arg2 : str\n        Opis argumentu arg2.\n\n    Returns\n    -------\n    bool\n        Opis warto\u015bci zwracanej.\n    \"\"\"\n\n    return True\n</code></pre>"},{"location":"python1/docstrings.html#epytext-style","title":"EpyText Style","text":"<pre><code>def funkcja_przykladowa(arg1, arg2):\n    \"\"\"\n    Podsumowanie funkcji.\n\n    @param arg1: Opis argumentu arg1.\n    @type arg1: int\n    @param arg2: Opis argumentu arg2.\n    @type arg2: str\n    @return: Opis warto\u015bci zwracanej.\n    @rtype: bool\n    \"\"\"\n\n    return True\n</code></pre>"},{"location":"python1/docstrings.html#dokumentacja-klasy-google-style","title":"Dokumentacja klasy (Google Style)","text":"<pre><code>class ExampleClass:\n    \"\"\"Przyk\u0142adowa klasa w stylu Google.\n\n    D\u0142u\u017cszy opis klasy.\n\n    Attributes:\n        atr1 (int): Opis atrybutu atr1.\n        atr2 (str): Opis atrybutu atr2.\n    \"\"\"\n\n    def __init__(self, atr1, atr2):\n        self.atr1 = atr1\n        self.atr2 = atr2\n\n    def method(self, arg):\n        \"\"\"Przyk\u0142adowa metoda.\n\n        Args:\n            arg (bool): Opis argumentu arg.\n\n        Returns:\n            list: Opis warto\u015bci zwracanej.\n        \"\"\"\n\n        return []\n</code></pre>"},{"location":"python1/docstrings.html#dokumentacja-klasy-rest","title":"Dokumentacja klasy (reST)","text":"<pre><code>class ExampleClass:\n    \"\"\"\n    Przyk\u0142adowa klasa w stylu reST.\n\n    D\u0142u\u017cszy opis klasy.\n\n    :param atr1: Opis atrybutu atr1.\n    :type atr1: int\n    :param atr2: Opis atrybutu atr2.\n    :type atr2: str\n    \"\"\"\n\n    def __init__(self, atr1, atr2):\n        self.atr1 = atr1\n        self.atr2 = atr2\n\n    def method(self, arg):\n        \"\"\"\n        Przyk\u0142adowa metoda.\n\n        :param arg: Opis argumentu arg.\n        :type arg: bool\n        :return: Opis warto\u015bci zwracanej.\n        :rtype: list\n        \"\"\"\n\n        return []\n</code></pre>"},{"location":"python1/exceptions.html","title":"Wyj\u0105tki","text":"<p>W trakcie dzia\u0142ania programu mog\u0105 pojawi\u0107 si\u0119 sytuacje nieprzewidziane, b\u0105d\u017a wyj\u0105tkowe.</p> <p>Na przyk\u0142ad:</p> <ul> <li>Plik, kt\u00f3ry pr\u00f3bujemy otworzy\u0107 nie istnieje.</li> <li>Pr\u00f3bujemy dzieli\u0107 przez zero.</li> <li>Odwo\u0142ujemy si\u0119 do nieistniej\u0105cego indeksu listy.</li> <li>Odwo\u0142ujemy si\u0119 do nieistniej\u0105cego klucza w s\u0142owniku.</li> </ul> <p>W takich sytuacjach zostaje zg\u0142oszony (ang. raise) wyj\u0105tek (ang. exception).</p> <p>Ka\u017cdy zg\u0142oszony wyj\u0105tek jest propagowany w g\u00f3r\u0119 drzewa wywo\u0142a\u0144 do momentu a\u017c nast\u0105pi jego obs\u0142u\u017cenie, albo wyj\u015bcie z programu.</p>"},{"location":"python1/exceptions.html#przykady-wyjatkow","title":"Przyk\u0142ady wyj\u0105tk\u00f3w","text":"<pre><code>&gt;&gt;&gt; x = 2/0\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nZeroDivisionError: division by zero\n&gt;&gt;&gt; l = [1, 2, 3]\n&gt;&gt;&gt; l[3]\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nIndexError: list index out of range\n</code></pre> <pre><code>num = {'one': 1, \n       'two': 2 }\n\nprint(num['one'])\nprint(num['three'])\n</code></pre> <pre><code>1\nTraceback (most recent call last):\n  File \"./demo.py\", line 5, in &lt;module&gt;\n    print(num['three'])\nKeyError: 'three'\n</code></pre>"},{"location":"python1/exceptions.html#obsuga-wyjatkow","title":"Obs\u0142uga wyj\u0105tk\u00f3w","text":"<p>Wyj\u0105tki wyst\u0119puj\u0105ce w trakcie pracy programu mo\u017cna przechwyci\u0107 i obs\u0142u\u017cy\u0107.</p>"},{"location":"python1/exceptions.html#tryexcept","title":"<code>try...except</code>","text":"<p>Je\u015bli kt\u00f3rakolwiek z linii programu wewn\u0105trz bloku <code>try</code> zg\u0142osi wyj\u0105tek, to sterowanie przejdzie do bloku <code>except</code></p> <pre><code>try:\n    int('Hello')\nexcept:\n    print('Cannot convert value')\n</code></pre> <p>Je\u015bli po s\u0142owie kluczowym <code>except</code> nie wyst\u0119puje nazwa wyj\u0105tku wykonanie bloku spowoduje dowolny wyj\u0105tek w bloku <code>try</code>. Taka praktyka w wi\u0119kszo\u015bci wypadk\u00f3w jest niepo\u017c\u0105dana, poniewa\u017c mo\u017ce przes\u0142oni\u0107 wyj\u0105tki kt\u00f3rych obs\u0142uga nie zosta\u0142a przewidziana. W wi\u0119kszo\u015bci wypadk\u00f3w u\u017cywa si\u0119 obs\u0142ugi konkretnych wyj\u0105tk\u00f3w. Wtedy po s\u0142owie <code>except</code> wyst\u0119puje nazwa wyj\u0105tku. Bloki <code>except</code> mog\u0105 wyst\u0119powa\u0107 wielokrotnie.</p> <pre><code>try:\n    int('Hello')\nexcept ValueError:\n    print('Cannot convert value')\n</code></pre>"},{"location":"python1/exceptions.html#tryexceptfinally","title":"<code>try...except...finally</code>","text":"<p>Blok <code>finally</code> zostaje wykonany niezale\u017cnie od tego, czy wyj\u0105tek wyst\u0105pi\u0142.</p> <p>Tip</p> <p>Blok <code>except</code> jest opcjonalny kiedy wyst\u0119puje blok <code>finally</code></p>"},{"location":"python1/exceptions.html#przykad","title":"Przyk\u0142ad","text":"<pre><code>a = input('Podaj a: ')\nb = input('Podaj b: ')\n\ntry:\n    result = int(a) / int(b)\n    print(f'{a} / {b} = {result}')\nexcept ZeroDivisionError as ex:\n    print('B\u0142\u0105d dzielenia przez zero')\n    print(ex)\nfinally:\n    print('Ko\u0144czymy')\n</code></pre> <pre><code>Podaj a: 10\nPodaj b: 5\n10 / 5 = 2.0\nKo\u0144czymy\n</code></pre> <pre><code>Podaj a: 20\nPodaj b: 0\nB\u0142\u0105d dzielenia przez zero\ndivision by zero\nKo\u0144czymy\n</code></pre> <p>Danger</p> <p>Blok <code>finally</code> jest wykonywany zawsze. Nawet je\u015bli w kt\u00f3rym\u015b z poprzednich blok\u00f3w wyst\u0105pi s\u0142owo kluczowe <code>return</code>, albo <code>raise</code> to blok <code>finally</code> zostanie wykonany przed wyj\u015bciem z funkcji.</p> <pre><code>def divide(a: int, b: int):\n    try:\n        result = int(a) / int(b)\n    except ZeroDivisionError as ex:\n        print('B\u0142\u0105d dzielenia przez zero')\n        print(ex)\n        return\n    else:\n        print('Wszystko OK')\n        print(f'{a} / {b} = {result}')\n    finally:\n        print('Ko\u0144czymy')\n\na = input('Podaj a: ')\nb = input('Podaj b: ')\ndivide(a, b)\n</code></pre> <pre><code>Podaj a: 10\nPodaj b: 5\nWszystko OK\n10 / 5 = 2.0\nKo\u0144czymy\n</code></pre> <pre><code>Podaj a: 20\nPodaj b: 0\nB\u0142\u0105d dzielenia przez zero\ndivision by zero\nKo\u0144czymy\n</code></pre>"},{"location":"python1/exceptions.html#tryexceptelsefinally","title":"<code>try...except...else...finally</code>","text":"<p>Python oferuje mo\u017cliwo\u015b\u0107 umieszczenia bloku <code>else</code> przed blokiem <code>finally</code>.</p> <p>Blok <code>else</code> jest wykonywany tylko wtedy kiedy nie pojawi\u0142 si\u0119 \u017caden wyj\u0105tek.</p>"},{"location":"python1/exceptions.html#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>a = input('Podaj a: ')\nb = input('Podaj b: ')\n\ntry:\n    result = int(a) / int(b)\nexcept ZeroDivisionError as ex:\n    print('B\u0142\u0105d dzielenia przez zero')\n    print(ex)\nelse:\n    print('Wszystko OK')\n    print(f'{a} / {b} = {result}')\nfinally:\n    print('Ko\u0144czymy')\n</code></pre> <pre><code>Podaj a: 10\nPodaj b: 5\nWszystko OK\n10 / 5 = 2.0\nKo\u0144czymy\n</code></pre> <pre><code>Podaj a: 20\nPodaj b: 0\nB\u0142\u0105d dzielenia przez zero\ndivision by zero\nKo\u0144czymy\n</code></pre>"},{"location":"python1/exceptions.html#przekazywanie-wyjatkow","title":"Przekazywanie wyj\u0105tk\u00f3w","text":"<p>Mo\u017ce zaistnie\u0107 sytuacja w kt\u00f3rej opr\u00f3cz obs\u0142u\u017cenia wyj\u0105tku chcemy kontynuowa\u0107 jego zg\u0142oszenie np. chc\u0105c doda\u0107 odpowiedni\u0105 wiadomo\u015b\u0107 do logu.</p> <p>To ponownego zg\u0142oszenia obs\u0142ugiwanego wyj\u0105tku wystarczy u\u017cy\u0107 s\u0142owa kluczowego <code>raise</code></p>"},{"location":"python1/exceptions.html#przykad_2","title":"Przyk\u0142ad","text":"<pre><code>a = input('Podaj a: ')\nb = input('Podaj b: ')\n\ntry:\n    result = int(a) / int(b)\n    print(f'{a} / {b} = {result}')\nexcept Exception as ex:\n    print(f'Wyst\u0105pi\u0142 b\u0142\u0105d: {ex}')\n    raise\n</code></pre> <pre><code>Podaj a: 10\nPodaj b: 0\nWyst\u0105pi\u0142 b\u0142\u0105d: division by zero\nTraceback (most recent call last):\n  File \"/Users/mgalka/Projects/inzynier-ai/code/python1/exc3.py\", line 5, in &lt;module&gt;\n    result = int(a) / int(b)\n             ~~~~~~~^~~~~~~~\nZeroDivisionError: division by zero\n</code></pre> <pre><code>Podaj a: x\nPodaj b: 2\nWyst\u0105pi\u0142 b\u0142\u0105d: invalid literal for int() with base 10: 'x'\nTraceback (most recent call last):\n  File \"/Users/mgalka/Projects/inzynier-ai/code/python1/exc3.py\", line 5, in &lt;module&gt;\n    result = int(a) / int(b)\n             ^^^^^^\nValueError: invalid literal for int() with base 10: 'x'\n</code></pre>"},{"location":"python1/exceptions.html#wyjatki-wbudowane","title":"Wyj\u0105tki wbudowane","text":"<p>Biblioteka standardowa j\u0119zyka Python zawiera szereg wbudowanych (ang. built-in) wyj\u0105tk\u00f3w.</p> <p>Klas\u0105 bazow\u0105 dla wszystkich wyj\u0105tk\u00f3w jest <code>Exception</code>.</p>"},{"location":"python1/exceptions.html#przykady-wbudowanych-wyjaktow","title":"Przyk\u0142ady wbudowanych wyj\u0105kt\u00f3w","text":"<ul> <li>Exception<ul> <li>Klasa bazowa dla wszystkich wyj\u0105tk\u00f3w.</li> </ul> </li> <li>ImportError<ul> <li>Zg\u0142aszany w przypdku b\u0142\u0119du przy importowaniu modu\u0142u.</li> </ul> </li> <li>KeyboardInterrupt<ul> <li>Zg\u0142aszany kiedy u\u017cytkownik przerwie wykonanie programu, z regu\u0142y poprzez wci\u015bni\u0119cie <code>Ctrl+c</code>.</li> </ul> </li> <li>StopIteration<ul> <li>Zg\u0142aszana kiedy funkcja <code>next()</code> nie ma kolejnych element\u00f3w do zwr\u00f3cenia z iteratora.</li> </ul> </li> </ul>"},{"location":"python1/exceptions.html#wyjatki-wbudowane-przykady","title":"Wyj\u0105tki wbudowane - przyk\u0142ady","text":"<ul> <li>SystemExit<ul> <li>Zg\u0142aszany przez funkcj\u0119 <code>sys.exit()</code>.</li> </ul> </li> <li>IndexError<ul> <li>Zg\u0142aszany kiedy indeks znajduje si\u0119 poza sekwencj\u0105.</li> </ul> </li> <li>KeyError<ul> <li>Zg\u0142aszany kiedy w s\u0142owniku nie ma danego klucza.</li> </ul> </li> </ul>"},{"location":"python1/exceptions.html#zgaszanie-wyjatkow","title":"Zg\u0142aszanie wyj\u0105tk\u00f3w","text":"<p>Wyj\u0105tki w Pythonie mo\u017cna zg\u0142asza\u0107 przy pomocy s\u0142owa kluczowego <code>raise</code>.</p> <p>Za s\u0142owem kluczowym <code>raise</code> nale\u017cy poda\u0107 wyj\u0105tek do zg\u0142oszenia.</p> <p>Ka\u017cdy zg\u0142oszony wyj\u0105tek jest propagowany w g\u00f3r\u0119 drzewa wywo\u0142a\u0144, a\u017c do momentu kiedy zostanie obs\u0142u\u017cony. Brak obs\u0142ugi wyj\u0105tku powoduje przerwanie wykonywania programu i wy\u015bwietlenie odpowiedniego b\u0142\u0119du.</p>"},{"location":"python1/exceptions.html#przykad_3","title":"Przyk\u0142ad","text":"<pre><code>x = input('Podaj liczb\u0119 nieujemn\u0105: ')\nif int(x) &lt; 0:\n    raise ValueError(\"x nie mo\u017ce by\u0107 mniejszy od 0\")\n</code></pre> <pre><code>Podaj liczb\u0119 nieujemn\u0105: -1\nTraceback (most recent call last):\n  File \"/path/to/code/python1/exc_raise.py\", line 3, in &lt;module&gt;\n    raise ValueError(\"x nie mo\u017ce by\u0107 mniejszy od 0\")\nValueError: x nie mo\u017ce by\u0107 mniejszy od 0\n</code></pre>"},{"location":"python1/exceptions.html#tworzenie-wasnych-wyjatkow","title":"Tworzenie w\u0142asnych wyj\u0105tk\u00f3w","text":"<p>Ka\u017cdy wyj\u0105tek w Pythonie dziedziczy po klasie <code>Exception</code>.</p> <p>Istnieje mo\u017cliwo\u015b\u0107 dodawania w\u0142asnych wyj\u0105tk\u00f3w wykorzystuj\u0105c dziedziczenie.</p>"},{"location":"python1/exceptions.html#przykad_4","title":"Przyk\u0142ad","text":"<pre><code>class NegativeNumberError(Exception):\n    pass\n\nx = input('Podaj liczb\u0119 nieujemn\u0105: ')\nif int(x) &lt; 0:\n    raise NegativeNumberError(\"x nie mo\u017ce by\u0107 mniejszy od 0\")\n</code></pre> <pre><code>Podaj liczb\u0119 nieujemn\u0105: -5\nTraceback (most recent call last):\n  File \"/path/to/code/python1/custom_exception.py\", line 6, in &lt;module&gt;\n    raise NegativeNumberError(\"x nie mo\u017ce by\u0107 mniejszy od 0\")\nNegativeNumberError: x nie mo\u017ce by\u0107 mniejszy od 0\n</code></pre>"},{"location":"python1/exceptions.html#zadanie","title":"Zadanie","text":"<p>Napisz program implementuj\u0105cy prosty kalkulator czterodzia\u0142aniowy. Program powinien obs\u0142ugiwa\u0107 dodawanie (+), odejmowanie (-), mno\u017cenie (*) i dzielenie (/) 2 liczb. Od u\u017cytkownika powinien przyj\u0105\u0107 jeden string np. \"2 + 3\", wyodr\u0119bni\u0107 z niego liczby i operator przy pomocy funkcji <code>str.split()</code>. Program powinien implementowa\u0107 obs\u0142ug\u0119 nast\u0119puj\u0105cych b\u0142\u0119d\u00f3w:</p> <ul> <li>Podane argumenty nie s\u0105 liczbami</li> <li>Podany operator nie jest jednym z obs\u0142ugiwanych (/, *, -, +)</li> <li>Dzielenie przez zero</li> </ul>"},{"location":"python1/generators.html","title":"Generatory","text":"<p>Generator jest obiektem j\u0119zyka Python, kt\u00f3ry mo\u017cna stworzy\u0107 przy pomocy funkcji, lub wyra\u017cenia generuj\u0105cego. Ka\u017cdy spos\u00f3b jego utworzenia zwraca iterator.</p> <p>Tip</p> <p>Je\u015bli nie wiesz czy jest iterator, na t\u0119 chwil\u0119 wystarczy wiedza, \u017ce jest to obiekt, po kt\u00f3rym mo\u017cna iterowa\u0107 np. przy pomocy p\u0119tli <code>for</code> uzyskuj\u0105c kolejne elementy kolekcji.</p> <p>Wi\u0119cej informacji n.t. iterator\u00f3w mo\u017cna znale\u017a\u0107 tutaj i szerzej tutaj</p>"},{"location":"python1/generators.html#funkcje-gnerujace","title":"Funkcje gneruj\u0105ce","text":""},{"location":"python1/generators.html#definicja-generatora","title":"Definicja generatora","text":"<pre><code>def even_numbers(n: int):\n    for i in range(n):\n        if i % 2 == 0:\n            yield i # (1)!\n\nprint(\"Iterating over even_numbers(10)\")\nfor x in even_numbers(10): #  (2)!\n    print(x)\n</code></pre> <ol> <li>S\u0142owo kluczowe <code>yield</code> zwraca warto\u015b\u0107 i wychodzi z funkcji, przy kolejnym wywo\u0142aniu iteratora funkcja wznowi swoje dzia\u0142anie od instrukcji bezpo\u015brednio po s\u0142owie kluczowym <code>yield</code>.</li> <li>P\u0119tla <code>for</code> w ka\u017cdym przebiegu pobiera kolejny element zwracany przez iterator.</li> </ol> <p>Efekt dzia\u0142ania</p> <pre><code>0\n2\n4\n6\n8\n</code></pre>"},{"location":"python1/generators.html#o-co-chodzi-z-tymi-iteratorami","title":"O co chodzi z tymi iteratorami?","text":"<p>We\u017amy pod uwag\u0119 generator <code>even_numbers(6)</code> zdefiniowany w poprzednim paragrafie. I wywo\u0142ajmy nast\u0119puj\u0105cy kod</p> <pre><code>gen = even_numbers(6) #  (1)!\nprint(f'Zmienna gen: {gen}')\nprint(f'Typ zmiennej gen: {type(gen)}')\nprint(f'{next(gen)=}')  #  (2)!\nprint(f'{next(gen)=}')\nprint(f'{next(gen)=}')\n</code></pre> <ol> <li>Zmienna gen przechowuje obiekt generatora, kt\u00f3ry implementuje metod\u0119 <code>__next__()</code>. Metoda ta zwraca kolejne elementy z kolekcji, czyli w naszym wypadku to co zosta\u0142o zwr\u00f3cone przy pomocy <code>yield</code>.</li> <li>Funkcja wbudowana <code>next()</code> wywo\u0142uje metod\u0119 specjaln\u0105 <code>__next__()</code> z obiektu podanego jako argument.</li> </ol> <p>Efekt dzia\u0142ania</p> <pre><code>Zmienna gen: &lt;generator object even_numbers at 0x104847510&gt;\nTyp zmiennej gen: &lt;class 'generator'&gt;\nnext(gen)=0\nnext(gen)=2\nnext(gen)=4\nTraceback (most recent call last):\n  File \"/path/to/code/python1/generators.py\", line 17, in &lt;module&gt;\n    print(f'{next(gen)=}')\n             ^^^^^^^^^\nStopIteration # (1)!\n</code></pre> <ol> <li>Wyj\u0105tek <code>StopIteration</code> zg\u0142aszany jest wtedy kiedy w obiekcie iterowalnym brakuje element\u00f3w do zwr\u00f3cenia.</li> </ol>"},{"location":"python1/generators.html#wyrazenia-generujace","title":"Wyra\u017cenia generuj\u0105ce","text":"<p>Obiekt generatora mo\u017cna tak\u017ce stworzy\u0107 przy pomocy wyra\u017cenia generuj\u0105cego. Sk\u0142adnia wyra\u017ce\u0144 generuj\u0105cych jest taka sama jak wyra\u017ce\u0144 listotw\u00f3rczych z t\u0105 r\u00f3\u017cnic\u0105, \u017ce ujmuje si\u0119 je w nawiasy okr\u0105g\u0142e zamiast kwadratowych.</p> <pre><code>gen = (x for x in range(6) if x % 2 == 0)\n</code></pre> <pre><code>Zmienna gen: &lt;generator object &lt;genexpr&gt; at 0x104f2b510&gt; # (1)!\nTyp zmiennej gen: &lt;class 'generator'&gt; \nnext(gen)=0\nnext(gen)=2\nnext(gen)=4\nTraceback (most recent call last):\n  File \"/path/to/code/python1/generators.py\", line 28, in &lt;module&gt;\n    print(f'{next(gen)=}')\n             ^^^^^^^^^\nStopIteration\n</code></pre> <ol> <li>Wyra\u017cenie generuj\u0105ce podobnie jak funkcja generujaca zwraca obiekt generatora</li> </ol> <p>Przyk\u0142ad u\u017cycia:</p> <pre><code>for x in (x for x in range(10) if x % 2 == 0): #  (1)!\n    print(x)\n</code></pre> <ol> <li>Cz\u0119sto wyra\u017cenie generuj\u0105ce jest u\u017cywane bezpo\u015brednio w p\u0119tli <code>for</code></li> </ol> <pre><code>0\n2\n4\n6\n8\n</code></pre>"},{"location":"python1/generators.html#bardziej-zozone-przypadki-uzycia","title":"Bardziej z\u0142o\u017cone przypadki u\u017cycia","text":""},{"location":"python1/generators.html#wiecej-niz-jedno-uzycie-yield","title":"Wi\u0119cej ni\u017c jedno u\u017cycie <code>yield</code>","text":"<p>Za\u0142\u00f3\u017cmy, \u017ce mamy nast\u0119puj\u0105cy generator:</p> <pre><code>def mygen(n: int):\n    yield n\n    yield n + 1\n    yield n + 2\n</code></pre> <pre><code>gen = mygen(10)\nprint(f'{next(gen)=}')\nprint(f'{next(gen)=}')\nprint(f'{next(gen)=}')\n</code></pre> <p>Efekt dzia\u0142ania:</p> <p><pre><code>next(gen)=10\nnext(gen)=11\nnext(gen)=12\n</code></pre> <pre><code>for x in mygen(10):\n    print(x)\n</code></pre></p> <p>Efekt dzia\u0142ania: <pre><code>10\n11\n12\n</code></pre></p> <p>Jak wida\u0107 w powy\u017cszych przyk\u0142adach, ka\u017cdorazowe u\u017cycie s\u0142owa kluczowego <code>yield</code> powoduje wyj\u015bcie z funkcji oraz zwr\u00f3cenie warto\u015bci. Kolejne wywo\u0142anie iteratora rozpoczyna si\u0119 po s\u0142owie kluczowym <code>yield</code> i trwa a\u017c do napotkania kolejnego.</p>"},{"location":"python1/generators.html#yield-i-return-w-funkcji-generujacej","title":"<code>yield</code> i <code>return</code> w funkcji generuj\u0105cej","text":"<p>W Pythonie dopuszczalne jest u\u017cycie s\u0142\u00f3w kluczowych <code>yield</code> i <code>return</code> w tej samej funkcji.</p> <pre><code>def squares(n: int):\n    for i in range(n):\n        yield i**2\n        if i == 3:\n            return\n\nfor x in squares(5):\n    print(x)\n</code></pre> <p>Efekt dzia\u0142ania:</p> <pre><code>0\n1\n4\n9\n</code></pre> <p>S\u0142owo kluczowe <code>return</code> s\u0142u\u017cy do zako\u0144czenia dzia\u0142ania iteratora. Tak jak w \"zwyk\u0142ej\" funkjcji gwarantuje wykonanie bloku <code>finally</code>, je\u015bli taki wyst\u0119puje. Nast\u0119pnie zg\u0142aszany jest wyj\u0105tek <code>StopIteration</code>. Je\u015bli za s\u0142owem <code>return</code> wyst\u0119puje zwracana warto\u015b\u0107, zostanie ona przekazana do wyj\u0105tku <code>StopIteration</code> jako jego warto\u015b\u0107.</p> <p>Note</p> <p>Do jawnego zako\u0144czenia dzia\u0142ania iteratora powinno si\u0119 u\u017cywa\u0107 <code>return</code> zamiast jawnego zg\u0142aszania wyj\u0105tku <code>raise StopIteration</code>.</p> <p>U\u017cycie <code>return</code> i <code>raise StopIteration</code> nie jest r\u00f3wnowa\u017cne.</p> <pre><code>def squares(n: int):\n    for i in range(n):\n        yield i**2\n        if i == 3:\n            return 1000\n\n\ngen = squares(10)\nwhile True:\n    try:\n        print(next(gen))\n    except StopIteration as e: #  (1)!\n        print(f'Warto\u015b\u0107 generatora: {e.value}')\n        break\n</code></pre> <ol> <li>Zwracanie warto\u015bci z generatora zosta\u0142o wprowadzone do j\u0119zyka z my\u015bl\u0105 o wykorzystaniu we wsp\u00f3\u0142programach (ang. coroutines), st\u0105d brak szczeg\u00f3lnej funkcji do obs\u0142ugi warto\u015bci zwracanych przez generator w p\u0119tlach.</li> </ol> <p>Efekt dzia\u0142ania:</p> <pre><code>0\n1\n4\n9\nWarto\u015b\u0107 generatora: 1000\n</code></pre>"},{"location":"python1/generators.html#zadania","title":"Zadania","text":""},{"location":"python1/generators.html#zadanie-1","title":"Zadanie 1","text":"<p>Napisz generator zwracaj\u0105cy sze\u015bciany kolejnych liczb.</p>"},{"location":"python1/generators.html#zadanie-2","title":"Zadanie 2","text":"<p>Napisz generator rozk\u0142adaj\u0105cy podan\u0105 liczb\u0119 na czynniki pierwsze i zwracaj\u0105cy je po kolei.</p>"},{"location":"python1/generators.html#zadanie-3","title":"Zadanie 3","text":"<p>Napisz generator zwracaj\u0105cy kolejne liczby Fibonacciego</p>"},{"location":"python1/list-comprehensions.html","title":"Wyra\u017cenia listotw\u00f3rcze (ang. list comprehensions)","text":"<p>Wyra\u017cenia listotw\u00f3rcze to wyra\u017cenia pozwalaj\u0105ce na stworzenie listy przy pomocy wyra\u017cenia bazuj\u0105cego na innej sekwencji lub li\u015bcie.  Wyra\u017cenie listotw\u00f3rcze sk\u0142ada si\u0119 z:</p> <ul> <li>Wyra\u017cenia wyj\u015bciowego</li> <li>P\u0119tli iteruj\u0105cej po sekwencji wej\u015bciowej</li> <li>Warunk\u00f3w umieszczenia elementu na li\u015bcie (Opcjonalnie)</li> </ul>"},{"location":"python1/list-comprehensions.html#przykady","title":"Przyk\u0142ady","text":"<pre><code>square_values = [x**2 for x in range(10)]\nprint(square_values)\n</code></pre> <pre><code>[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n</code></pre> <pre><code>even_values = [x for x in range(10) if x % 2 == 0]\nprint(even_values)\n</code></pre> <pre><code>[0, 2, 4, 6, 8]\n</code></pre> <p>Wyra\u017cenie listotw\u00f3rcze mo\u017ce posiada\u0107 wi\u0119cej ni\u017c jeden warunek. Przy wielokrotnych warunkach wszyskie musz\u0105 zosta\u0107 spe\u0142nione aby alement znalaz\u0142 si\u0119 na li\u015bcie wyj\u015bciowej.</p> <pre><code>divisible_15 = [x for x in range(30) if x % 3 == 0 if x % 5 == 0]\nprint(divisible_15)\n</code></pre> <pre><code>[0, 15]\n</code></pre> <p>Aby umie\u015bci\u0107 na li\u015bcie wyj\u015bciowej r\u00f3\u017cne warto\u015bci dla spe\u0142nionego lub niespe\u0142nionsego warunku mo\u017cna pos\u0142u\u017cy\u0107 si\u0119 operatorem tr\u00f3jwarto\u015bciowym.</p> <pre><code>even_odd = [(x, 'even') if x % 2 == 0 else (x, 'odd') for x in range(10)]\n</code></pre> <pre><code>[(0, 'even'), (1, 'odd'), (2, 'even'), (3, 'odd'), (4, 'even'), (5, 'odd'), (6, 'even'), (7, 'odd'), (8, 'even'), (9, 'odd')]\n</code></pre> <pre><code>    import string\n    text = 'Lorem ipsum dolor sit amet.'\n    list_of_uppercase_letters = [letter.upper() for letter in text if letter in string.ascii_letters]\n</code></pre>"},{"location":"python1/list-comprehensions.html#wyrazenia-sownikotworcze","title":"Wyra\u017cenia s\u0142ownikotw\u00f3rcze","text":"<p>W spos\u00f3b podobny do przedstawionych powy\u017cej mo\u017cna generowa\u0107 tak\u017ce s\u0142owniki. Wyra\u017cenie uj\u0119te jest wtedy w nawiasy klamrowe.</p>"},{"location":"python1/list-comprehensions.html#przykad","title":"Przyk\u0142ad","text":"<pre><code>import string\nascii_codes = {letter: ord(letter) for letter in string.ascii_letters}\n</code></pre>"},{"location":"python1/list-comprehensions.html#zadania","title":"Zadania","text":""},{"location":"python1/list-comprehensions.html#zadanie-1","title":"Zadanie 1","text":"<p>Napisz wyra\u017cenie listotw\u00f3rcze zwracaj\u0105ce list\u0119 liczb podzielnych przez 4 z zakresu [1..1000]</p>"},{"location":"python1/list-comprehensions.html#zadanie-2","title":"Zadanie 2","text":"<p>Napisz wyra\u017cenie listotw\u00f3rcze zwracaj\u0105ce list\u0119 wszystkich sp\u00f3\u0142g\u0142osek z podanego ci\u0105gu znak\u00f3w.</p>"},{"location":"python1/list-comprehensions.html#zadanie-3","title":"Zadanie 3","text":"<p>Napisz wyra\u017cenie listotw\u00f3rcze zwracaj\u0105ce list\u0119 wszystkich s\u0142\u00f3w d\u0142u\u017cszych ni\u017c 5 znak\u00f3w z podanej listy.</p>"},{"location":"python1/list-comprehensions.html#zadanie-4","title":"Zadanie 4","text":"<p>Napisz wyra\u017cenie s\u0142ownikotw\u00f3rcze zwracaj\u0105ce s\u0142ownik, kt\u00f3rego kluczami s\u0105 s\u0142owa z podanej listy, a warto\u015bciami ich d\u0142ugo\u015b\u0107</p>"},{"location":"python1/modules_packages.html","title":"Modu\u0142y i pakiety w j\u0119zyku Python","text":"<ul> <li>Modu\u0142y i pakiety stanowi\u0105 podstaw\u0119 organizacji kodu w j\u0119zyku Python</li> <li>U\u0142atwiaj\u0105 zarz\u0105dzanie oraz rozw\u00f3j projekt\u00f3w programistycznych poprzez logiczny podzia\u0142 funkcjonalno\u015bci</li> <li>Pomagaj\u0105 zwi\u0119kszy\u0107 czytelno\u015b\u0107 kodu</li> <li>Zwi\u0119kszaj\u0105 mo\u017cliwo\u015b\u0107 ponownego u\u017cycia kodu</li> </ul>"},{"location":"python1/modules_packages.html#moduy","title":"Modu\u0142y","text":"<p>Modu\u0142 w Pythonie to plik zawieraj\u0105cy definicje zmiennych, funkcji, klas itp., kt\u00f3re mo\u017cna zaimportowa\u0107 do innych modu\u0142\u00f3w lub skrypt\u00f3w.</p> <p>Ka\u017cdy plik z rozszerzeniem .py mo\u017ce by\u0107 traktowany jako modu\u0142.</p>"},{"location":"python1/modules_packages.html#przykad","title":"Przyk\u0142ad","text":"<p>Za\u0142\u00f3\u017cmy, \u017ce mamy plik <code>operations.py</code></p> <pre><code>def add(a, b):\n    return a + b\n</code></pre> <p>Aby skorzysta\u0107 z jego zawarto\u015bci mo\u017cna go zaimportowa\u0107 w innym module/pliku.</p>"},{"location":"python1/modules_packages.html#sposob-1","title":"Spos\u00f3b 1","text":"<pre><code>import operations\n\nresult = operations.add(2, 3)\nprint(result)\n</code></pre>"},{"location":"python1/modules_packages.html#sposob-2","title":"Spos\u00f3b 2","text":"<pre><code>import operations as op\n\nresult = op.add(2, 3)\nprint(result)\n</code></pre>"},{"location":"python1/modules_packages.html#sposob-3","title":"Spos\u00f3b 3","text":"<pre><code>from operations import add\n\nresult = add(2, 3)\nprint(result)\n</code></pre>"},{"location":"python1/modules_packages.html#sposob-4","title":"Spos\u00f3b 4","text":"<pre><code>from operations import *\n\nresult = add(2, 3)\nprint(result)\n</code></pre>"},{"location":"python1/modules_packages.html#pakiety","title":"Pakiety","text":"<p>Pakiet to spos\u00f3b organizacji powi\u0105zanych modu\u0142\u00f3w w jednej strukturze katalog\u00f3w. Katalog zawieraj\u0105cy specjalny plik <code>__init__.py</code> jest traktowany jako pakiet. Struktura katalog\u00f3w u\u0142atwia organizacj\u0119 i zarz\u0105dzanie modu\u0142ami, a tak\u017ce umo\u017cliwia zagnie\u017cd\u017canie pakiet\u00f3w w innych pakietach.</p>"},{"location":"python1/modules_packages.html#plik-__init__py","title":"Plik <code>__init__.py</code>","text":"<ul> <li>Jego obecno\u015b\u0107 w katalogu wskazuje, \u017ce ten katalog powinien by\u0107 traktowany jako pakiet Pythona, nawet je\u015bli jest pusty</li> <li>Jest pierwszym, kt\u00f3ry jest uruchamiany, gdy pakiet lub modu\u0142 jest zaimportowany</li> <li>Pozwala zainicjowa\u0107 niekt\u00f3re ustawienia lub warto\u015bci w momencie importowania pakietu.<ul> <li>Np.  pozwala zdefiniowa\u0107, kt\u00f3re modu\u0142y powinny by\u0107 zaimportowane, gdy zaimportowany zostanie ca\u0142y pakiet (poprzez list\u0119 <code>__all__</code> lub bezpo\u015brednie importowanie modu\u0142\u00f3w w pliku <code>__init__.py</code>)</li> </ul> </li> </ul> <pre><code>mypackage/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 module1.py\n\u2514\u2500\u2500 module2.py\n</code></pre>"},{"location":"python1/modules_packages.html#lista-__all__","title":"Lista <code>__all__</code>","text":"<ul> <li>Lista <code>__all__</code> jest mechanizmem kontroli nad tym, co jest eksportowane, gdy u\u017cyjemy <code>from &lt;module&gt; import *</code></li> <li>Mo\u017ce by\u0107 zdefiniowana w pliku <code>__init__.py</code> lub w modu\u0142ach</li> <li>Pozwala okre\u015bli\u0107 ograniczy\u0107 list\u0119 symboli importowanych z pakietu, co pozwala na kontrol\u0119 nad \"publicznym\" API projektu</li> </ul> <pre><code>__all__ = ['funkcja1']\n\ndef funkcja1():\n    print(\"funkcja1\")\n\ndef funkcja2():\n    print(\"funkcja2\")\n</code></pre>"},{"location":"python1/oop.html","title":"Programowanie Obiektowe (podstawy)","text":""},{"location":"python1/oop.html#obiektowosc-w-jezyku-python","title":"Obiektowo\u015b\u0107 w j\u0119zyku Python","text":"<ul> <li>W Pythonie wszystko jest obiektem.</li> <li>Obiektami s\u0105 funkcje, klasy, bloki kodu itd.</li> <li>Ka\u017cdy obiekt w Pythonie ma to\u017csamo\u015b\u0107 (ang. identity), typ (ang. type) i warto\u015b\u0107 (ang. value).</li> </ul>"},{"location":"python1/oop.html#tozsamosc","title":"To\u017csamo\u015b\u0107","text":"<ul> <li>To\u017csamo\u015b\u0107 obiektu nigdy si\u0119 nie zmienia.</li> <li>Wbudowana funkcja <code>id()</code> zwraca liczb\u0119 ca\u0142kowit\u0105 b\u0119d\u0105c\u0105 to\u017csamo\u015bci\u0105 obiektu.</li> <li>W interpreterze CPython <code>id(x)</code> zwraca adres zmiennej <code>x</code>.</li> <li>Do por\u00f3wnania to\u017csamo\u015bci dw\u00f3ch obiekt\u00f3w s\u0142u\u017cy operator <code>is</code>.</li> </ul>"},{"location":"python1/oop.html#typ","title":"Typ","text":"<ul> <li>Typ obiektu jest niezmienny.</li> <li>Typ okre\u015bla zachowanie obiektu.</li> <li>Typ obiektu mo\u017cna sprawdzi\u0107 przy pomocy funkcji <code>type()</code>.</li> <li>Typ jest tak\u017ce obiektem.</li> </ul>"},{"location":"python1/oop.html#wartosc","title":"Warto\u015b\u0107","text":"<ul> <li>Warto\u015b\u0107 pewnych obiekt\u00f3w mo\u017ce ulega\u0107 zmianie:<ul> <li>Obiekty zmienne (ang. mutable) \u2013 ich warto\u015b\u0107 mo\u017ce by\u0107 zmieniana</li> <li>Obiekty niezmienne (ang. immutable) \u2013 ich warto\u015b\u0107 nie mo\u017ce by\u0107 zmieniana</li> </ul> </li> <li>Niezmienne kontenery mog\u0105 zawiera\u0107 referencje do zmiennych obiekt\u00f3w.</li> </ul>"},{"location":"python1/oop.html#obiekty","title":"Obiekty","text":"<ul> <li>Obiekty s\u0105 zbiorem zmiennych i funkcji opakowanych w jedn\u0105 encj\u0119.</li> <li>Zmienne w obiektach nazywamy atrybutami obiektu.</li> <li>Funkcje w obiektach nazywamy metodami obiektu.</li> <li>Dost\u0119p do metod i atrybut\u00f3w obiektu odbywa si\u0119 poprzez operator <code>.</code> (kropka).</li> </ul>"},{"location":"python1/oop.html#klasy-w-jezyku-python","title":"Klasy w j\u0119zyku Python","text":"<ul> <li>Klasy s\u0105 definicjami obiekt\u00f3w.</li> <li>Zawieraj\u0105 metod\u0119 tworz\u0105c\u0105 i inicjalizuj\u0105c\u0105 nowe obiekty.</li> <li>Obiekty cz\u0119sto nazywamy instancjami klasy.</li> </ul>"},{"location":"python1/oop.html#definicja-i-tworzenie-klas","title":"Definicja i tworzenie klas","text":"<pre><code>class MyClass:\n    pass\n\nobj = MyClass()\n</code></pre> <p>Stworzenie instancji klasy odbywa si\u0119 przez wywo\u0142anie jej nazwy</p>"},{"location":"python1/oop.html#metoda-__init__","title":"Metoda <code>__init__()</code>","text":"<p>Po stworzeniu instancji klasy automatycznie wywo\u0142ywana jest metoda <code>__init__()</code>. S\u0142u\u017cy ona do inicjalizacji nowo utworzonego obiektu np. poprzez ustawienie warto\u015bci pocz\u0105tkowych jego atrybut\u00f3w. Wywo\u0142ywana jest automatycznie, a argumenty, kt\u00f3re przyjmuje powinny by\u0107 przekazane do konstruktora w momencie tworzenia klasy.</p> <pre><code>class Car:\n    def __init__(self, make, model, prod_year):\n        self.make = make\n        self.model = model\n        self.prod_year = prod_year\n\n\nmycar = Car('Toyota', 'Yaris', 2000)\n</code></pre>"},{"location":"python1/oop.html#atrybuty","title":"Atrybuty","text":"<p>Atrybuty u\u017cywane s\u0105 do przechowywania danych o cechach obiektu. Atrybutami dynamicznymi nazywamy te atrybuty, kt\u00f3re przynale\u017c\u0105 do obiektu, a atrybutami statycznymi te kt\u00f3re tworzone s\u0105 na poziomie klas.</p> <pre><code>class Car:\n    wheels = 4  #  (1)!\n    classic_age = 25\n\n    def __init__(self, make, model, prod_year):\n        self.make = make  #  (2)!\n        self.model = model\n        self.prod_year = prod_year\n\n\nmycar = Car('Toyota', 'Yaris', 2000)\n\nprint(f'{mycar.make=}')\nprint(f'{mycar.model=}')\nprint(f'{mycar.prod_year=}')\nprint(f'{mycar.classic_age=}')\nprint(f'{Car.classic_age=}')\n</code></pre> <ol> <li>Atrybuty statyczne</li> <li>Atrybuty dynamiczne</li> </ol>"},{"location":"python1/oop.html#metody","title":"Metody","text":"<p>Metody operuj\u0105 na danych klasy. Zawsze pierwszym argumentem ka\u017cdej metody jest instancja obiektu danej klasy. Wed\u0142ug konwencji argument ten nazywany jest <code>self</code>. Podawany jest jawnie przy definicji metody natomiast podczas wywo\u0142ania uzupe\u0142niany jest automatycznie. </p> <pre><code>class Car:\n    wheels = 4  #  (1)!\n    classic_age = 25\n\n    def __init__(self, make, model, prod_year, color):\n        self.make = make  #  (2)!\n        self.model = model\n        self.prod_year = prod_year\n        self.color = color\n\n    def repaint(self, new_color):\n        self.color = new_color\n\n\nmycar = Car('Toyota', 'Yaris', 2000, 'blue')\n\nprint(f'{mycar.make=}')\nprint(f'{mycar.model=}')\nprint(f'{mycar.color=}')\nmycar.repaint('red')\nprint(f'{mycar.color=}')\n</code></pre>"},{"location":"python1/oop.html#metody-i-atrybuty-prywatne","title":"Metody i atrybuty prywatne","text":"<p>W Pythonie metody i atrybuty do u\u017cytku wewn\u0119trznego rozpoczynaj\u0105 si\u0119 od pojedynczego znaku podkre\u015blenia. Jest to jedynie konwencja s\u0142u\u017c\u0105ca do oznaczania element\u00f3w stanowi\u0105cych niepubliczny interfejs obiektu.</p> <pre><code>class Car:\n    wheels = 4  #  (1)!\n    classic_age = 25\n\n    def __init__(self, make, model, prod_year, color, mileage):\n        self.make = make  #  (2)!\n        self.model = model\n        self.prod_year = prod_year\n        self.color = color\n        self._mileage = mileage\n\n    def repaint(self, new_color):\n        self.color = new_color\n\n    def get_mileage(self):\n        return self._mileage\n\n    def set_mileage(self, mileage):\n        if mileage &gt;= self._mileage:\n            self._mileage = mileage\n        else:\n            print(\"Error: Mileage cannot be decreased\")\n\n    def _format_car_details(self):\n        return f'{self.make} {self.model} {self.prod_year}'\n\n    def get_car_info(self):\n        return self._format_car_details()\n\n\nmycar = Car('Toyota', 'Yaris', 2000, 'blue', '120000')\n\nprint(f'{mycar.make=}')\nprint(f'{mycar.model=}')\nprint(f'{mycar.color=}')\nmycar.repaint('red')\nprint(f'{mycar.color=}')\n</code></pre>"},{"location":"python1/oop.html#metody-specjalne","title":"Metody specjalne","text":"<ul> <li>Python zawiera specjalne zmienne, funkcje oraz metody, s\u0142u\u017c\u0105ce r\u00f3\u017cnym celom.</li> <li>Ich nazwy tworzone s\u0105 wed\u0142ug wzoru <code>__nazwa__</code></li> <li> <p>Klasy w j\u0119zyku Python implementuj\u0105 pewne operacje przy pomocy metod specjalnych:</p> <ul> <li>Operacje arytmetyczne</li> <li>Dost\u0119p do atrybut\u00f3w</li> <li>Obs\u0142uga indeks\u00f3w i slice</li> </ul> </li> <li> <p><code>object.__repr__(self)</code></p> <ul> <li>Wywo\u0142ywana przez wbudowan\u0105 funkcj\u0119 repr().</li> <li>Zwraca reprezentacj\u0119 obiektu.</li> <li>Je\u015bli to mo\u017cliwe powinna zwraca\u0107 wyra\u017cenie w j\u0119zyku Python pozwalaj\u0105ce na stworzenie danego obiektu.</li> <li>Je\u015bli nie jest to mo\u017cliwe to powinna zwr\u00f3ci\u0107 informacj\u0119 w formacie <code>&lt;opis obiektu&gt;</code></li> </ul> </li> <li> <p><code>object.__str__(self)</code></p> <ul> <li>Zwraca \u201cnieoficjaln\u0105\u201d reprezentacj\u0119 obiektu jako \u0142a\u0144cuch znak\u00f3w.</li> <li>Zwracana warto\u015b\u0107 nie musi by\u0107 poprawnym wyra\u017ceniem w j\u0119zyku Python.</li> <li>Zwracana warto\u015b\u0107 musi by\u0107 \u0142a\u0144cuchem znak\u00f3w.</li> </ul> </li> </ul> <pre><code>class Car:\n    wheels = 4  #  (1)!\n    classic_age = 25\n\n    def __init__(self, make, model, prod_year, color, mileage):\n        self.make = make  #  (2)!\n        self.model = model\n        self.prod_year = prod_year\n        self.color = color\n        self._mileage = mileage\n\n    def repaint(self, new_color):\n        self.color = new_color\n\n    def get_mileage(self):\n        return self._mileage\n\n    def set_mileage(self, mileage):\n        if mileage &gt;= self._mileage:\n            self._mileage = mileage\n        else:\n            print(\"Error: Mileage cannot be decreased\")\n\n    def _format_car_details(self):\n        return f'{self.make} {self.model} {self.prod_year}'\n\n    def get_car_info(self):\n        return self._format_car_details()\n\n    def __str__(self):\n        return f\"&lt;{self._format_car_details()}&gt;\"\n\n\nmycar = Car('Toyota', 'Yaris', 2000, 'blue', '120000')\n\nprint(mycar)\n</code></pre>"},{"location":"python1/oop.html#classmethod-i-staticmethod","title":"<code>@classmethod</code> i <code>@staticmethod</code>","text":"<ul> <li><code>@classmethod</code><ul> <li>Reprezentuje metod\u0119 klasow\u0105</li> <li>Pierwszym argumentem jest klasa, a nie instancja jak w zwyk\u0142ej klasie</li> <li>Zastosowania:<ul> <li>Tworzenie fabryk instancji</li> <li>Dost\u0119p do atrybut\u00f3w klasowych</li> </ul> </li> </ul> </li> <li><code>@staticmethod</code><ul> <li>Reprezentuje metod\u0119 statyczn\u0105, zasadniczo jest to zwyk\u0142a funkcja umieszczona w ciele klasy</li> <li>Nie przyjmuje argumentu b\u0119d\u0105cego ani instancj\u0105, ani klas\u0105</li> <li>Zastosowania<ul> <li>Grupowanie funkcji zwi\u0105zanych logicznie z klas\u0105, ale nie korzystaj\u0105cych z jej atrybut\u00f3w i metod</li> </ul> </li> </ul> </li> </ul>"},{"location":"python1/oop.html#zadanie","title":"Zadanie","text":"<p>Zaprojektuj klasy maj\u0105ce przechowywa\u0107 dane o rachunkach. Rozwi\u0105zanie powinno zawiera\u0107:</p> <p>Klas\u0119 reprezentuj\u0105c\u0105 rachunek</p> <p>Rachunek powinien zawiera\u0107:</p> <ul> <li>numer</li> <li>dat\u0119 wystawienia</li> <li>list\u0119 pozycji</li> <li>rabat</li> </ul> <p>Klasa przechowuj\u0105ca dane rachunku powinna posiada\u0107 nast\u0119puj\u0105ce metody:</p> <ul> <li>metoda pozwalaj\u0105ca kolejne pozycje z rachunku wraz z ich numerami kolejnymi (np. w formie krotek (1, )) <li>metoda obliczaj\u0105ca sum\u0119 z wszystkich pozycji i uwzgl\u0119dniaj\u0105ca rabat je\u015bli jest zdefiniowany</li> <li>metoda zwracaj\u0105ca liczb\u0119 pozycji na rachunku</li> <p>Klas\u0119 reprezentuj\u0105c\u0105 pozycj\u0119 na rachunku</p> <p>Atrybuty:</p> <ul> <li>nazwa artyku\u0142u</li> <li>ilo\u015b\u0107</li> <li>cena jednostkowa</li> </ul> <p>Metody:</p> <ul> <li>metoda zwracaj\u0105ca warto\u015b\u0107 pozycji (na podstawie ceny i ilo\u015bci)</li> </ul>"},{"location":"python1/unpack.html","title":"Rozpakowywanie warto\u015bci","text":"<p>Python posiada sk\u0142adni\u0119 do \u0142atwego rozpakowywania warto\u015bci krotek i innych sekwencji do pojedynczych zmiennych.</p> <pre><code>t = (1, 2, 3)\nx, y, z = t\n\nprint(f'{x=}, {y=}, {z=}')\n</code></pre> <pre><code>x=1, y=2, z=3\n</code></pre>"},{"location":"python1/unpack.html#przypisywanie-wielu-wartosci","title":"Przypisywanie wielu warto\u015bci","text":"<pre><code>x, y, z = 1, 2, 3\n\nprint(f'{x=}, {y=}, {z=}')\n</code></pre> <pre><code>x=1, y=2, z=3\n</code></pre>"},{"location":"python1/unpack.html#zamiana-wartosci","title":"Zamiana warto\u015bci","text":"<pre><code>x, y = 1, 2\nx, y = y, x\n\nprint(f'{x=}, {y=}')\n</code></pre> <pre><code>x=2, y=1\n</code></pre>"},{"location":"python1/unpack.html#operator","title":"Operator <code>*</code>","text":"<pre><code>values = (1, 2, 3, 4, 5, 6)\n\nfirst, *reminder = values\nprint(f'{first=}, {reminder=}')\nprint(f'{type(reminder)=}')\n</code></pre> <pre><code>first=1, reminder=[2, 3, 4, 5, 6]\ntype(reminder)=&lt;class 'list'&gt;\n</code></pre> <pre><code>values = (1, 2, 3, 4, 5, 6)\nfirst, *middle, last = values\nprint(f'{first=}, {middle=}, {last=}')\nprint(f'{type(middle)=}')\n</code></pre> <pre><code>first=1, middle=[2, 3, 4, 5], last=6\ntype(middle)=&lt;class 'list'&gt;\n</code></pre>"},{"location":"python1/venv.html","title":"\u015awordowiska wirtualne","text":"<ul> <li>Obs\u0142ugiwane s\u0105 przez wbudowany modu\u0142 venv (Python 3)</li> <li>Izoluj\u0105 \u015brodowisko uruchomieniowe dla danego projektu</li> <li>Ograniczaj\u0105 dost\u0119pne pakiety do tych zainstalowanych w \u015brodowisku wirtualnym</li> <li>Pozwalaj\u0105 instalowa\u0107 pakiety bez uprawnie\u0144 administratora</li> <li>Pozwalaj\u0105 zdefiniowa\u0107 interpreter dla projektu</li> </ul>"},{"location":"python1/venv.html#tworzenie-srodowiska-wirtualnego","title":"Tworzenie \u015brodowiska wirtualnego","text":"<ul> <li>Systemy Linux i macOS</li> </ul> <pre><code>$ python -m venv ~/myenv\n</code></pre> <ul> <li>Systemy Windows</li> </ul> <pre><code>&gt; python -m venv C:\\myenv\n</code></pre>"},{"location":"python1/venv.html#aktywacja-srodowiska-wirtualnego","title":"Aktywacja \u015brodowiska wirtualnego","text":"<ul> <li>Systemy Linux i macOS</li> </ul> <pre><code>source ~/myenv/bin/activate\n</code></pre> <ul> <li>Systemy Windows</li> </ul> <pre><code>&gt; C:\\venv\\myenv\\Scripts\\activate\n</code></pre>"},{"location":"python1/venv.html#deaktywacja-srodowiska-wirtualnego","title":"Deaktywacja \u015brodowiska wirtualnego","text":"<ul> <li>W systemach Linux i macOS</li> </ul> <pre><code>$ deactivate\n</code></pre> <ul> <li>W systemie Windows</li> </ul> <pre><code>&gt; deactivate\n</code></pre>"},{"location":"python2/dataclasses.html","title":"Dataclasses","text":"<p>Dataclasses to modu\u0142 wprowadzony w Pythonie 3.7 w celu u\u0142atwienia tworzenia klas b\u0119d\u0105cych kontenerami danych. W tym celu dostarcza dekorator <code>@dataclass</code>.</p>"},{"location":"python2/dataclasses.html#kluczowe-cechy","title":"Kluczowe cechy:","text":"<ol> <li> <p>Automatyczne generowanie metod specjalnych: Automatyczne generowanie metod takich jak <code>__init__()</code>, <code>__repr__()</code>, i <code>__eq__()</code>.</p> </li> <li> <p>Typowanie i domy\u015blne warto\u015bci: Mo\u017cliwo\u015b\u0107 okre\u015blania typ\u00f3w dla atrybut\u00f3w i ustawiania domy\u015blnych warto\u015bci.</p> </li> <li> <p>Por\u00f3wnywanie obiekt\u00f3w: U\u0142atwione por\u00f3wnywanie obiekt\u00f3w dzi\u0119ki automatycznemu dodawaniu metod por\u00f3wnuj\u0105cych.</p> </li> <li> <p>Niemutowalno\u015b\u0107: Mo\u017cliwo\u015b\u0107 zdefiniowania dataclass jako obiektu niezmiennego (immutable) za pomoc\u0105 parametru <code>frozen</code>.</p> </li> </ol>"},{"location":"python2/dataclasses.html#proste-przykady","title":"Proste przyk\u0142ady","text":""},{"location":"python2/dataclasses.html#1","title":"1.","text":"<pre><code>from dataclasses import dataclass\n\n@dataclass\nclass Point:\n    x: int #  (1)!\n    y: int\n\np = Point(1, 2)\n</code></pre> <ol> <li>Na podstawie definicji p\u00f3l i ich typ\u00f3w tworzone s\u0105 metody specjalne</li> </ol>"},{"location":"python2/dataclasses.html#2","title":"2.","text":"<pre><code>from dataclasses import dataclass\n\n@dataclass \nclass POI:\n    name: str\n    lat: float\n    lon: float\n\npoi = POI('Rysy', 49.179562, 20.088062)\n</code></pre>"},{"location":"python2/dataclasses.html#wartosci-domyslne","title":"Warto\u015bci domy\u015blne","text":"<pre><code>from dataclasses import dataclass\nfrom datetime import datetime\nfrom typing import Optional\n\n@dataclass\nclass Task:\n    title: str\n    description: str\n    due_date: Optional[datetime] = None\n    completed: bool = False\n</code></pre>"},{"location":"python2/dataclasses.html#dodatkowe-metody","title":"Dodatkowe metody","text":"<p>Wynikiem dzia\u0142ania dekoratora <code>@dataclass</code> jest \"zwyk\u0142a\" klasa w j\u0119zyku Python, mo\u017cna wi\u0119c dodawa\u0107 do niej dodatkowe metody.</p>"},{"location":"python2/dataclasses.html#przykad","title":"Przyk\u0142ad","text":"<pre><code>from dataclasses import dataclass\nfrom datetime import datetime\nfrom typing import Optional\n\n@dataclass\nclass Task:\n    title: str\n    description: str = ''\n    due_date: Optional[datetime] = None\n    completed: bool = False\n\n    def days_left(self):\n        now = datetime.now()\n        return (self.due_date - now).days if self.due_date is not None else None\n\ntask = Task('Buy milk', due_date=datetime(2023, 12, 23))\nprint(task)\nprint(f'days left: {task.days_left()}')\n</code></pre> <pre><code>Task(title='Buy milk', description='', due_date=datetime.datetime(2023, 12, 23, 0, 0), completed=False)\ndays left: 13\n</code></pre>"},{"location":"python2/dataclasses.html#zaawansowana-inicjalizacja-pol-klasy","title":"Zaawansowana inicjalizacja p\u00f3l klasy","text":"<p>Specyfikator <code>field()</code> jest u\u017cywany do indywidualnej konfiguracji ka\u017cdego pola w klasie danych. </p> <p>Parametry, kt\u00f3re przyjmuje <code>field()</code>:</p> <ul> <li><code>default</code>: Domy\u015blna warto\u015b\u0107 pola</li> <li><code>default_factory</code>: Bezargumentowa funkcja, zwracaj\u0105ca warto\u015b\u0107 pocz\u0105tkow\u0105 pola</li> <li><code>init</code>: Czy u\u017cywa\u0107 pola w metodzie <code>.__init__()</code>? (Domy\u015blnie <code>True</code>.)</li> <li><code>repr</code>: Czy u\u017cywa\u0107 pola w reprezentacji obiektu przez <code>repr</code>? (Domy\u015blnie <code>True</code>.)</li> <li><code>compare</code>: Czy u\u017cywa\u0107 warto\u015bci pola przy por\u00f3wnaniach? (Domy\u015blnie <code>True</code>.)</li> <li><code>hash</code>: Czy u\u017cywa\u0107 pola przy obliczaniu warto\u015bci <code>hash()</code>? (Domy\u015blnie u\u017cywa tego samego ustawienia co <code>compare</code>.)</li> <li><code>metadata</code>: Mapa (s\u0142ownik) zawieraj\u0105ca dodatkowe informacje o polu</li> <li><code>kw_only</code>: Czy pole mo\u017ce by\u0107 inicalizowane tylko jako argument nazwany w <code>__init__()</code> (Domy\u015blnie <code>False</code>)</li> </ul>"},{"location":"python2/dataclasses.html#przykady","title":"Przyk\u0142ady","text":"<pre><code>from dataclasses import dataclass, field\nfrom datetime import datetime\nfrom typing import Optional\n\n@dataclass\nclass Task:\n    title: str\n    description: str = field(default='', repr=False)\n    due_date: Optional[datetime] = field(default_factory=datetime.today)\n    completed: bool = False\n\n    def days_left(self):\n        now = datetime.now()\n        return (self.due_date - now).days if self.due_date is not None else None\n\ntask1 = Task('Buy milk', due_date=datetime(2023, 12, 23))\ntask2 = Task('Pick up laundry')\nprint(task1)\nprint(task2)\nprint(f'days left: {task1.days_left()}')\nprint(f'days left: {task2.days_left()}')\n</code></pre> <pre><code>Task(title='Buy milk', due_date=datetime.datetime(2023, 12, 23, 0, 0), completed=False)\nTask(title='Pick up laundry', due_date=datetime.datetime(2023, 12, 10, 4, 37, 37, 392913), completed=False)\ndays left: 8\ndays left: -1\n</code></pre>"},{"location":"python2/dataclasses.html#parametry-dekoratora-dataclass","title":"Parametry dekoratora <code>@dataclass</code>","text":"<ul> <li> <p><code>init</code>: Czy automatycznie generowa\u0107 metod\u0119 <code>__init__()</code> dla klasy. (Domy\u015blnie <code>True</code>)</p> </li> <li> <p><code>repr</code>: Czy automatycznie generowa\u0107 metod\u0119 <code>__repr__()</code> dla klasy. (Domy\u015blnie <code>True</code>)</p> </li> <li> <p><code>eq</code>: Czy automatycznie generowa\u0107 metod\u0119 <code>__eq__()</code> dla klasy. (Domy\u015blnie <code>True</code>).</p> </li> <li> <p><code>order</code>: Gdy ustawione na <code>True</code>, automatycznie generuje metody por\u00f3wnuj\u0105ce (<code>__lt__</code>, <code>__le__</code>, <code>__gt__</code>, <code>__ge__</code>) dla klasy. (Domy\u015blnie <code>False</code>).</p> </li> <li> <p><code>unsafe_hash</code>: Gdy ustawione na  <code>True</code>, generuje metod\u0119 <code>__hash__()</code> nawet wtedy, gdy <code>eq</code> jest <code>False</code> lub gdy klasa jest mutowalna (<code>frozen=False</code>).</p> </li> <li> <p><code>frozen</code>: Gdy ustawione na <code>True</code>, tworzy niemutowalne (immutable) instancje dataclass. Pr\u00f3ba zmiany atrybut\u00f3w obiektu spowoduje wygenerowanie b\u0142\u0119du. (Domy\u015blnie <code>False</code>).</p> </li> <li> <p><code>kw_only</code>: Gdy ustawione na <code>True</code>, wszystkie pola klasy s\u0105 wymagane jako argumenty nazwane (keyword-only arguments) w automatycznie generowanym konstruktorze <code>__init__()</code>. To znaczy, \u017ce musz\u0105 by\u0107 przekazywane do konstruktora przy u\u017cyciu nazwy pola. (Domy\u015blnie <code>False</code>).</p> </li> <li> <p><code>match_args</code>: Gdy ustawione na <code>True</code>, generuje specjaln\u0105 krotk\u0119 <code>__match_args__</code>, kt\u00f3ra jest wykorzystywana w dopasowywaniu wzorc\u00f3w (pattern matching). (Domy\u015blnie <code>True</code>).</p> </li> <li> <p><code>slots</code>: Je\u015bli ustawione na <code>True</code>, generuje automatycznie atrybut <code>__slots__</code> dla klasy, co mo\u017ce poprawi\u0107 wydajno\u015b\u0107 poprzez oszcz\u0119dno\u015b\u0107 pami\u0119ci. (Domy\u015blnie <code>False</code>).</p> </li> <li> <p><code>weakref_slot</code>: Je\u015bli ustawione na <code>True</code>, dodaje dodatkowy slot <code>__weakref__</code> do klasy, umo\u017cliwiaj\u0105c obiektom klasy bycie celami s\u0142abych referencji. (Domy\u015blnie <code>False</code>).</p> </li> </ul>"},{"location":"python2/dataclasses.html#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>from dataclasses import dataclass\n\n@dataclass(eq=True, frozen=True, kw_only=True)\nclass Point:\n    x: int\n    y: int\n</code></pre>"},{"location":"python2/dataclasses.html#metoda-__post_init__","title":"Metoda <code>__post_init__</code>","text":""},{"location":"python2/dataclasses.html#uzywanie-metody-__post_init__-w-dataclassach-pythona","title":"U\u017cywanie Metody <code>__post_init__</code> w Dataclassach Pythona","text":"<p>Metoda <code>__post_init__</code> w dataclassach Pythona jest specjaln\u0105 metod\u0105, kt\u00f3ra jest automatycznie wywo\u0142ywana zaraz po zako\u0144czeniu inicjalizacji obiektu za pomoc\u0105 metody <code>__init__</code>. Pozwala ona na wykonanie dodatkowej logiki lub inicjalizacji, kt\u00f3re nie s\u0105 bezpo\u015brednio zwi\u0105zane z prostym przypisywaniem warto\u015bci do p\u00f3l klasy.</p> <p>Cechy metody <code>__post_init__</code>:</p> <ol> <li> <p>Automatyczne Wywo\u0142anie: Metoda <code>__post_init__</code> jest wywo\u0142ywana automatycznie zaraz po <code>__init__</code>.</p> </li> <li> <p>Dost\u0119p do P\u00f3l Klasy: Masz dost\u0119p do wszystkich p\u00f3l zdefiniowanych w dataclassie.</p> </li> </ol> <p>Zastosowania:</p> <ol> <li> <p>Dodatkowe obliczenia na podstawie warto\u015bci p\u00f3l</p> </li> <li> <p>Weryfikacja, generowanie i przetwarzanie danych wej\u015bciowych</p> </li> </ol>"},{"location":"python2/dataclasses.html#przykady_1","title":"Przyk\u0142ady","text":"<pre><code>from dataclasses import dataclass\n\n@dataclass\nclass Person:\n    name: str\n    age: int\n\n    def __post_init__(self):\n        if self.age &lt; 0:\n            raise ValueError(\"Age cannot be negative\")\n        self.name = self.name.title() \n\n\nperson = Person(\"jan kowalski\", 30)\nprint(person)\n</code></pre> <pre><code>Person(name='Jan Kowalski', age=30)\n</code></pre> <pre><code>from dataclasses import dataclass\n\n@dataclass\nclass ServerInfo:\n    ip: str\n    hostname: str\n    domain: str\n    fqdn: str = field(init=False)\n\n    def __post_init__(self):\n        self.fqdn = f'{self.hostname}.{self.domain}'\n\nserver = ServerInfo('10.0.0.1', 'myhost', 'example.com')\nprint(server)\n</code></pre> <pre><code>ServerInfo(ip='10.0.0.1', hostname='myhost', domain='example.com', fqdn='myhost.example.com')\n</code></pre>"},{"location":"python2/dataclasses.html#konwersja-instancji-dataclass","title":"Konwersja instancji <code>dataclass</code>","text":""},{"location":"python2/dataclasses.html#metody-asdict-i-astuple-w-dataclassach-pythona","title":"Metody <code>.asdict()</code> i <code>.astuple()</code> w Dataclassach Pythona","text":"<p>Dataclass w Pythonie oferuje dwie u\u017cyteczne metody: <code>.asdict()</code> i <code>.astuple()</code>, kt\u00f3re pozwalaj\u0105 na \u0142atwe konwertowanie instancji dataclass do s\u0142ownika (dictionary) i krotki (tuple).</p>"},{"location":"python2/dataclasses.html#metoda-asdict","title":"Metoda <code>.asdict()</code>","text":"<p>Metoda <code>.asdict()</code> konwertuje instancj\u0119 dataclass na s\u0142ownik. Klucze s\u0142ownika odpowiadaj\u0105 nazwom p\u00f3l w dataclass, a warto\u015bci s\u0105 odpowiednimi warto\u015bciami tych p\u00f3l.</p>"},{"location":"python2/dataclasses.html#przykad_2","title":"Przyk\u0142ad","text":"<pre><code>from dataclasses import dataclass, asdict\n\n@dataclass\nclass Person:\n    name: str\n    age: int\n\nperson = Person(\"Jan Kowalski\", 30)\nprint(asdict(person))\n</code></pre> <pre><code>{'name': 'Jan Kowalski', 'age': 30}\n</code></pre>"},{"location":"python2/dataclasses.html#metoda-astuple","title":"Metoda <code>.astuple()</code>","text":"<p>Metoda <code>.astuple()</code> konwertuje instancj\u0119 dataclass na krotk\u0119. Elementy krotki s\u0105 warto\u015bciami p\u00f3l w dataclass, u\u0142o\u017conymi w kolejno\u015bci, w jakiej s\u0105 zdefiniowane w klasie.</p> <pre><code>from dataclasses import dataclass, astuple\n\n@dataclass\nclass Person:\n    name: str\n    age: int\n\nperson = Person(\"Jan Kowalski\", 30)\nprint(astuple(person))\n</code></pre> <pre><code>('Jan Kowalski', 30)\n</code></pre> <p>Metody <code>.asdict()</code> i <code>.astuple()</code> tanowi\u0105 sposoby na konwersj\u0119 instancji dataclass do standardowych typ\u00f3w Pythona, co jest szczeg\u00f3lnie przydatne w kontek\u015bcie serializacji danych i pracy z API webowym.</p>"},{"location":"python2/dataclasses.html#zadania","title":"Zadania","text":""},{"location":"python2/dataclasses.html#zadanie-1","title":"Zadanie 1","text":"<p>Utw\u00f3rz dataclass o nazwie <code>Book</code>, kt\u00f3ra b\u0119dzie przechowywa\u0107 informacje o ksi\u0105\u017cce, takie jak <code>title</code> (tytu\u0142), <code>author</code> (autor) i <code>publication_year</code> (rok wydania). Nast\u0119pnie stw\u00f3rz kilka instancji tej klasy i wy\u015bwietl je.</p>"},{"location":"python2/dataclasses.html#zadanie-2","title":"Zadanie 2","text":"<p>Rozszerz dataclass <code>Book</code> z zadania 1, dodaj\u0105c metod\u0119 <code>__post_init__</code>, kt\u00f3ra sprawdzi, czy <code>publication_year</code> nie jest wi\u0119kszy ni\u017c bie\u017c\u0105cy rok. Je\u015bli jest, zg\u0142o\u015b wyj\u0105tek <code>ValueError</code>.</p>"},{"location":"python2/dataclasses.html#zadanie-3","title":"Zadanie 3","text":"<p>U\u017cywaj\u0105c dataclass <code>Book</code>, stw\u00f3rz funkcj\u0119, kt\u00f3ra przyjmuje instancj\u0119 <code>Book</code> i zwraca reprezentacj\u0119 tej instancji jako s\u0142ownik oraz krotk\u0119, korzystaj\u0105c z metod <code>.asdict()</code> i <code>.astuple()</code>.</p>"},{"location":"python2/dataclasses.html#zadanie-4","title":"Zadanie 4","text":"<p>Zdefiniuj dataclass <code>Person</code> z polami <code>name</code> i <code>age</code>. Ustaw dataclass jako niemutowaln\u0105. Spr\u00f3buj zmieni\u0107 warto\u015b\u0107 jednego z p\u00f3l po utworzeniu instancji klasy, aby zobaczy\u0107, jak dzia\u0142a niemutowalno\u015b\u0107.</p>"},{"location":"python2/dataclasses.html#zadanie-5","title":"Zadanie 5","text":"<p>Stw\u00f3rz dataclass <code>Rectangle</code> z polami <code>width</code> i <code>height</code>. Dodaj parametry <code>eq</code> i <code>order</code>, aby umo\u017cliwi\u0107 por\u00f3wnywanie instancji tej klasy. Nast\u0119pnie utw\u00f3rz kilka prostok\u0105t\u00f3w i posortuj je wed\u0142ug ich szeroko\u015bci.</p>"},{"location":"python2/enum.html","title":"Enum w Pythonie","text":"<p>Enum w Pythonie to specjalny typ danych - typ wyliczeniowy. Umo\u017cliwia definiowanie zestawu nazwanych warto\u015bci, zwanych polami Enum. Te warto\u015bci s\u0105 sta\u0142e, niemutowalne i unikalne w obr\u0119bie danego Enuma.</p> <pre><code>from enum import Enum\n\nclass Color(Enum):\n    RED = 1\n    GREEN = 2\n    BLUE = 3\n\nprint(Color.RED)\nprint(Color.RED.name) # (1)!\nprint(Color.RED.value) # (2)!\n</code></pre> <ol> <li>Nazwa pola obiektu Enum</li> <li>Warto\u015b\u0107 pola obiektu Enum</li> </ol> <pre><code>Color.RED\nRED\n1\n</code></pre>"},{"location":"python2/enum.html#podstawowe-cechy-enum","title":"Podstawowe cechy Enum:","text":"<ul> <li>Definiowanie Enum<ul> <li>Enum tworzy si\u0119 poprzez dziedziczenie z klasy <code>Enum</code> dost\u0119pnej w module <code>enum</code></li> </ul> </li> <li>Unikalno\u015b\u0107 warto\u015bci<ul> <li>Ka\u017cdy pole klasy Enum jest unikalne i ma sta\u0142\u0105 warto\u015b\u0107</li> </ul> </li> <li>Iteracja i por\u00f3wnywanie <ul> <li>Po klasach Enum mo\u017cna iterowa\u0107 i por\u00f3wnywa\u0107 z u\u017cyciem standardowych operator\u00f3w por\u00f3wnania</li> </ul> </li> <li>Dost\u0119p do p\u00f3l<ul> <li>Do p\u00f3l Enuma mo\u017cna uzyska\u0107 dost\u0119p za pomoc\u0105 ich nazwy lub warto\u015bci</li> </ul> </li> <li>Automatyczne warto\u015bci<ul> <li>Python umo\u017cliwia automatyczne przypisywanie warto\u015bci polom</li> </ul> </li> </ul>"},{"location":"python2/enum.html#zastosowania-enum-w-pythonie","title":"Zastosowania Enum w Pythonie:","text":"<ul> <li>Reprezentacja sta\u0142ych<ul> <li>Enum jest u\u017cywany do reprezentowania zestawu sta\u0142ych, takich jak dni tygodnia, kierunki, stany maszyny itp.</li> </ul> </li> <li>Zwi\u0119kszenie czytelno\u015bci kodu<ul> <li>U\u017cycie nazwanych warto\u015bci zamiast surowych warto\u015bci liczbowych czy tekstowych zwi\u0119ksza czytelno\u015b\u0107 i \u0142atwo\u015b\u0107 utrzymania kodu</li> </ul> </li> </ul>"},{"location":"python2/enum.html#przykady","title":"Przyk\u0142ady","text":""},{"location":"python2/enum.html#prosty-enum","title":"Prosty Enum","text":"<pre><code>from enum import Enum\n\nclass Color(Enum):\n    RED = 1\n    GREEN = 2\n    BLUE = 3\n\nprint(Color.RED)\nprint(Color.RED.name) # (1)!\nprint(Color.RED.value) # (2)!\n</code></pre> <ol> <li>Nazwa pola obiektu Enum</li> <li>Warto\u015b\u0107 pola obiektu Enum</li> </ol> <pre><code>Color.RED\nRED\n1\n</code></pre>"},{"location":"python2/enum.html#automatyczne-wartosci-i-iteracja","title":"Automatyczne warto\u015bci i iteracja","text":"<pre><code>from enum import Enum, auto\n\nclass Direction(Enum):\n    UP = auto()\n    DOWN = auto()\n    LEFT = auto()\n    RIGHT = auto()\n\nfor direction in Direction:\n    print(f'{direction} - name: {direction.name}, value: {direction.value}')\n</code></pre> <pre><code>Direction.UP - name: UP, value: 1\nDirection.DOWN - name: DOWN, value: 2\nDirection.LEFT - name: LEFT, value: 3\nDirection.RIGHT - name: RIGHT, value: 4\n</code></pre>"},{"location":"python2/enum.html#wasna-funkcja-generujaca-wartosci-automatyczne","title":"W\u0142asna funkcja generuj\u0105ca warto\u015bci automatyczne","text":"<pre><code>from enum import Enum, auto\n\nclass CustomValueEnum(Enum):\n    @staticmethod\n    def _generate_next_value_(name, start, count, last_values):\n        return (count + 1) * 10\n    A = auto()\n    B = auto()\n    C = auto()\n    D = auto()\n\n\nfor item in CustomValueEnum:\n    print(f\"{item.name} has a value of {item.value}\")\n</code></pre> <pre><code>A has a value of 10\nB has a value of 20\nC has a value of 30\nD has a value of 40\n</code></pre>"},{"location":"python2/enum.html#specjalizowane-klasy-wyliczeniowe","title":"Specjalizowane klasy wyliczeniowe","text":"<p>Cz\u0142onkowie enumeracji s\u0105 okre\u015blonego typu np. <code>str``,</code>int` itp.</p>"},{"location":"python2/enum.html#intenum","title":"<code>IntEnum</code>","text":"<ul> <li>Cz\u0142onkowie to liczby ca\u0142kowite (int)</li> <li>Mo\u017cna ich u\u017cy\u0107 wsz\u0119dzie tam gdzie u\u017cywa si\u0119 liczb ca\u0142kowitych</li> <li>Operacje na IntEnum trac\u0105 status enumeracji</li> </ul>"},{"location":"python2/enum.html#strenum","title":"<code>StrEnum</code>","text":"<ul> <li>Cz\u0142onkowie to \u0142a\u0144cuchy znak\u00f3w (str)</li> <li>Mo\u017cna ich u\u017cywa\u0107 jak zwyk\u0142ych \u0142a\u0144cuch\u00f3w znak\u00f3w</li> <li>Operacje na StrEnum nie tworz\u0105 nowej enumeracji</li> </ul>"},{"location":"python2/enum.html#flag","title":"<code>Flag</code>","text":"<ul> <li>Obs\u0142uga operator\u00f3w bitowych w <code>Flag</code></li> <li><code>&amp;</code> (AND), <code>|</code> (OR), <code>^</code> (XOR), <code>~</code> (INVERT)</li> <li>Posiada szereg metod specjalnych pozwalaj\u0105cych zdefiniowa\u0107 zachowanie operator\u00f3w bitowych</li> <li>Wyniki operacji s\u0105 cz\u0142onkami enumeracji</li> </ul> <pre><code>from enum import Flag, auto\nclass Color(Flag):\n    RED = auto()\n    GREEN = auto()\n    BLUE = auto()\npurple = Color.RED | Color.BLUE\nwhite = Color.RED | Color.GREEN | Color.BLUE\n\nprint(Color.GREEN in purple)\nprint(Color.GREEN in white)\nprint(purple in white)\nprint(white in purple)\n\nprint(Color.GREEN)\nprint(purple)\n</code></pre> <pre><code>False\nTrue\nTrue\nFalse\nColor.GREEN\nColor.RED|BLUE\n</code></pre>"},{"location":"python2/enum.html#intflag","title":"<code>IntFlag</code>","text":"<ul> <li><code>IntFlag</code> jest podobny do <code>Flag</code></li> <li>Cz\u0142onkowie to liczby ca\u0142kowite ale wspiera tak\u017ce operacje bitowe</li> <li>Mo\u017cliwo\u015b\u0107 u\u017cycia jak liczby ca\u0142kowite</li> </ul>"},{"location":"python2/enum.html#zadania","title":"Zadania","text":""},{"location":"python2/enum.html#zadanie-1","title":"Zadanie 1","text":"<p>Stw\u00f3rz klas\u0119 Enum <code>Season</code>, kt\u00f3ra b\u0119dzie reprezentowa\u0107 pory roku: Wiosna, Lato, Jesie\u0144, Zima. Nast\u0119pnie napisz funkcj\u0119, kt\u00f3ra przyjmuje argument typu <code>Season</code> i wypisuje odpowiedni komunikat zale\u017cny od pory roku.</p>"},{"location":"python2/enum.html#zadanie-2","title":"Zadanie 2","text":"<p>U\u017cyj <code>auto()</code> do stworzenia klasy Enum <code>Month</code>, reprezentuj\u0105cej miesi\u0105ce: Stycze\u0144, Luty, Marzec, itd. Nast\u0119pnie wypisz nazwy i warto\u015bci wszystkich cz\u0142onk\u00f3w tego Enuma.</p>"},{"location":"python2/enum.html#zadanie-3","title":"Zadanie 3","text":"<p>Stw\u00f3rz klas\u0119 Enum <code>TrafficLight</code> z warto\u015bciami RED, YELLOW, GREEN. Napisz funkcj\u0119, kt\u00f3ra przyjmuje dwa argumenty typu <code>TrafficLight</code> i zwraca <code>True</code>, je\u015bli oba maj\u0105 t\u0119 sam\u0105 warto\u015b\u0107, w przeciwnym razie <code>False</code>.</p>"},{"location":"python2/enum.html#zadanie-4","title":"Zadanie 4","text":"<p>Stw\u00f3rz klas\u0119 <code>IntEnum</code> o nazwie <code>Weekday</code>, gdzie ka\u017cdy dzie\u0144 tygodnia jest reprezentowany przez odpowiedni\u0105 warto\u015b\u0107 liczbow\u0105 (np. 1 dla Poniedzia\u0142ku, 2 dla Wtorku, itd.). Napisz funkcj\u0119, kt\u00f3ra przyjmuje argument typu <code>Weekday</code> i zwraca nazw\u0119 dnia tygodnia oraz jego kolejno\u015b\u0107 liczbow\u0105. Sprawd\u017a, czy zwi\u0119kszenie <code>Weekday</code> o <code>1</code> jest r\u00f3wne kolejnemu dniu.</p>"},{"location":"python2/enum.html#zadanie-5","title":"Zadanie 5","text":"<p>Stw\u00f3rz klas\u0119 <code>Flag</code> o nazwie <code>Permission</code>, z warto\u015bciami READ, WRITE i EXECUTE. Napisz funkcj\u0119, kt\u00f3ra tworzy kombinacj\u0119 uprawnie\u0144 (u\u017cywaj\u0105c operacji bitowych) i sprawdza, czy okre\u015blone uprawnienie jest ustawione w danej kombinacji. Na przyk\u0142ad, czy w kombinacji READ|WRITE jest ustawione uprawnienie EXECUTE.</p>"},{"location":"python2/typehints.html","title":"Type hints - informacje o typach danych w Pythonie","text":""},{"location":"python2/typehints.html#type-hints","title":"Type hints","text":"<ul> <li>Umo\u017cliwia okre\u015blenie typ\u00f3w danych</li> <li>Podstawowe typy: <code>int</code>, <code>float</code>, <code>str</code>, <code>bool</code>, <code>list</code>, <code>tuple</code>, <code>dict</code></li> <li>U\u0142atwia zrozumienie i analiz\u0119 kodu</li> <li>Pomaga narz\u0119dziom takim jak linters i IDE</li> <li>Opcjonalne, nie wp\u0142ywaj\u0105 na dzia\u0142anie programu</li> </ul>"},{"location":"python2/typehints.html#przykady","title":"Przyk\u0142ady","text":"<pre><code>def add_numbers(a: int, b: int) -&gt; int:\n    return a + b\n\nnumber: int = 5\nname: str = \"Alice\"\nis_valid: bool = True\nnumbers: list[int] = [1, 2, 3]\ncoordinates: tuple[int, int] = (10, 20)\nuser_data: dict[str, str] = {\"name\": \"Alice\", \"age\": \"30\"}\n</code></pre>"},{"location":"python2/typehints.html#type-annotations-vs-type-hints","title":"Type annotations vs. type hints","text":"<ul> <li>Annotations: mechanizm dodawania informacji do kodu<ul> <li>Type annotations - mechanizm dodawania informacji o typach bazuj\u0105cy na adnotacjach</li> </ul> </li> <li>Type hint: konkretna wskaz\u00f3wka dotycz\u0105ca typu danych<ul> <li>Type hints mog\u0105 by\u0107 bardziej z\u0142o\u017cone (np. modu\u0142 <code>typing</code>)</li> </ul> </li> <li>W praktyce cz\u0119sto stosowane wymiennie (cho\u0107 nie jest to do ko\u0144ca poprawne)</li> <li>Type hints skupiaj\u0105 si\u0119 na szczeg\u00f3\u0142ach i konkretnych typach</li> </ul>"},{"location":"python2/typehints.html#modu-typing","title":"Modu\u0142 <code>typing</code>","text":"<ul> <li>Rozszerza mo\u017cliwo\u015bci typehints</li> <li>Zawiera typy takie jak: <code>Optional</code>, <code>Union</code>, <code>Iterable</code>, <code>Mapping</code>, <code>Self</code></li> <li>Precyzyjne okre\u015blenie oczekiwanych typ\u00f3w</li> <li>Przydatny dla z\u0142o\u017conych i elastycznych typ\u00f3w danych</li> </ul>"},{"location":"python2/typehints.html#przykad","title":"Przyk\u0142ad","text":"<pre><code>from typing import Optional, Union, Tuple\n\ndef process_items(items: list[int]) -&gt; None:\n    pass\n\ndef get_user_data(user_id: int) -&gt; Optional[dict[str, str]]:\n    return None\n\nCoordinate = Tuple[int, int]\nUserAge = Union[int, str]\n</code></pre>"},{"location":"python2/typehints.html#aliasy-typow","title":"Aliasy typ\u00f3w","text":"<pre><code>Vector = list[float]\nUser = dict[str, str]\nPoint = tuple[int, int]\n\ndef scale_vector(vector: Vector, scalar: float) -&gt; Vector:\n    return [x * scalar for x in vector]\n\ndef get_user_info(user_id: int) -&gt; User:\n    # logic\n    return {\"name\": \"Alice\", \"age\": \"30\"}\n</code></pre>"},{"location":"python2/typehints.html#typevar-typy-generyczne","title":"<code>TypeVar</code> - typy generyczne","text":"<ul> <li>Definiowanie typ\u00f3w generycznych</li> <li>Zwi\u0119ksza elastyczno\u015b\u0107 funkcji i klas</li> <li>Ograniczenia typ\u00f3w, np. wszystkie argumenty tego samego typu</li> <li>Przydatne w bibliotekach i frameworkach</li> </ul>"},{"location":"python2/typehints.html#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>from typing import TypeVar\n\nT = TypeVar('T')\n\ndef get_first_element(sequence: list[T]) -&gt; T:\n    return sequence[0]\n\nnumbers: list[int] = [1, 2, 3]\nname: list[str] = [\"Alice\", \"Bob\", \"Charlie\"]\n</code></pre>"},{"location":"python2/typehints.html#self","title":"<code>Self</code>","text":"<ul> <li>Oznacza instancj\u0119 tej samej klasy</li> <li>Elastyczno\u015b\u0107 i u\u0142atwienie refaktoryzacji</li> <li>Nie wymaga zmian po zmianie nazwy klasy</li> </ul>"},{"location":"python2/typehints.html#przykad_2","title":"Przyk\u0142ad","text":"<pre><code>from typing import Self, Iterable, TypeVar\n\nclass Vector:\n    def __init__(self, values: Iterable[float]) -&gt; None:\n        self.values = values\n\n    def scale(self: Self, scalar: float) -&gt; Self:\n        return Vector([x * scalar for x in self.values])\n\nvector = Vector([1, 2, 3])\nscaled_vector = vector.scale(2.0)\n</code></pre>"},{"location":"python2/typehints.html#optional","title":"Optional","text":"<ul> <li>Oznacza typ lub <code>None</code></li> <li>Dla opcjonalnych argument\u00f3w i zmiennych</li> <li>Zwi\u0119ksza czytelno\u015b\u0107 kodu</li> <li>Pomaga w poprawnym u\u017cyciu typ\u00f3w</li> </ul>"},{"location":"python2/typehints.html#przykad_3","title":"Przyk\u0142ad","text":"<pre><code>from typing import Optional\n\ndef get_user_name(user_id: int) -&gt; Optional[str]:\n    if user_id == 1:\n        return \"Alice\"\n    else:\n        return None\n\nuser_name: Optional[str] = get_user_name(2)\n</code></pre>"},{"location":"python2/typehints.html#iterable-i-mapping","title":"<code>Iterable</code> i <code>Mapping</code>","text":"<ul> <li><code>Iterable</code>: dla typ\u00f3w iterowalnych (listy, krotki, itp.)</li> <li><code>Mapping</code>: dla struktur klucz-warto\u015b\u0107 (s\u0142owniki itp.)</li> <li>U\u017cywane dla zwi\u0119kszenia czytelno\u015bci i elastyczno\u015bci typehints</li> <li>Pomaga w okre\u015bleniu spodziewanej struktury danych</li> </ul>"},{"location":"python2/typehints.html#przykad_4","title":"Przyk\u0142ad","text":"<pre><code>from typing import Iterable, Mapping\n\ndef process_values(values: Iterable[int]) -&gt; None:\n    for value in values:\n        print(value)\n\ndef get_user_data(users: Mapping[str, int]) -&gt; None:\n    for name, age in users.items():\n        print(name, age)\n\nnumbers: Iterable[int] = [1, 2, 3]\nuser_ages: Mapping[str, int] = {\"Alice\": 30, \"Bob\": 25}\n</code></pre>"},{"location":"python2/typehints.html#typehints-dla-generatorow","title":"Typehints dla generator\u00f3w","text":"<ul> <li>Okre\u015bla typ warto\u015bci zwracanych przez generator</li> <li>Format: <code>Generator[YieldType, SendType, ReturnType]</code><ul> <li><code>YieldType</code>: typ zwracanych warto\u015bci</li> <li><code>SendType</code>: typ wysy\u0142anych warto\u015bci</li> <li><code>ReturnType</code>: typ zwracany po zako\u0144czeniu iteracji</li> </ul> </li> </ul>"},{"location":"python2/typehints.html#przykad_5","title":"Przyk\u0142ad","text":"<pre><code>from typing import Generator\n\ndef count_to_ten() -&gt; Generator[int, None, None]:\n    for i in range(1, 11):\n        yield i\n\nfor number in count_to_ten():\n    print(number)\n</code></pre>"},{"location":"python2/typehints.html#anystr","title":"<code>AnyStr</code>","text":"<ul> <li>Alias dla <code>str | bytes</code></li> <li>Dla funkcji obs\u0142uguj\u0105cych zar\u00f3wno ci\u0105gi znak\u00f3w, jak i bajty</li> <li>Zwi\u0119ksza czytelno\u015b\u0107 w definiowaniu typ\u00f3w</li> </ul> <pre><code>from typing import AnyStr\n\ndef concat_strings(a: AnyStr, b: AnyStr) -&gt; AnyStr:\n    return a + b #  This will not work if a and b are of different types\n\nresult_str = concat_strings(\"Hello, \", \"world!\")\nresult_bytes = concat_strings(b\"Hello, \", b\"world!\")\n</code></pre>"},{"location":"python2/typehints.html#typeddict","title":"<code>TypedDict</code>","text":"<ul> <li>Niestandardowe typy s\u0142ownik\u00f3w</li> <li>Okre\u015blone klucze i typy warto\u015bci</li> <li>U\u0142atwia zrozumienie i zapobiega b\u0142\u0119dom</li> <li>U\u017cyteczny dla z\u0142o\u017conych obiekt\u00f3w danych</li> </ul>"},{"location":"python2/typehints.html#przykad_6","title":"Przyk\u0142ad","text":"<pre><code>from typing import TypedDict\n\nclass UserData(TypedDict):\n    name: str\n    age: int\n\nuser: UserData = {\"name\": \"Alice\", \"age\": 30}\n</code></pre>"},{"location":"python2/typehints.html#klasy-abstrakcyjne-w-typowaniu","title":"Klasy abstrakcyjne w typowaniu","text":"<ul> <li>Wykorzystanie klas abstrakcyjnych jako typ\u00f3w bazowych</li> <li>Okre\u015blenie wymaganych metod i w\u0142a\u015bciwo\u015bci</li> <li>Tworzenie generycznego i elastycznego kodu</li> <li>Dobrze zdefiniowane oczekiwane interfejsy</li> </ul>"},{"location":"python2/typehints.html#przykad_7","title":"Przyk\u0142ad","text":"<pre><code>from abc import ABC, abstractmethod\nfrom math import pi\n\nclass Shape(ABC):\n    @abstractmethod\n    def area(self) -&gt; float:\n        pass\n\ndef calculate_total_area(shapes: list[Shape]) -&gt; float:\n    return sum(shape.area() for shape in shapes)\n\nclass Circle(Shape):\n    def __init__(self, radius: float):\n        self.radius = radius\n\n    def area(self) -&gt; float:\n        return pi * self.radius ** 2\n</code></pre>"},{"location":"python2/typehints.html#zadania","title":"Zadania","text":""},{"location":"python2/typehints.html#zadanie-1","title":"Zadanie 1","text":"<p>Napisz funkcj\u0119 <code>calculate_area</code> obliczaj\u0105c\u0105 pole prostok\u0105ta. Funkcja powinna przyjmowa\u0107 dwa argumenty: <code>width</code> i <code>height</code>, oba typu ca\u0142kowitego. Funkcja powinna zwraca\u0107 warto\u015b\u0107 typu reprezentuj\u0105c\u0105 pole prostok\u0105ta.</p>"},{"location":"python2/typehints.html#zadanie-2","title":"Zadanie 2","text":"<p>Zaimplementuj funkcj\u0119 <code>find_student</code> poszukuj\u0105c\u0105 studenta w s\u0142owniku. Funkcja powinna przyjmowa\u0107 jeden argument <code>student_id</code> typu <code>str</code> i zwraca\u0107 nazwisko studenta typu <code>str</code> lub <code>None</code>, je\u015bli student o danym ID nie istnieje.</p>"},{"location":"python2/typehints.html#zadanie-3","title":"Zadanie 3","text":"<p>Utw\u00f3rz funkcj\u0119 <code>merge_dictionaries</code>, kt\u00f3ra scala dwie listy s\u0142ownik\u00f3w. Ka\u017cda lista powinna zawiera\u0107 s\u0142owniki w kt\u00f3rych klucz jest \u0142a\u0144cuchem znak\u00f3w, a liczba ca\u0142kowita wartoci\u0105. Funkcja powinna zwraca\u0107 pojedyncz\u0105 list\u0119 scalonych s\u0142ownik\u00f3w.</p>"},{"location":"python2/typehints.html#zadanie-4","title":"Zadanie 4","text":"<p>Napisz generator <code>fibonacci</code>, kt\u00f3ry b\u0119dzie generowa\u0142 ci\u0105g Fibonacciego. Generator nie powinien przyjmowa\u0107 \u017cadnych argument\u00f3w i powinien zwraca\u0107 kolejne liczby typu int z ci\u0105gu Fibonacciego.</p>"},{"location":"python2/typehints.html#zadanie-5","title":"Zadanie 5","text":"<p>Zdefiniuj funkcj\u0119 generyczn\u0105 get_first_last, kt\u00f3ra przyjmuje list\u0119 element\u00f3w dowolnego typu i zwraca krotk\u0119 z pierwszym i ostatnim elementem tej listy. U\u017cyj odpowiednich typ\u00f3w do okre\u015blenia, \u017ce elementy listy i elementy zwracanej krotki s\u0105 tego samego typu.</p>"},{"location":"python2/oop/abc.html","title":"Klasy abstrakcyjne","text":"<p>Klasy abstrakcyjne w programowaniu obiektowym s\u0142u\u017c\u0105 jako szablony dla innych klas. Zawieraj\u0105 abstrakcyjne metody, kt\u00f3re musz\u0105 by\u0107 zaimplementowane przez klasy dziedzicz\u0105ce. Klasy abstrakcyjne same w sobie nie mog\u0105 by\u0107 instancjonowane. S\u0105 one u\u017cywane do definiowania og\u00f3lnego interfejsu, kt\u00f3ry musz\u0105 realizowa\u0107 konkretne implementacje w klasach pochodnych.</p> <pre><code>from abc import ABC, abstractmethod\nfrom math import pi\n\nclass Shape(ABC):\n    @abstractmethod\n    def area(self):\n        pass\n\n    @abstractmethod\n    def perimeter(self):\n        pass\n\nclass Rectangle(Shape):\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n\n    def area(self):\n        return self.width * self.height\n\n    def perimeter(self):\n        return 2 * (self.width + self.height)\n\nclass Circle(Shape):\n    def __init__(self, radius):\n        self.radius = radius\n\n    def area(self):\n        return pi * self.radius ** 2\n\n    def perimeter(self):\n        return 2 * pi * self.radius\n</code></pre>"},{"location":"python2/oop/composition_inheritance.html","title":"Dziedziczenie i kompozycja","text":""},{"location":"python2/oop/composition_inheritance.html#dziedziczenie","title":"Dziedziczenie","text":"<p>Dziedziczenie w programowaniu to mechanizm, dzi\u0119ki kt\u00f3remu jedna klasa (klasa potomna) mo\u017ce dziedziczy\u0107 cechy i zachowania od innej klasy (klasy bazowej). Umo\u017cliwia to ponowne wykorzystanie kodu, u\u0142atwia zarz\u0105dzanie i rozw\u00f3j aplikacji. Dziedziczenie jest jednym z fundament\u00f3w programowania obiektowego.</p> <pre><code>class Train:\n    def __init__(self, car_number):\n        self.car_number = car_number\n\n    def go(self):\n        print('Train going')\n\n\nclass PassengerTrain(Train):\n    def __init__(self, car_number, passenger_capacity):\n        super().__init__(car_number)\n        self.passenger_capacity = passenger_capacity\n        self.passengers = []\n\n    def add_passenger(self, name, surname):\n        self.passengers.append((name, surname))\n\n\nclass CargoTrain(Train):\n    def __init__(self, car_number, max_cargo_weight):\n        super().__init__(car_number)\n        self.max_cargo_weight = max_cargo_weight\n        self.weight_loaded = 0\n\n    def load_cargo(self, weight):\n        self.weight_loaded += self.weight_loaded\n\n    def weight_available(self):\n        return self.max_cargo_weight - self.weight_loaded\n</code></pre> <pre><code>class Animal:\n    def say(self):\n        pass\n\n\nclass Dog(Animal):\n    def say(self):\n        return \"Bark bark!\"\n\n\nclass Cat(Animal):\n    def say(self):\n        return \"Meow!\"\n</code></pre>"},{"location":"python2/oop/composition_inheritance.html#kompozycja","title":"Kompozycja","text":"<p>Kompozycja w programowaniu to spos\u00f3b budowy klas, gdzie jedna klasa zawiera obiekty innych klas jako swoje sk\u0142adowe. Jest to alternatywa dla dziedziczenia, pozwalaj\u0105ca mniej sztywne powi\u0105zania mi\u0119dzy klasami, co u\u0142atwia testowanie i rozw\u00f3j oprogramowania.</p> <pre><code>class Engine:\n    def __init__(self, capacity):\n        self.capacity = capacity\n\n    def start(self):\n        return \"Engine started\"\n\nclass Car:\n    def __init__(self):\n        self.engine = Engine()\n\n    def start(self):\n        return self.engine.start()\n</code></pre> <ul> <li>Dziedziczenie vs. Kompozycja: Dwa podej\u015bcia do organizacji klas.</li> <li>Dziedziczenie: Relacja \"jest rodzajem\" - rozszerzenie klasy bazowej.</li> <li>Kompozycja: Relacja \"ma\" - zawieranie obiekt\u00f3w jako sk\u0142adowe.</li> <li>Wyb\u00f3r Metody: Zale\u017cy od specyfiki i wymaga\u0144 aplikacji.</li> </ul> <pre><code># Inheritance\nclass Bird:\n    def fly(self):\n        return \"Bird flies\"\n\nclass Swallow(Bird):\n    pass\n\n# Composition\nclass Wings:\n    def flap(self):\n        return \"Wings flapping\"\n\nclass Swallow:\n    def __init__(self):\n        self.wings = Wings()\n\n    def fly(self):\n        return self.wings.flap()\n</code></pre>"},{"location":"python2/oop/dependency_injection.html","title":"Wstrzykiwanie zale\u017cno\u015bci (Dependency Injection)","text":"<p>Wstrzykiwanie zale\u017cno\u015bci (Dependency Injection, DI) to wzorzec projektowy u\u017cywany w programowaniu do zmniejszenia zale\u017cno\u015bci mi\u0119dzy komponentami oprogramowania.</p> <p>G\u0142\u00f3wnym celem jest zwi\u0119kszenie modularno\u015bci i u\u0142atwienie testowania poprzez oddzielanie tworzenia obiektu od jego u\u017cywania.</p> <p>W DI, zale\u017cno\u015bci obiektu (np. serwisy lub dane) s\u0105 dostarczane do niego z zewn\u0105trz, zamiast by\u0107 tworzone wewn\u0105trz obiektu.</p> <p>Na co nale\u017cy uwa\u017ca\u0107:</p> <ol> <li>Nadu\u017cywanie: Zbyt wiele wstrzykiwanych zale\u017cno\u015bci mo\u017ce uczyni\u0107 kod trudnym do zrozumienia i zarz\u0105dzania.</li> <li>Cykliczne zale\u017cno\u015bci: Gdy dwa obiekty wzajemnie od siebie zale\u017c\u0105, mo\u017ce to prowadzi\u0107 do problem\u00f3w z inicjalizacj\u0105.</li> <li>Zarz\u0105dzanie \u017cywotno\u015bci\u0105: Nale\u017cy zwr\u00f3ci\u0107 uwag\u0119 na to, kiedy obiekt jest tworzony, kiedy jest u\u017cywany i kiedy jest niszczony.</li> </ol> <pre><code>class DatabaseService:\n    def get_data(self):\n        return \"Data from database\"\n\nclass Logger:\n    def log(self, message):\n        print(f\"Log: {message}\")\n\nclass Application:\n    def __init__(self, database_service, logger):\n        self.database_service = database_service\n        self.logger = logger\n\n    def run(self):\n        data = self.database_service.get_data()\n        self.logger.log(f\"Application used data: {data}\")\n\n# Create dependencies\ndatabase_service = DatabaseService()\nlogger = Logger()\n\n# Inject dependencies to the Application\napp = Application(database_service, logger)\napp.run()\n</code></pre>"},{"location":"python2/oop/design_patterns.html","title":"Wzorce projektowe","text":"<p>Wzorce projektowe to sprawdzone rozwi\u0105zania do cz\u0119sto wyst\u0119puj\u0105cych problem\u00f3w w projektowaniu oprogramowania. S\u0105 to techniki tworzenia oprogramowania, kt\u00f3re mo\u017cna stosowa\u0107 w r\u00f3\u017cnych sytuacjach. Wzorce projektowe dziel\u0105 si\u0119 na trzy g\u0142\u00f3wne kategorie: wzorce kreacyjne, strukturalne i behawioralne. Ka\u017cda kategoria odpowiada na r\u00f3\u017cne potrzeby projektowe i rozwi\u0105zuje odmienne problemy. </p>"},{"location":"python2/oop/design_patterns.html#kreacyjne","title":"Kreacyjne","text":"<p>Koncentruj\u0105 si\u0119 na mechanizmach tworzenia obiekt\u00f3w. U\u0142atwiaj\u0105 one proces tworzenia instancji, pozwalaj\u0105c na wi\u0119ksz\u0105 elastyczno\u015b\u0107 i ponowne u\u017cycie kodu. Popularne wzorce kreacyjne to mi\u0119dzy innymi Singleton, Fabryka, Prototyp i Budowniczy. </p>"},{"location":"python2/oop/design_patterns.html#strukturalne","title":"Strukturalne","text":"<p>Skoncentrowane na sposobach organizacji klas i obiekt\u00f3w w celu tworzenia wi\u0119kszych struktur. U\u0142atwiaj\u0105 one zarz\u0105dzanie relacjami mi\u0119dzy obiektami i zwi\u0119kszaj\u0105 elastyczno\u015b\u0107. Do popularnych wzorc\u00f3w strukturalnych nale\u017c\u0105: Adapter, Dekorator, Fasada i Kompozyt.</p>"},{"location":"python2/oop/design_patterns.html#behawioralne","title":"Behawioralne","text":"<p>Koncentruj\u0105 si\u0119 na komunikacji mi\u0119dzy obiektami. Zajmuj\u0105 si\u0119 efektywnym rozwi\u0105zaniem problem\u00f3w zwi\u0105zanych z interakcjami i odpowiedzialno\u015bciami mi\u0119dzy obiektami. Do najpopularniejszych wzorc\u00f3w behawioralnych nale\u017c\u0105: Obserwator, Strategia, Stan i \u0141a\u0144cuch odpowiedzialno\u015bci.</p>"},{"location":"python2/oop/mixin.html","title":"Klasy domieszkowe (Mixin)","text":"<p>Klasy domieszkowe, znane jako Mixin, to specjalny rodzaj klas w programowaniu obiektowym, kt\u00f3re s\u0142u\u017c\u0105 do dodawania dodatkowych funkcji do klas bez konieczno\u015bci u\u017cywania dziedziczenia w klasyczny spos\u00f3b (dziedziczenia hierarchicznego). </p> <p>Klasy Mixin nie s\u0105 przeznaczone do samodzielnego u\u017cycia, ale do w\u0142\u0105czania ich funkcjonalno\u015bci do innych klas poprzez wielokrotne dziedziczenie. Pozwalaj\u0105 na bardziej elastyczne i modu\u0142owe projektowanie kodu.</p> <pre><code>import json\n\nclass JsonSerializableMixin:\n    def to_json(self):\n        return json.dumps(self.__dict__)\n\nclass LoggerMixin:\n    def log(self, message):\n        print(f\"Logging: {message}\")\n\nclass Product(JsonSerializableMixin, LoggerMixin):\n    def __init__(self, name, price):\n        self.name = name\n        self.price = price\n\n    def update_price(self, new_price):\n        self.price = new_price\n        self.log(f\"Price updated to {new_price}\")\n</code></pre>"},{"location":"python2/oop/oop_app.html","title":"Zadanie","text":"<p>Celem zadania jest stworzenie aplikacji do pobierania kurs\u00f3w walut ze strony http://api.nbp.pl i wy\u015bwietlania jej w formie tabeli.</p>"},{"location":"python2/oop/oop_app.html#wymagania-wstepne","title":"Wymagania wst\u0119pne","text":"<p>Przed realizacj\u0105 zadnia nale\u017cy zainstalowa\u0107 nast\u0119puj\u0105ce pakiety:</p> <pre><code>lxml==5.1.0\nrequests==2.31.0\nrich==13.7.1\n</code></pre>"},{"location":"python2/oop/oop_app.html#zadanie-1","title":"Zadanie 1","text":"<p>Stw\u00f3rz klasy typu <code>@dataclass</code> s\u0142u\u017c\u0105ce do przechowywania danych o tabelach kursowych i kursach walut</p> <pre><code>from dataclasses import dataclass\n\n@dataclass\nclass ExchangeRate:\n    currency: str\n    code: str\n    ask_rate: float\n    bid_rate: float\n\n@dataclass\nclass ExchangeRateTable:\n    name: str\n    effective_date: datetime\n    rates: list[ExchangeRate] = field(default_factory=list)\n</code></pre> <p>Do klasy <code>ExchangeRateTable</code> dodaj metod\u0119 klasow\u0105 (classmethod), kt\u00f3ra b\u0119dzie s\u0142u\u017cy\u0142a do stworzenia klasy <code>ExchangeRateTable</code>, jednak pozwoli na u\u017cycie daty w formacie ROK-MIESI\u0105C-DZIE\u0144 (np. <code>2024-01-31</code>) zamiast obiektu datetime.</p>"},{"location":"python2/oop/oop_app.html#zadanie-2","title":"Zadanie 2","text":"<p>Stw\u00f3rz klas\u0119 do pobierania danych kursowych <code>RatesDownloader</code>, kt\u00f3ra zaimplementuje metod\u0119 <code>get</code>. Metoda <code>get()</code> powinna:  - pobiera\u0107 dane o kursie dla danej daty przyj\u0119tej jako argument ze strony <code>http://api.nbp.pl</code> - konwertowa\u0107 dane pobrane ze strony na obiekt <code>ExchangeRateTable</code> i go zwraca\u0107</p> <p>Do pobierania danych ze strony mo\u017cna u\u017cy\u0107 modu\u0142u <code>requests</code></p> <p>Przyk\u0142ad pobiera dane dla dnia 2024-12-20</p> <pre><code>url = 'http://api.nbp.pl/api/exchangerates/tables/C/2024-12-20'\nparams = {'format': 'json'}\nresp = requests.get(url, params=params)\nresp.raise_for_status()\njson = resp.json()\n</code></pre> <p>Obiekt <code>resp</code> zawiera odpowied\u017a serwera, a metoda <code>.json()</code> konwertuje je na s\u0142ownik.</p>"},{"location":"python2/oop/oop_app.html#zadanie-3","title":"Zadanie 3","text":"<p>Zdefiniuj strategie pobierania danych. Serwis <code>http://api.nbp.pl</code> mo\u017ce zwraca\u0107 dane w formacie XML lub JSON. Zmodyfikuj klas\u0119 <code>RatesDownloader</code> tak aby przyjmowa\u0142a strategi\u0119 pobierania i konwersji danych z JSON lub XML. Interfejs strategii powinien by\u0107 zdefiniowany przy pomocy klasy abstrakcyjnej</p>"},{"location":"python2/oop/oop_app.html#przydatne-informacje","title":"Przydatne informacje:","text":"<pre><code>resp = requests.get(url, params=params)\nresp.raise_for_status()\n</code></pre> <ul> <li>obiekt <code>resp.text</code> - zawiera odpowied\u017a serwera jako string</li> </ul> <p>konwersja danych w formacie XML na obiekt <code>ExchangeRateTable</code></p> <pre><code>from lxml import etree\n</code></pre> <pre><code>data = data.encode('utf-8')\nparser = etree.XMLParser(recover=True, encoding='utf-8')\ntree = etree.fromstring(data, parser=parser)\ntable_name = tree.xpath('//ExchangeRatesTable/No')[0].text\neffective_date = tree.xpath('//ExchangeRatesTable/EffectiveDate')[0].text\nrates = [ExchangeRate(rate.xpath('./Currency/text()')[0],\n                        rate.xpath('./Code/text()')[0],\n                        rate.xpath('./Ask/text()')[0],\n                        rate.xpath('./Bid/text()')[0]) for rate in tree.xpath('//ExchangeRatesTable/Rates/Rate')]\ntable = ExchangeRateTable(table_name, effective_date, rates)\n</code></pre>"},{"location":"python2/oop/oop_app.html#zadanie-4","title":"Zadanie 4","text":"<p>Dany jest obiekt tworz\u0105cy i wy\u015bwietlaj\u0105cy raport o kursach</p> <pre><code>from rich.console import Console\nfrom rich.table import Table\n\nclass RatesReport:\n    def __init__(self, header: str | None = None,\n                 footer: str | None = None,\n                 rows: Iterable[tuple[str, str, str, str]] | None = None):\n        self.header = header\n        self.footer = footer\n        self.rows = rows if rows is not None else []\n\n    def render(self) -&gt; None:\n        table = Table(title=self.header)\n        table.add_column('Nazwa waluty')\n        table.add_column('Symbol waluty')\n        table.add_column('Cena sprzeda\u017cy')\n        table.add_column('Cena zakupu')\n        for row in self.rows:\n            table.add_row(*row)\n        console = Console()\n        console.print(table)\n        if self.footer:\n            console.print(self.footer)\n</code></pre> <p>Stw\u00f3rz obiekt <code>RatesReportBuilder</code> wykorzystuj\u0105cy wzorzec dekoratora. Obiekt powinien dawa\u0107 mo\u017cliwo\u015b\u0107 dodawania nag\u0142\u00f3wka, stopki oraz wierszy do tabeli.</p> <p>Mo\u017cna stworzy\u0107 dwie metody do dodawania wierszy, jedn\u0105 dodaj\u0105c\u0105 jeden wiersz i drug\u0105 dodaj\u0105c\u0105 wiele wierszy naraz.</p>"},{"location":"python2/oop/oop_app.html#zadanie-5","title":"Zadanie 5","text":"<p>Wydziel klas\u0119 abstrakcyjn\u0105 <code>Downloader</code> okre\u015blaj\u0105c\u0105 interfejs kt\u00f3ry implementuje klasa <code>RatesDownloader</code>. Zmie\u0144 klas\u0119 <code>RatesDownloader</code> tak aby dziedziczy\u0142a po klasie abstrakcyjnej</p>"},{"location":"python2/oop/oop_app.html#zadanie-6","title":"Zadanie 6","text":"<p>Stw\u00f3rz klas\u0119 <code>CachedRatesDownloader</code> kt\u00f3ra b\u0119dzie stanowi\u0142a proxy dla klasy <code>RatesDownloader</code>. Powinna przechowywa\u0107 lokalne kopie tabeli <code>ExchangeTable</code> po pobraniu ich z internetu i korzysta\u0107 z nich je\u015bli istniej\u0105.</p> <p>*) W wariancie rozszerzonym mo\u017cna doda\u0107 maksymaln\u0105 pojemno\u015b\u0107 pami\u0119ci podr\u0119cznej i przy dodawaniu kolejnych kopii lokalnych tabel usuwa\u0107 najrzadziej pobierane.</p>"},{"location":"python2/oop/oop_exercises.html","title":"Zadania","text":""},{"location":"python2/oop/oop_exercises.html#zadanie-1","title":"Zadanie 1","text":"<p>Stw\u00f3rz hierarchi\u0119 klas reprezentuj\u0105cych r\u00f3\u017cne typy pojazd\u00f3w. Hierarchia powinna zawiera\u0107 klas\u0119 bazow\u0105 <code>Pojazd</code> oraz przynajmniej trzy klasy pochodne, np. <code>Samochod</code>, <code>Motocykl</code> i <code>Rower</code>. Zaimplementuj w klasach bazowej i pochodnych odpowiednie metody i atrybuty, np. metody do uruchamiania pojazdu, zatrzymywania, zmiany pr\u0119dko\u015bci itp.</p>"},{"location":"python2/oop/oop_exercises.html#zadanie-2","title":"Zadanie 2","text":"<p>Zaprojektuj klas\u0119 <code>Komputer</code>, kt\u00f3ra b\u0119dzie sk\u0142ada\u0142a si\u0119 z kilku mniejszych komponent\u00f3w, takich jak <code>Procesor</code>, <code>Pami\u0119\u0107RAM</code>, <code>DyskTwardy</code>. Ka\u017cdy z tych komponent\u00f3w powinien by\u0107 reprezentowany przez osobn\u0105 klas\u0119 z odpowiednimi metodami i atrybutami. Klasa <code>Komputer</code> powinna mie\u0107 metody do zarz\u0105dzania ca\u0142ym komputerem, np. uruchamiania, zamykania.</p>"},{"location":"python2/oop/oop_exercises.html#zadanie-3","title":"Zadanie 3","text":"<p>Utw\u00f3rz klas\u0119 domieszkow\u0105 <code>Zapisywalny</code>, kt\u00f3ra b\u0119dzie zawiera\u0107 metod\u0119 do zapisywania obiektu do pliku. Nast\u0119pnie utw\u00f3rz kilka klas, np. <code>Osoba</code>, <code>Zwierze</code>, kt\u00f3re b\u0119d\u0105 wykorzystywa\u0107 t\u0119 klas\u0119 domieszkow\u0105 do zapisywania swoich danych do pliku.</p>"},{"location":"python2/oop/oop_exercises.html#zadanie-4","title":"Zadanie 4","text":"<p>Stw\u00f3rz klas\u0119 abstrakcyjn\u0105 <code>Urz\u0105dzenieElektroniczne</code> z abstrakcyjnymi metodami <code>w\u0142\u0105cz</code> i <code>wy\u0142\u0105cz</code>. Nast\u0119pnie zaimplementuj kilka klas pochodnych, takich jak <code>Telewizor</code>, <code>Radio</code>, <code>Komputer</code>, kt\u00f3re b\u0119d\u0105 implementowa\u0107 te metody. Pomy\u015bl o specyficznych dla ka\u017cdego urz\u0105dzenia funkcjach.</p>"},{"location":"python2/oop/oop_exercises.html#zadanie-5","title":"Zadanie 5","text":"<p>Zaimplementuj prost\u0105 aplikacj\u0119 korzystaj\u0105c\u0105 z wstrzykiwania zale\u017cno\u015bci. Aplikacja powinna sk\u0142ada\u0107 si\u0119 z kilku klas: <code>EmailService</code>, <code>SMSService</code>, i <code>NotificationService</code>. <code>EmailService</code> i <code>SMSService</code> powinny mie\u0107 metody do wysy\u0142ania wiadomo\u015bci. <code>NotificationService</code> powinien wykorzystywa\u0107 jedn\u0105 z tych us\u0142ug do wysy\u0142ania powiadomie\u0144, zale\u017cnie od dostarczonej zale\u017cno\u015bci. Utw\u00f3rz instancje tych klas i przetestuj dzia\u0142anie aplikacji, demonstruj\u0105c elastyczno\u015b\u0107 wstrzykiwania zale\u017cno\u015bci.</p>"},{"location":"python2/oop/solid.html","title":"SOLID","text":"<p>SOLID to zbi\u00f3r zasad projektowania oprogramowania sformu\u0142owanych przez Roberta C. Martina. Jest to akronim, w kt\u00f3rym ka\u017cda litera reprezentuje inn\u0105 zasad\u0119: </p>"},{"location":"python2/oop/solid.html#single-responsibility-principle","title":"Single Responsibility Principle","text":"<p>Zasada jednej odpowiedzialno\u015bci, Klasa powinna mie\u0107 tylko jeden pow\u00f3d do zmiany. Oznacza to, \u017ce klasa powinna mie\u0107 tylko jedn\u0105 odpowiedzialno\u015b\u0107.</p> <pre><code>class User:\n    def __init__(self, name: str):\n        self.name = name\n\nclass UserManager:\n    def get_user(self, user_id: int) -&gt; User:\n        user = get_user_from_db()\n        return user\n\n    def save_user(self, user: User) -&gt; None:\n        save_user_to_db()\n</code></pre>"},{"location":"python2/oop/solid.html#openclosed-principle","title":"Open/Closed Principle","text":"<p>Zasada otwarte/zamkni\u0119te, wed\u0142ug kt\u00f3rej oprogramowanie powinno by\u0107 otwarte na rozszerzenia, ale zamkni\u0119te na modyfikacje.</p> <pre><code>class Shape:\n    def area(self) -&gt; float:\n        raise NotImplementedError\n\nclass Rectangle(Shape):\n    def __init__(self, width: float, height: float):\n        self.width = width\n        self.height = height\n\n    def area(self) -&gt; float:\n        return self.width * self.height\n\nclass Circle(Shape):\n    def __init__(self, radius: float):\n        self.radius = radius\n\n    def area(self) -&gt; float:\n        return 3.14 * self.radius ** 2\n</code></pre>"},{"location":"python2/oop/solid.html#liskov-substitution-principle","title":"Liskov Substitution Principle","text":"<p>Zasada podstawienia Liskov, kt\u00f3ra m\u00f3wi, \u017ce obiekty w programie powinny by\u0107 zast\u0119powalne przez instancje ich podtyp\u00f3w bez wp\u0142ywu na poprawno\u015b\u0107 programu.</p> <pre><code>from abc import ABC, abstractmethod\n\nclass Bird(ABC):\n    @abstractmethod\n    def move(self):\n        pass\n\nclass FlyingBird(Bird):\n    def move(self):\n        return \"Fly\"\n\nclass NonFlyingBird(Bird):\n    def move(self):\n        return \"Walk\"\n\nclass Sparrow(FlyingBird):\n    pass\n\nclass Ostrich(NonFlyingBird):\n    pass\n\nbirds = [Sparrow(), Ostrich()]\nfor bird in birds:\n    print(bird.move())\n</code></pre>"},{"location":"python2/oop/solid.html#interface-segregation-principle","title":"Interface Segregation Principle","text":"<p>Zasada segregacji/podzia\u0142u interfejsu, zalecaj\u0105ca tworzenie w\u0105sko ukierunkowanych interfejs\u00f3w zamiast jednego og\u00f3lnego.</p> <pre><code>from abc import ABC, abstractmethod\n\nclass Printer(ABC):\n    @abstractmethod\n    def print_document(self, document: str):\n        pass\n\nclass Scanner(ABC):\n    @abstractmethod\n    def scan_document(self) -&gt; str:\n        pass\n\nclass Fax(ABC):\n    @abstractmethod\n    def send_fax(self, document: str):\n        pass\n\nclass MultiFunctionPrinter(Printer, Scanner, Fax):\n    def print_document(self, document: str):\n        print(f\"Printing: {document}\")\n\n    def scan_document(self) -&gt; str:\n        return \"Scanned Document\"\n\n    def send_fax(self, document: str):\n        print(f\"Sending Fax: {document}\")\n\nmfp = MultiFunctionPrinter()\nmfp.print_document(\"Daily Report\")\nprint(mfp.scan_document())\nmfp.send_fax(\"Invoice\")\n</code></pre>"},{"location":"python2/oop/solid.html#dependency-inversion-principle","title":"Dependency Inversion Principle","text":"<p>Zasada odwr\u00f3cenia zale\u017cno\u015bci, kt\u00f3ra m\u00f3wi, \u017ce modu\u0142y wysokopoziomowe nie powinny zale\u017ce\u0107 od modu\u0142\u00f3w niskopoziomowych, ale oba powinny zale\u017ce\u0107 od abstrakcji.</p> <pre><code>from abc import ABC, abstractmethod\n\nclass Logger(ABC):\n    @abstractmethod\n    def log(self, message: str):\n        pass\n\nclass FileLogger(Logger):\n    def log(self, message: str):\n        print(f\"Logging to file: {message}\")\n\nclass DBLogger(Logger):\n    def log(self, message: str):\n        print(f\"Logging to DB: {message}\")\n\nclass MessageService:\n    def __init__(self, logger: Logger):\n        self.logger = logger\n\n    def process_messages(self, message: str):\n        # Process message\n        self.logger.log(message)\n\n\nfile_logger = FileLogger()\ndb_logger = DBLogger()\n\nservice = MessageService(db_logger)\nservice.process_messages(\"Important message\")\n</code></pre>"},{"location":"python2/oop/design_patterns/builder.html","title":"Budowniczy (Builder)","text":""},{"location":"python2/oop/design_patterns/builder.html#builder","title":"Builder","text":"<p>Builder (Budowniczy) to wzorzec projektowy z kategorii kreacyjnych, kt\u00f3ry umo\u017cliwia tworzenie z\u0142o\u017conych obiekt\u00f3w krok po kroku. Jest szczeg\u00f3lnie u\u017cyteczny, gdy obiekt musi by\u0107 stworzony w wielu r\u00f3\u017cnych konfiguracjach. Builder oddziela konstrukcj\u0119 obiektu od jego reprezentacji, co pozwala na u\u017cywanie tego samego procesu konstrukcyjnego do tworzenia r\u00f3\u017cnych reprezentacji.</p>"},{"location":"python2/oop/design_patterns/builder.html#builder-punkty-kluczowe","title":"Builder - Punkty Kluczowe","text":"<ul> <li>Kategoria: Kreacyjny</li> <li>Cel: Tworzenie z\u0142o\u017conych obiekt\u00f3w krok po kroku</li> <li>Zastosowanie: Obiekty z wieloma konfiguracjami</li> <li>Zalety: Modularno\u015b\u0107, oddzielenie konstrukcji od reprezentacji</li> <li>Wady: Zwi\u0119kszenie z\u0142o\u017cono\u015bci kodu</li> </ul>"},{"location":"python2/oop/design_patterns/builder.html#kod","title":"Kod","text":"<pre><code>class Car:\n    def __init__(self):\n        self.wheels = None\n        self.engine = None\n\nclass CarBuilder:\n    def __init__(self):\n        self.car = Car()\n\n    def addWheels(self, number):\n        self.car.wheels = number\n        return self\n\n    def addEngine(self, engine_type):\n        self.car.engine = engine_type\n        return self\n\n    def build(self):\n        return self.car\n\nbuilder = CarBuilder()\ncar = builder.addWheels(4).addEngine(\"V8\").build()\n</code></pre>"},{"location":"python2/oop/design_patterns/builder.html#diagram-klas","title":"Diagram klas","text":"<pre><code>classDiagram\n    class CarBuilder {\n        -Car car\n        +addWheels(number) CarBuilder\n        +addEngine(engine_type) CarBuilder\n        +build() Car\n    }\n    class Car {\n        -int wheels\n        -string engine\n    }\n    CarBuilder --&gt; Car : builds</code></pre>"},{"location":"python2/oop/design_patterns/dp_exercises.html","title":"Zadania","text":""},{"location":"python2/oop/design_patterns/dp_exercises.html#zadanie-1","title":"Zadanie 1","text":"<p>Stw\u00f3rz klas\u0119 <code>DatabaseConnection</code>, kt\u00f3ra b\u0119dzie implementowa\u0107 wzorzec Singleton. Klasa ta ma symulowa\u0107 po\u0142\u0105czenie z baz\u0105 danych i posiada\u0107 metod\u0119 <code>connect()</code>, zwracaj\u0105c\u0105 informacj\u0119 o po\u0142\u0105czeniu.</p>"},{"location":"python2/oop/design_patterns/dp_exercises.html#zadanie-2","title":"Zadanie 2","text":"<p>Zaprojektuj i zaimplementuj wzorzec Builder dla klasy <code>House</code> z atrybutami takimi jak liczba pokoi, liczba okien, rodzaj dachu.</p>"},{"location":"python2/oop/design_patterns/dp_exercises.html#zadanie-3","title":"Zadanie 3","text":"<p>Zaimplementuj wzorzec Facade dla skomplikowanego systemu audio. Fasada powinna umo\u017cliwia\u0107 \u0142atwe w\u0142\u0105czanie i wy\u0142\u0105czanie systemu.</p>"},{"location":"python2/oop/design_patterns/dp_exercises.html#zadanie-4","title":"Zadanie 4","text":"<p>Zaimplementuj wzorzec Proxy dla klasy <code>SecureFileAccess</code>, kontroluj\u0105cej dost\u0119p do plik\u00f3w. Proxy powinno sprawdza\u0107 uprawnienia przed dost\u0119pem.</p> <ol> <li>Stw\u00f3rz klas\u0119 abstrakcyjn\u0105 <code>AbstractFileAccess</code> z metod\u0105 <code>read_file()</code>.</li> <li>Zaimplementuj <code>FileAccess</code> z metod\u0105 <code>read_file()</code>.</li> <li>Utw\u00f3rz <code>SecureFileAccess</code> jako Proxy do sprawdzania uprawnie\u0144.</li> </ol>"},{"location":"python2/oop/design_patterns/dp_exercises.html#zadanie-5","title":"Zadanie 5","text":"<p>Zaprojektuj i zaimplementuj wzorzec Strategy dla aplikacji do przetwarzania obraz\u00f3w z r\u00f3\u017cnymi algorytmami filtracji.</p> <ol> <li>Zdefiniuj interfejs <code>FilterStrategy</code> z metod\u0105 <code>apply()</code>.</li> <li>Stw\u00f3rz konkretne strategie filtracji, np. <code>BlackAndWhiteFilter</code>.</li> <li>U\u017cyj klasy <code>ImageProcessor</code> do zastosowania wybranej strategii.</li> </ol>"},{"location":"python2/oop/design_patterns/dp_exercises.html#zadanie-zbiorcze","title":"Zadanie zbiorcze","text":"<p>Stw\u00f3rz klasy do aplikacji zarz\u0105dzania bibliotek\u0105 z uwzgl\u0119dnieniem poznanych praktyk programowania zorientowanego obiektowo oraz wzorc\u00f3w projektowych. W realizacji u\u017cyj dataclass, Enum.</p>"},{"location":"python2/oop/design_patterns/dp_exercises.html#sugestie-do-realizacji-mozna-zaimplementowac-wg-swoich","title":"Sugestie do realizacji (mo\u017cna zaimplementowa\u0107 wg. swoich)","text":"<ul> <li><code>Book</code> - klasa reprezentuj\u0105ca ksi\u0105\u017ck\u0119.</li> <li><code>User</code> - klasa reprezentuj\u0105ca u\u017cytkownika biblioteki.</li> <li><code>Loan</code> - klasa reprezentuj\u0105ca wypo\u017cyczenie ksi\u0105\u017cki.</li> </ul> <ul> <li><code>BookFactory</code> - klasa do tworzenia r\u00f3\u017cnych typ\u00f3w ksi\u0105\u017cek (np. naukowe, beletrystyka).</li> <li><code>LibraryManager</code> - klasa fasadowa zapewniaj\u0105ca uproszczony interfejs do zarz\u0105dzania bibliotek\u0105 (wypo\u017cyczenia, rezerwacje, zarz\u0105dzanie ksi\u0105\u017ckami i u\u017cytkownikami).</li> <li><code>SearchStrategy</code> - interfejs dla r\u00f3\u017cnych strategii wyszukiwania ksi\u0105\u017cek.</li> <li><code>TitleSearch</code>, <code>AuthorSearch</code>, <code>CategorySearch</code> - konkretne strategie implementuj\u0105ce SearchStrategy.</li> <li><code>BookQueryBuilder</code> - klasa do budowania z\u0142o\u017conych zapyta\u0144 wyszukiwania ksi\u0105\u017cek.</li> </ul>"},{"location":"python2/oop/design_patterns/facade.html","title":"Fasada (Facade)","text":"<p>Fasada (Facade) to wzorzec projektowy z kategorii strukturalnych, kt\u00f3ry polega na dostarczeniu uproszczonego interfejsu do z\u0142o\u017conego zestawu klas, bibliotek lub framework\u00f3w. Fasada umo\u017cliwia \u0142atwiejsz\u0105 interakcj\u0119 z skomplikowanym systemem poprzez stworzenie jednolitego interfejsu, co u\u0142atwia korzystanie z systemu bez konieczno\u015bci zrozumienia jego wewn\u0119trznej z\u0142o\u017cono\u015bci.</p>"},{"location":"python2/oop/design_patterns/facade.html#fasada-punkty-kluczowe","title":"Fasada - Punkty Kluczowe","text":"<ul> <li>Kategoria: Strukturalny</li> <li>Cel: Uproszczenie interfejsu z\u0142o\u017conych system\u00f3w</li> <li>Zastosowanie: Interakcja z skomplikowanymi systemami</li> <li>Zalety: \u0141atwo\u015b\u0107 u\u017cycia, izolacja od z\u0142o\u017cono\u015bci</li> <li>Wady: Mo\u017cliwo\u015b\u0107 ograniczenia funkcjonalno\u015bci</li> </ul>"},{"location":"python2/oop/design_patterns/facade.html#kod","title":"Kod","text":"<pre><code>class SubsystemOne:\n    def operation(self):\n        return \"SubsystemOne: Ready!\"\n\nclass SubsystemTwo:\n    def operation(self):\n        return \"SubsystemTwo: Go!\"\n\nclass Facade:\n    def __init__(self):\n        self._subsystem_one = SubsystemOne()\n        self._subsystem_two = SubsystemTwo()\n\n    def operation(self):\n        results = []\n        results.append(self._subsystem_one.operation())\n        results.append(self._subsystem_two.operation())\n        return \"\\n\".join(results)\n\n# U\u017cycie\nfacade = Facade()\nprint(facade.operation())\n</code></pre>"},{"location":"python2/oop/design_patterns/facade.html#diagram-klas","title":"Diagram klas","text":"<pre><code>classDiagram\n    class Facade {\n        -SubsystemOne _subsystem_one\n        -SubsystemTwo _subsystem_two\n        +operation() string\n    }\n    class SubsystemOne {\n        +operation() string\n    }\n    class SubsystemTwo {\n        +operation() string\n    }\n    Facade --&gt; SubsystemOne\n    Facade --&gt; SubsystemTwo</code></pre>"},{"location":"python2/oop/design_patterns/factory.html","title":"Fabryka (Factory)","text":"<p>Fabryka (Factory) to wzorzec projektowy z kategorii kreacyjnych, kt\u00f3ry polega na tworzeniu obiekt\u00f3w bez wyznaczania dok\u0142adnej klasy obiektu do stworzenia. Umo\u017cliwia elastyczne tworzenie r\u00f3\u017cnych typ\u00f3w obiekt\u00f3w poprzez oddzielenie logiki tworzenia od logiki biznesowej. Jest u\u017cyteczny w sytuacjach, gdzie system powinien by\u0107 niezale\u017cny od sposobu tworzenia i reprezentacji swoich komponent\u00f3w.</p>"},{"location":"python2/oop/design_patterns/factory.html#factory-punkty-kluczowe","title":"Factory - Punkty Kluczowe","text":"<ul> <li>Kategoria: Kreacyjny</li> <li>Cel: Elastyczne tworzenie obiekt\u00f3w</li> <li>Zastosowanie: Tworzenie r\u00f3\u017cnych typ\u00f3w obiekt\u00f3w</li> <li>Zalety: Oddzielenie logiki tworzenia od biznesowej, \u0142atwo\u015b\u0107 w rozszerzaniu</li> <li>Wady: Mo\u017ce komplikowa\u0107 kod, je\u015bli liczba typ\u00f3w jest du\u017ca</li> </ul>"},{"location":"python2/oop/design_patterns/factory.html#kod","title":"Kod","text":"<pre><code>class Dog:\n    def speak(self):\n        return \"Woof!\"\n\nclass Cat:\n    def speak(self):\n        return \"Meow!\"\n\ndef get_pet(pet=\"dog\"):\n    pets = dict(dog=Dog(), cat=Cat())\n    return pets[pet]\n\npet = get_pet(\"cat\")\nprint(pet.speak())\n</code></pre>"},{"location":"python2/oop/design_patterns/factory.html#diagram-klas","title":"Diagram klas","text":"<pre><code>classDiagram\n    class AnimalFactory {\n        +getAnimal(type) Animal\n    }\n    class Dog {\n        +speak() string\n    }\n    class Cat {\n        +speak() string\n    }\n    AnimalFactory &lt;|-- Dog\n    AnimalFactory &lt;|-- Cat</code></pre>"},{"location":"python2/oop/design_patterns/proxy.html","title":"Proxy","text":"<p>Proxy to wzorzec projektowy nale\u017c\u0105cy do kategorii strukturalnych, kt\u00f3ry polega na dostarczeniu zast\u0119pczego lub zamiennika innego obiektu, aby kontrolowa\u0107 dost\u0119p do niego. Cz\u0119sto stosowany do op\u00f3\u017anionego \u0142adowania, kontrolowania dost\u0119pu, logowania i innych. Proxy mo\u017ce dzia\u0142a\u0107 jako po\u015brednik mi\u0119dzy klientem a docelowym obiektem, ukrywaj\u0105c jego rzeczywist\u0105 z\u0142o\u017cono\u015b\u0107 lub kosztowno\u015b\u0107 tworzenia.</p>"},{"location":"python2/oop/design_patterns/proxy.html#proxy-punkty-kluczowe","title":"Proxy - Punkty Kluczowe","text":"<ul> <li>Kategoria: Strukturalny</li> <li>Cel: Kontrola dost\u0119pu do obiektu</li> <li>Zastosowanie: Op\u00f3\u017anione \u0142adowanie, kontrola dost\u0119pu, logowanie</li> <li>Zalety: Ochrona obiektu docelowego, elastyczno\u015b\u0107</li> <li>Wady: Mo\u017cliwe op\u00f3\u017anienia, dodatkowa z\u0142o\u017cono\u015b\u0107</li> </ul>"},{"location":"python2/oop/design_patterns/proxy.html#diagram-klas","title":"Diagram klas","text":"<pre><code>classDiagram\n    class Proxy {\n        -RealSubject _real_subject\n        +request()\n        +check_access() bool\n        +log_access()\n    }\n    class RealSubject {\n        +request()\n    }\n    Proxy --&gt; RealSubject</code></pre>"},{"location":"python2/oop/design_patterns/singleton.html","title":"Singleton","text":"<p>Singleton to wzorzec projektowy nale\u017c\u0105cy do kategorii kreacyjnych, kt\u00f3ry ma na celu zapewnienie, \u017ce klasa ma tylko jedn\u0105 instancj\u0119 i zapewnia globalny punkt dost\u0119pu do tej instancji. Stosowany jest tam, gdzie potrzebna jest dok\u0142adnie jedna instancja obiektu, na przyk\u0142ad w zarz\u0105dzaniu po\u0142\u0105czeniem z baz\u0105 danych.</p>"},{"location":"python2/oop/design_patterns/singleton.html#singleton-punkty-kluczowe","title":"Singleton - Punkty Kluczowe","text":"<ul> <li>Kategoria: Kreacyjny</li> <li>Cel: Jedna instancja klasy</li> <li>Zastosowanie: Unikalne obiekty, np. po\u0142\u0105czenie z baz\u0105 danych</li> <li>Zalety: Kontrolowana instancja, \u0142atwy dost\u0119p</li> <li>Wady: Utrudniona elastyczno\u015b\u0107, potencjalne problemy w \u015brodowiskach wielow\u0105tkowych</li> </ul>"},{"location":"python2/oop/design_patterns/singleton.html#kod","title":"Kod","text":"<pre><code>class Singleton:\n    _instance = None\n\n    @staticmethod\n    def get_instance():\n        if Singleton._instance is None:\n            Singleton()\n        return Singleton._instance\n\n    def __init__(self):\n        if Singleton._instance is not None:\n            raise Exception(\"This class is a singleton!\")\n        else:\n            Singleton._instance = self\n\nsingleton = Singleton.get_instance()\n</code></pre> <pre><code>class Singleton:\n    _instance = None\n    def __new__(cls, *args, **kwargs):\n        if not isinstance(cls._instance, cls):\n            cls._instance = super().__new__(cls, *args, **kwargs)\n        return cls._instance\n\nclass MyClass(Singleton):\n    pass\n</code></pre> <pre><code>class SingletonMeta(type):\n    _instances = {}\n\n    def __call__(cls, *args, **kwargs):\n        if cls not in cls._instances:\n            instance = super().__call__(*args, **kwargs)\n            cls._instances[cls] = instance\n        return cls._instances[cls]\n\n\nclass Singleton(metaclass=SingletonMeta):\n    def operation(self):\n        pass\n\n\nif __name__ == \"__main__\":\n    s1 = Singleton()\n    s2 = Singleton()\n\n    print(f'{id(s1)=} {id(s2)=}')\n</code></pre>"},{"location":"python2/oop/design_patterns/singleton.html#diagram-klas","title":"Diagram klas","text":"<pre><code>classDiagram\n    class Singleton {\n      -Singleton _instance\n      +getInstance() Singleton\n      -Singleton()\n    }</code></pre>"},{"location":"python2/oop/design_patterns/strategy.html","title":"Strategia (Strategy)","text":""},{"location":"python2/oop/design_patterns/strategy.html#strategy","title":"Strategy","text":"<p>Strategy (Strategia) to wzorzec projektowy z kategorii behawioralnych, kt\u00f3ry umo\u017cliwia definiowanie rodziny algorytm\u00f3w, umieszczenie ka\u017cdego z nich w osobnej klasie oraz ich zamienne u\u017cywanie. Wzorzec ten pozwala na zmian\u0119 zachowania obiektu poprzez zmian\u0119 jego sk\u0142adnika reprezentuj\u0105cego konkretn\u0105 strategi\u0119, co zwi\u0119ksza elastyczno\u015b\u0107 i umo\u017cliwia lepsze zarz\u0105dzanie algorytmami.</p>"},{"location":"python2/oop/design_patterns/strategy.html#strategy-punkty-kluczowe","title":"Strategy - Punkty Kluczowe","text":"<ul> <li>Kategoria: Behawioralny</li> <li>Cel: Zmiana algorytmu w trakcie dzia\u0142ania programu</li> <li>Zastosowanie: R\u00f3\u017cne sposoby wykonania operacji</li> <li>Zalety: Separacja algorytm\u00f3w, \u0142atwo\u015b\u0107 wymiany, lepsza testowalno\u015b\u0107</li> <li>Wady: Mo\u017ce zwi\u0119kszy\u0107 z\u0142o\u017cono\u015b\u0107 kodu</li> </ul>"},{"location":"python2/oop/design_patterns/strategy.html#kod","title":"Kod","text":"<pre><code>class Strategy:\n    def execute(self):\n        pass\n\nclass ConcreteStrategyA(Strategy):\n    def execute(self):\n        print(\"Executing strategy A\")\n\nclass ConcreteStrategyB(Strategy):\n    def execute(self):\n        print(\"Executing strategy B\")\n\nclass Context:\n    def __init__(self, strategy):\n        self._strategy = strategy\n\n    def execute_strategy(self):\n        self._strategy.execute()\n\nstrategyA = ConcreteStrategyA()\ncontext = Context(strategyA)\ncontext.execute_strategy()\n\nstrategyB = ConcreteStrategyB()\ncontext = Context(strategyB)\ncontext.execute_strategy()\n</code></pre>"},{"location":"python2/oop/design_patterns/strategy.html#diagram-klas","title":"Diagram klas","text":"<pre><code>classDiagram\n    class Strategy {\n        &lt;&lt;interface&gt;&gt;\n        +execute()\n    }\n    class ConcreteStrategyA {\n        +execute()\n    }\n    class ConcreteStrategyB {\n        +execute()\n    }\n    class Context {\n        -Strategy _strategy\n        +execute_strategy()\n    }\n    Strategy &lt;|.. ConcreteStrategyA\n    Strategy &lt;|.. ConcreteStrategyB\n    Context --&gt; Strategy : has</code></pre>"},{"location":"python2/pytest/intro.html","title":"pytest","text":"<p><code>pytest</code> to popularny framework do testowania kodu w Pythonie.</p> <ul> <li>Stosunkowo niski pr\u00f3g wej\u015bcia</li> <li>Du\u017ce mo\u017cliwo\u015bci</li> <li>Rozszerzalny</li> </ul>"},{"location":"python2/pytest/intro.html#instalacja","title":"instalacja","text":"<pre><code>pip install pytest\n</code></pre>"},{"location":"python2/pytest/intro.html#uruchomienie","title":"uruchomienie","text":"<pre><code>pytest --version\n\npytest --help\n</code></pre>"},{"location":"python2/pytest/mock.html","title":"pytest-mock","text":"<pre><code>def test_send_email(mocker):\n    # Mockowanie funkcji\n    mock_send_email = mocker.patch(\"path.to.send_email\")\n\n    # Wywo\u0142anie funkcji, kt\u00f3ra u\u017cywa send_email\n    perform_action_that_sends_email()\n\n    # Sprawdzenie, czy mock zosta\u0142 wywo\u0142any\n    mock_send_email.assert_called_once()\n</code></pre>"},{"location":"python2/pytest/mock.html#mockowanie-wartosci-zwracanej","title":"Mockowanie warto\u015bci zwracanej","text":"<p>Mo\u017cesz okre\u015bli\u0107 warto\u015b\u0107 zwracan\u0105 przez mock, aby testowa\u0107 r\u00f3\u017cne scenariusze.</p> <pre><code>def test_database_query(mocker):\n    # Mockowanie z okre\u015blon\u0105 warto\u015bci\u0105 zwracan\u0105\n    mock_query = mocker.patch(\"database.query\", return_value={\"id\": 1, \"name\": \"Test\"})\n\n    # Wywo\u0142anie funkcji wykorzystuj\u0105cej mock\n    result = get_user_data()\n\n    # Sprawdzenie wyniku\n    assert result == {\"id\": 1, \"name\": \"Test\"}\n</code></pre>"},{"location":"python2/pytest/mock.html#mockowanie-zgaszania-wyjatkow","title":"Mockowanie zg\u0142aszania wyj\u0105tk\u00f3w","text":"<pre><code>def test_error_handling(mocker):\n    # Mockowanie funkcji tak, aby rzuci\u0142a wyj\u0105tek\n    mocker.patch(\"module.function\", side_effect=Exception(\"Error\"))\n\n    # Testowanie, czy wyj\u0105tek jest prawid\u0142owo obs\u0142ugiwany\n    with pytest.raises(Exception) as excinfo:\n        module.function()\n    assert \"Error\" in str(excinfo.value)\n</code></pre>"},{"location":"python2/pytest/mock.html#mockowanie-obiektow","title":"Mockowanie obiekt\u00f3w","text":"<p>Mockowanie ca\u0142ych obiekt\u00f3w pozwala na kontrol\u0119 nad ich zachowaniem i stanem.</p> <pre><code>class ExternalService:\n    def send_data(self, data):\n        pass\n\ndef test_external_service(mocker):\n    # Mockowanie ca\u0142ego obiektu\n    mock_service = mocker.Mock(spec=ExternalService)\n\n    # U\u017cycie mocka\n    mock_service.send_data(\"data\")\n\n    # Sprawdzenie, czy funkcja zosta\u0142a wywo\u0142ana\n    mock_service.send_data.assert_called_with(\"data\")\n</code></pre>"},{"location":"python2/pytest/mock.html#mockowanie-metod-instancji","title":"Mockowanie metod instancji","text":""},{"location":"python2/pytest/mock.html#5-mockowanie-metod-instancji","title":"5. Mockowanie Metod Instancji","text":"<pre><code>class SomeClass:\n    def some_method(self):\n        pass\n\ndef test_instance_method_mocking(mocker):\n    # Tworzenie instancji klasy\n    instance = SomeClass()\n\n    # Mockowanie metody instancji\n    mocker.patch.object(instance, 'some_method')\n\n    # U\u017cycie metody\n    instance.some_method()\n\n    # Sprawdzenie, czy metoda zosta\u0142a wywo\u0142ana\n    instance.some_method.assert_called_once()\n</code></pre>"},{"location":"python2/pytest/mock.html#side_effect","title":"side_effect","text":""},{"location":"python2/pytest/mock.html#symulacja-wyjatku","title":"Symulacja wyj\u0105tku","text":"<pre><code>def test_function_raises_exception(mocker):\n    # Mockowanie funkcji z rzucaniem wyj\u0105tku\n    mocker.patch(\"module.function\", side_effect=Exception(\"Test exception\"))\n\n    # Sprawdzenie, czy wywo\u0142anie funkcji rzuci wyj\u0105tek\n    with pytest.raises(Exception) as exc_info:\n        module.function()\n\n    assert \"Test exception\" in str(exc_info.value)\n</code></pre>"},{"location":"python2/pytest/mock.html#zwracanie-roznych-wartosci-podczas-wywoania","title":"Zwracanie r\u00f3\u017cnych warto\u015bci podczas wywo\u0142ania","text":"<pre><code>def test_function_returns_different_values(mocker):\n    # Mockowanie funkcji z zwracaniem r\u00f3\u017cnych warto\u015bci\n    mocker.patch(\"module.function\", side_effect=[1, 2, 3])\n\n    # Sprawdzenie zwracanych warto\u015bci przy kolejnych wywo\u0142aniach\n    assert module.function() == 1\n    assert module.function() == 2\n    assert module.function() == 3\n</code></pre>"},{"location":"python2/pytest/mock.html#uzycie-funkcji-do-tworzenia-wasnych-efektow-ubocznych","title":"U\u017cycie funkcji do tworzenia w\u0142asnych efekt\u00f3w ubocznych","text":"<pre><code>def custom_side_effect(*args, **kwargs):\n    return args[0] * 2\n\ndef test_custom_function_as_side_effect(mocker):\n    # U\u017cycie niestandardowej funkcji jako side_effect\n    mocker.patch(\"module.function\", side_effect=custom_side_effect)\n\n    # Sprawdzenie zachowania funkcji\n    assert module.function(5) == 10\n</code></pre>"},{"location":"python2/pytest/mock.html#symulacja-zmiany-stanu","title":"Symulacja zmiany stanu","text":"<pre><code>def state_changing_side_effect(input):\n    return \"processed \" + input\n\ndef test_state_changing_side_effect(mocker):\n    # Mockowanie z funkcj\u0105 zmieniaj\u0105c\u0105 stan\n    mock_function = mocker.patch(\"module.function\", side_effect=state_changing_side_effect)\n\n    # Sprawdzenie zachowania funkcji\n    assert module.function(\"data\") == \"processed data\"\n    mock_function.assert_called_with(\"data\")\n</code></pre>"},{"location":"python2/pytest/pytest_cli.html","title":"Uruchamianie test\u00f3w z linii polece\u0144","text":""},{"location":"python2/pytest/pytest_cli.html#automatyczne-wykrywanie-plikow-testowych","title":"Automatyczne wykrywanie plik\u00f3w testowych","text":"<pre><code>pytest\npytest -v # tryb verbose\npytest -q # tryb quiet\n</code></pre> <p>Domy\u015blnie <code>pytest</code> identyfikuje pliki testowe, kt\u00f3re zaczynaj\u0105 si\u0119 od <code>test_</code> lub ko\u0144cz\u0105 na <code>_test.py</code>. </p> <p>Przyk\u0142ad nazw plik\u00f3w, kt\u00f3re zostan\u0105 rozpoznane przez <code>pytest</code> jako pliki testowe.</p> <pre><code>test_example.py\nexample_test.py\n</code></pre>"},{"location":"python2/pytest/pytest_cli.html#uruchamianie-moduow","title":"Uruchamianie modu\u0142\u00f3w","text":"<p>Aby uruchomi\u0107 konkretny modu\u0142 testowy przy u\u017cyciu <code>pytest</code>, podaj \u015bcie\u017ck\u0119 do pliku testowego. Przyk\u0142ad:</p> <pre><code>pytest path/to/your_test_file.py\n</code></pre>"},{"location":"python2/pytest/pytest_cli.html#node-id","title":"Node ID","text":"<p>Node ID w <code>pytest</code> to unikalny identyfikator dla ka\u017cdego testu. Jest on tworzony na podstawie \u015bcie\u017cki do pliku testowego oraz nazwy funkcji testowej. </p> <p>Przyk\u0142ad:</p> <pre><code>pytest test_file.py::test_function\n\npytest test_mod.py::TestClass::test_method\n</code></pre>"},{"location":"python2/pytest/pytest_cli.html#oznaczenia-testow","title":"Oznaczenia test\u00f3w","text":"<p>Uruchomienie test\u00f3w oznaczonych znacznikiem <code>@pytest.mark.slow</code></p> <pre><code>@pytest.mark.slow\ndef test_slow_function():\n    pass\n</code></pre> <pre><code>pytest -m slow\n</code></pre> <p>Definiowanie w\u0142asnych znacznik\u00f3w w pliku <code>pytest.ini</code></p> <pre><code>[pytest]\nmarkers =\n    smoke: smoke tests\n    regression: regression tests\n</code></pre>"},{"location":"python2/pytest/pytest_fixtures.html","title":"Fixtures","text":"<p>Fixture w pytest to funkcja, kt\u00f3ra jest uruchamiana przed (a czasem tak\u017ce po) wykonaniem test\u00f3w. Umo\u017cliwia ona centralne przygotowanie i sprz\u0105tanie zasob\u00f3w potrzebnych do test\u00f3w, takich jak po\u0142\u0105czenia z bazami danych, pliki konfiguracyjne czy obiekty mockowe.</p> <pre><code>import pytest\n\n@pytest.fixture\ndef sample_fixture():\n    return \"sample value\"\n\ndef test_example(sample_fixture):\n    assert sample_fixture == \"sample value\"\n</code></pre>"},{"location":"python2/pytest/pytest_fixtures.html#wywoanie-fixture-przed-i-po-tescie","title":"Wywo\u0142anie fixture przed i po te\u015bcie","text":"<p>Fixture z kodem setup i teardown, przydatna do inicjalizacji i sprz\u0105tania zasob\u00f3w.</p> <pre><code>import pytest\n\n@pytest.fixture\ndef resource_fixture():\n    # Setup: inicjalizacja zasobu\n    resource = \"initialized resource\"\n    yield resource\n    # Teardown: sprz\u0105tanie po te\u015bcie\n    resource = None\n</code></pre>"},{"location":"python2/pytest/pytest_fixtures.html#fixture-z-parametrami","title":"Fixture z parametrami","text":"<pre><code>import pytest\n\n@pytest.fixture(params=[1, 2, 3])\ndef number_fixture(request):\n    return request.param\n\ndef test_numbers(number_fixture):\n    assert number_fixture in [1, 2, 3]\n</code></pre>"},{"location":"python2/pytest/pytest_fixtures.html#zozone-fixturey","title":"Z\u0142o\u017cone Fixture'y","text":"<pre><code>import pytest\n\n@pytest.fixture\ndef base_fixture():\n    return \"base\"\n\n@pytest.fixture\ndef dependent_fixture(base_fixture):\n    return base_fixture + \" extended\"\n\ndef test_dependent_fixture(dependent_fixture):\n    assert dependent_fixture == \"base extended\"\n</code></pre>"},{"location":"python2/pytest/pytest_fixtures.html#zakres-fixture","title":"Zakres Fixture","text":"<p>Zachowanie stanu Fixture mo\u017ce by\u0107 regulowane poprzez u\u017cycie zakres\u00f3w:</p> <ul> <li>function (domy\u015blny)</li> <li>class</li> <li>module</li> <li>session</li> </ul> <pre><code>@pytest.fixture(scope=\"session\")\ndef my_fixture():\n    # setup code\n    yield\n    # teardown code\n</code></pre>"},{"location":"python2/pytest/test_how_to.html","title":"Podstawy pisania test\u00f3w w pytest","text":"<pre><code># Przyk\u0142ad funkcji, kt\u00f3r\u0105 b\u0119dziemy testowa\u0107\ndef add(a, b):\n    return a + b\n\n# Test funkcji add\ndef test_add():\n    assert add(2, 3) == 5\n</code></pre>"},{"location":"python2/pytest/test_how_to.html#testowanie-wyjatkow","title":"Testowanie wyj\u0105tk\u00f3w","text":"<pre><code>import pytest\n\ndef divide(a, b):\n    return a / b\n\ndef test_divide_zero():\n    with pytest.raises(ZeroDivisionError):\n        divide(10, 0)\n</code></pre>"},{"location":"python2/pytest/test_how_to.html#proste-fixtures","title":"Proste fixtures","text":"<p>Fixtures w pytest umo\u017cliwiaj\u0105 inicjalizacj\u0119 danych przed ka\u017cdym testem. Ten test u\u017cywa fixture <code>example_data</code>, aby dostarczy\u0107 dane do testu.</p> <pre><code>import pytest\n\n@pytest.fixture\ndef example_data():\n    return [1, 2, 3, 4, 5]\n\ndef test_average(example_data):\n    assert sum(example_data) / len(example_data) == 3\n</code></pre>"},{"location":"python2/pytest/test_how_to.html#parametryzacja-testow","title":"Parametryzacja test\u00f3w","text":"<p>Parametryzacja pozwala na uruchamianie tego samego testu z r\u00f3\u017cnymi zestawami danych. Ten test sprawdza funkcj\u0119 <code>multiply</code> z r\u00f3\u017cnymi parametrami.</p> <pre><code>def multiply(a, b):\n    return a * b\n\n@pytest.mark.parametrize(\"a, b, expected\", [(2, 3, 6), (4, 5, 20), (6, 7, 42)])\ndef test_multiply(a, b, expected):\n    assert multiply(a, b) == expected\n</code></pre>"}]}